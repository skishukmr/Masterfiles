<w:ModalPageWrapper title="Filter Table" okAction="$okAction">
    <t:DataTable displayGroup="$displayGroup" item="$iter" multiSelect="$true" submitOnSelectionChange="$true" enableScrolling="$true">
        <t:HeadingArea>
            <div style="float:left">
                Filter: <a:Popup list="$filterKeys" item="$iter" selection="$selectedFilterKey" action="$updateValueList">$iter</a:Popup>
            </div>
        </t:HeadingArea>
        <t:Column label="Value">
            $iter
        </t:Column>
    </t:DataTable>
</w:ModalPageWrapper>
\
<groovy>
    def selectedFilterKey;
    def selectedFilterValues = null;
    def filterKeys;
    def allObjects;
    def okClosure;
    def displayGroup  = new AWTDisplayGroup();
    def NullMarker = "(None)";

    void init (list, keys, callback) {
        allObjects = list;
        filterKeys = keys;
        okClosure = callback;
        selectedFilterKey = filterKeys[0];
        updateValueList();
    }

    def safeNull (v) { return (v) ? v : NullMarker; }

    def updateValueList () {
        def s = new HashSet();
        allObjects.each { def v = it[selectedFilterKey]; s.add(safeNull(v)); };
        displayGroup.setObjectArray(new ArrayList(s));
        displayGroup.setSelectedObjects(displayGroup.allObjects());
    }

    def setSelectedFilterValue (value) {
        selectedFilterValue = value;
        // _resultList =  value ? allObjects.findAll() { it[selectedFilterKey] == value } : allObjects;
    }

    def okAction () {
        def selected = new HashSet(displayGroup.selectedObjects());
        def result =  allObjects.findAll() { selected.contains(safeNull(it[selectedFilterKey])) };
        return okClosure.call(result);
    }
</groovy>
