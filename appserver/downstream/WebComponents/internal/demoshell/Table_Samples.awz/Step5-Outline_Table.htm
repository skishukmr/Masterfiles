<w:HintMessage showTopLine="$true">
    Note -- using expandCurrentItem  and showExpansionControl to auto-open Jim_Spandler

</w:HintMessage>
<br/>

<!--- <x:LoadXML filename="Users.xml" value="$users"/>  list="$users.children"  -->

<t:DataTable multiSelect="$true" enableScrolling="$true" batchSize="10" item="$item"
        showOptionsMenu="$true"
        children="$item.manages.children"
        showExpansionControl = "$!isJimSpandler"
        showSelectionControl = "$!isJimSpandler"
        scopeSubcomponentsByItem="$true"        
        displayGroup="$displayGroup">

    <t:Column key="name.text" label="Name" nowrap>\
        <w:OutlineControl title="$item.name.text" action="$expansionClicked" indentationPerLevel="21" renderAsTable="$true"/>\
    </t:Column>

    <t:Column label="ID">$item.id</t:Column>

    <t:Column key="phone.text" label="Phone"/>

    <t:Column>
        <StatefulColorFlag/>
    </t:Column>
    
    <t:Column key="email.text" label="Email"/>
    <t:Column key="email.text" label="Email"/>
    <t:Column key="email.text" label="Email"/>

    <t:Column align="right" width="1%">
        <w:TextButton action="$markItem">Mark</w:TextButton>
    </t:Column>

    <t:ButtonArea>
        <w:TextButton action="$null">Delete</w:TextButton>\
        <w:TextButton action="$swap">Swap</w:TextButton>
    </t:ButtonArea>
</t:DataTable>
<br/>
<a:If notEqualNull="$markedItem">
    <div>$markedItem</div>
    <w:TextButton action="$makeVisible">Make Visible</w:TextButton>
</a:If>
<server>
    var displayGroup = null;
    var users;
    var markedItem;

    function init () {
        // prevent the sort!
        users = ariba.ui.demoshell.XMLFactory.xmlNamed("Users.xml", component);
        users = ariba.util.core.ListUtil.arrayToList(get(users, "children"));

        displayGroup = new ariba.ui.table.AWTDisplayGroup();
        displayGroup.setSortOrderings(ariba.util.core.ListUtil.list());
        displayGroup.setObjectArray(users);
    }

    function markItem ()
    {
        markedItem = ariba.util.core.ListUtil.cloneList(displayGroup.outlineState().currentPath());
        return null;
    }

    function makeVisible ()
    {
        displayGroup.setPathToForceVisible(markedItem);
        displayGroup.setSelectedObject(ariba.util.core.ListUtil.lastElement(markedItem));
        return null;
    }

    function swap () {
        var arr = displayGroup.allObjects();
        var first = arr.get(0);
        arr.remove(0);
        arr.add(1, first);
        displayGroup.setObjectArray(arr);
        return null;
    }

    function isJimSpandler ()
    {
        return get(displayGroup.currentItem(), "name.text").equals("Jim Spandler");
    }

    function expansionClicked ()
    {
    /*
        var v = displayGroup.outlineState().expansionPath().clone();
        // Log.demoshell.debug("path: %s", v);
        if (v && (v.count() > 0) && get(v.lastElement(), "name.text").equals("Jim Spandler")) {
            v.removeLastElement();
            displayGroup.outlineState().collapseAll();
            displayGroup.outlineState().setExpansionPath(v);
            // Log.demoshell.debug("new path: %s", v);
        }
    */
        return null;
    }
</server>
