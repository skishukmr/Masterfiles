<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE extension SYSTEM "../../../../ariba/base/meta/core/extensions.dtd">
<extension name="config.variants.SAP.extensions.CatSAPRequisitionExt">

	<!--
	*****************************************************************************************
	Change History
	Change# Change By       Change Date     Description
	==============================================================================================
	1       Santanu Dey       07-07-08      Created
	2       Sudheer K Jain    16-07-09      Added Supplier field in requisition search filter.
	3	Ashwini		  16-07-09 	Issue 967 -Adding GL as search filter for requisition
	4	Ashwini		  25-08-09 	Issue 967 -Adding GL as search filter label change
	5	Dharshan	  29-01-10	Issue 1017- Reduced the description length to 600
	6	Ravi		  21-04-10	CR 225 - making costcenter approver selection necessary when user costcenter and PR line costcenter are different
	7	Divya 		  12-05-10	CR 229 - making CompanyCode,BuyerCode as a search fileter in Requisition.
	8	Amit Gupta	  01-06-10	1127 - To copy tax code from contract line item into requisition line item
	9       Sandeep Vaishnav  06-08-10      Mexico Currency Conversion Issue Fix
	10	Vikram J Singh    29-06-10	Issue 1136 - Refresh MSC screen after Hazmat approver uncheck the Is Hazmat checkbox
	11      Sandeep Vaishnav  08-08-10      MACH1 2.5 Changes for Fixed Asset
	12      Sandeep Vaishnav  08-17-10      MACH1 Change to Add Radio button in order to identify if PR is to converted to Contract.
	13      Samir Sato        03-21-11      Migrated default validity conditions on AccountCategory to clustertype LineItemCollection
	14		Aswini M		  09-06-11	    Added Vertex Changes - TaxUse
	15      Aswini M 		  29-06-2011	Added Plant code logic changes
	16	    Soumya Mohanty	  19-10-2011	Added Tax Code Determination Logic
	17		Aswini M		  08-12-2011	Added Incoterms to Contract line item group for Vertex 
	18		Aswini M						Moved file once again
	19		Aswini M		  06-01-2012	Removed editability condition for Taxuse
	20		Soumya R		  19-01-2012	Changed the editability condition for Taxcode in ProcureLineItem class
    	21      Rahul Ranjan      21-02-2012    Issue 247 - Changes done for making ShipTo Default form User Profile for PR against Supplier level Contract.
    	22      Rajat Bajpai      30-04-2012    Added condition so that the asssess tax button is visible only in SAP partition.
    	23      Manoj .R          05-04-2012    WI 47 - Removed the Condition to check Requester is equal to Preparer.
	24      Bijesh Kumar      29-05-2012    WI 255 - CheckValidateAcctButton-Budget Check Logic for Account Type "F" and Company Code '1000'
	25	Abhishek Kumar	  24-07-2012	WI314 - IBM - Code added for defaulting MSDSNumber, IsHazmat and HazmatWeight from MALineItem to Requisition Level. 
	26	Abhishek Kumar	  01-10-2013	Code added for displaying Purchasing Contact Email Address in PO Print. 
	27      IBM AbhishekKumar 01-23-2013	Mach1 R5.5 (FRD2.1/TD2.1) Code added for displaying SoldTo Address in PO Print. 
	28.     IBM Niraj         02/21/2013    Added PLAFOND & ESTABLISHED in Supplier Location pull for MACH1 R5.5 Release
	29.	Jayashree	  20-03-2013	PO Conversion	
	30.    Mounika.K       10/06/2013  Issue 193  Added conditions for Additional Charge catalog
	31. 	IBM Niraj         03/21/2013    Mach1 R5.5 (FRD8.1/TD8.1) Added VAT Registration field in PO print
	32.    IBM Nandini Bheemaiah	22/08/2013  Q4 2013-RSD114-FDD5.0/TDD1.0    Delete Payment Term from ObjectDuplicate group under ProcureLineItem groupClass
	33.    IBM Nandini Bheemaiah	28/08/2013  Q4 2013-RSD119-FDD5.0/TDD1.0    Implement OIO Indicator functionality
	34.    01/14/2014    IBM-Mounika K     SpringRelease_RSD 193 (FDD_193_1.0 / TDD_193_4.0)	    Partial Catalog description is editable irrespective of Additional Charge Item
	35.    15/01/2014     IBM Parita Shah	SpringRelease_RSD 111(FDD4.1,4.2/TDD1.1,1.2) MSC Tax Gaps Correct Legal Entity
        36.    01/13/2014      IBM Jayashree B S     SpringRelease_RSD 140 (FDD_140_4.2 / TDD_140_2.0)   Supplier Filter on Search Screen
	**********************************************************************************************
	-->

	<import extension="ariba.variants.SAP.extensions.SAPRequisitionExt"/>
	<import extension="config.variants.SAP.extensions.CatSAPCoreExt"/>
	<import extension="config.variants.SAP.extensions.CatSAPProcureExt"/>
	<inModule name="ariba.common.meta.Requisition">


		<!-- ************************************** CLASSES ****************************************** -->
		<inClass name="ariba.receiving.core.ReceivableLineItemCollection">
			<inClassVariant name="SAP">

				<!-- Fields required for Budget Check *** Added by James *** Oct 04 2008 *** Start *** -->
				<field name="WBSElementText" nullAllowed="true">
					<type class="java.lang.String"/>
					<properties hidden="true"/>
				</field>
				<field name="InternalOrderText" nullAllowed="true">
					<type class="java.lang.String"/>
					<properties hidden="true"/>
				</field>
				<field name="AccountCategory" nullAllowed="true">
					<type class="java.lang.String"/>
					<properties hidden="true"/>
				</field>

				<!-- Fields required for Budget Check *** Added by James *** Oct 04 2008 *** End *** -->
			</inClassVariant>
		</inClass>
		<!--  Nagendra ******** Changes for Taxcode-->
		<inClass name="ariba.contract.core.ContractCoreApprovableLineItem">
			<inClassVariant name="SAP">
				<inField name="TaxCode">
					<validity
						clusterType="ariba.contract.core.ContractCoreApprovable">
						<orCondition>
							<andCondition>
								<notCondition>
									<condition
										implementation="ariba.common.core.condition.UserHasPermission">
										<parameter name="PermissionName"
											value="CatPurchasing"/>
									</condition>
								</notCondition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="IsAdHoc">
									<parameter name="TargetValue" value="true"/>
								</condition>
							</andCondition>
							<orCondition>
								<andCondition>
									<condition
										implementation="ariba.base.fields.condition.EqualTo"
										testField="LineItemCollection.ReleaseType">
										<parameter name="TargetValue" value="1"/>
									</condition>
									<notCondition>
										<condition
											implementation="ariba.base.fields.condition.NonNullObject"
											testField="TaxCode"/>
									</notCondition>
								</andCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPTaxCodeValidity">
									<parameter inputField="this" name="LineItem"/>
								</condition>
							</orCondition>
						</orCondition>
					</validity>
				</inField>
			</inClassVariant>
		</inClass>
		<!--  Nagendra ********  end-->
		<inClass name="ariba.contract.core.ContractCoreApprovable">
			<inClassVariant name="SAP">
				<inField name="PurchaseOrg">
					<validity>
						<orCondition>
							<andCondition>
								<condition
									implementation="ariba.base.core.condition.NonEmptyField"/>
								<condition
									implementation="ariba.common.core.condition.ObjectMatchingQuery"
									nullHandling="forceTrue">
									<parameter name="AQLCondition"
										value="PorgCompanyCodeCombo.CompanyCode = :CompanyCode
										AND PorgCompanyCodeCombo.PurchaseOrg = PurchaseOrg
										AND PurchaseOrg.IsSAPPurchaseOrg = 'N'"/>
									<parameter name="AdditionalClasses"
										value="cat.core.PorgCompanyCodeCombo"/>
									<parameter inputField="CompanyCode"
										name="CompanyCode"
										nullHandling="forceTrue"
										typeCast="ariba.core.CompanyCode"/>
								</condition>
							</andCondition>
							<condition
								implementation="ariba.base.fields.condition.NotEqualTo"
								testField="CompanyCode.PurchaseOrgFiltering">
								<parameter name="TargetValue" value="Y"/>
							</condition>
						</orCondition>
					</validity>
					<visibility>
						<condition
							implementation="ariba.base.fields.condition.EqualTo"
							testField="CompanyCode.PurchaseOrgFiltering">
							<parameter name="TargetValue" value="Y"/>
						</condition>
					</visibility>
				</inField>
			</inClassVariant>
		</inClass>

		<inClass name="ariba.common.core.Supplier">
			<inClassVariant name="SAP">
				<field name="SuppTaxRegID">
					<type class="java.lang.String" length="255"/>
					<properties forceRefresh="true"
						label="@aml.CatSAPRequisitionExt/SuppTaxRegID"/>
				</field>
				<field name="IncoTerms">
					<type class="cat.core.IncoTerms"/>
					<properties forceRefresh="true"/>
				</field>

			</inClassVariant>
		</inClass>
		<!-- Added by metaDataIntegration tags to below for Object Details  -->
		<inClass name="ariba.common.core.SupplierLocation">
			<inClassVariant name="SAP">
				<inField name="PaymentTerms">
					<properties metaDataIntegration="Reference"/>
				</inField>

				<field name="LocType">
					<type class="java.lang.String" length="50"/>
					<properties forceRefresh="true"
						label="@aml.CatSAPRequisitionExt/LocType"
						metaDataIntegration="Reference"/>
				</field>
				<field name="ReftoOtherSuppLoc">
					<type class="java.lang.String" length="50"/>
					<properties forceRefresh="true"
						label="@aml.CatSAPRequisitionExt/ReftoOtherSuppLoc"
						metaDataIntegration="Reference"/>
				</field>
				<!-- Added by Majid for CBS : BlockIndicator -->
				<field name="BlockIndicator">
					<type class="java.lang.String" length="50"/>
					<properties label="@aml.CatSAPRequisitionExt/BlockIndicator"
						metaDataIntegration="Reference"/>
				</field>
				<field name="DefaultCurrency">
					<type class="ariba.basic.core.Currency"/>
					<properties label="@aml.CatSAPRequisitionExt/DefaultCurrency"
						metaDataIntegration="Reference"/>
				</field>
				<field name="RegistrationNumber">
					<type class="java.lang.String" length="125"/>
					<properties
						label="@aml.CatSAPRequisitionExt/RegistrationNumber"
						metaDataIntegration="Reference"/>
				</field>
				<!-- Added by Niraj for MACH1 R5.5 release ****Start****** -->
				<field name="PlafondInd">
					<type class="java.lang.String" length="59"/>
					<properties
						label="PlafondInd"
						metaDataIntegration="Reference"/>
				</field>
				<field name="Established">
					<type class="java.lang.String" length="5"/>
					<properties
						label="Established"
						metaDataIntegration="Reference"/>
				</field>

				<!-- Added by Niraj for MACH1 R5.5 release ****End****** -->

				<!-- Added by Nag for Creation of SupplierPorgCombo -->
				<!--<trigger event="IntegrationPostLoad" name="CreateSuppliePorgCombo">
				<action implementation="config.java.action.sap.CATSAPCreateSupPorg"/>
				</trigger>-->
			</inClassVariant>
		</inClass>
		<!-- Added by Majid for Object Details  -->
		<inGroup name="ObjectDetails">
			<groupClass name="ariba.common.core.SupplierLocation">
				<inGroupClassVariant name="SAP">
					<groupField name="CompanyCode">
						<properties hidden="true"/>
					</groupField>
					<groupField name="ContactID">
						<properties label="@aml.SAPRequisitionExt/ContactID"/>
					</groupField>
				</inGroupClassVariant>
			</groupClass>
		</inGroup>
		<inGroup name="ChooserTable">
			<groupClass name="ariba.common.core.SupplierLocation">
				<inGroupClassVariant name="SAP">
					<groupField name="UniqueName">
						<properties label="@aml.SAPRequisitionExt/UniqueName"
							rank="1"/>
					</groupField>
					<groupField name="ContactID">
						<properties label="@aml.SAPRequisitionExt/ContactID"
							rank="6"/>
					</groupField>
					<groupField name="LocType">
						<properties label="@aml.SAPRequisitionExt/LocType"
							rank="7"/>
					</groupField>
				</inGroupClassVariant>
			</groupClass>
		</inGroup>
		<class datafile="ariba.small" name="cat.core.IncoTerms" normalized="true"
			prefix="Incoterms" super="ariba.base.core.ClusterRoot">
			<classVariant name="SAP">
				<lookupKey fields="UniqueName"/>
				<field name="UniqueName">
					<type class="java.lang.String" length="3"/>
					<properties metaDataIntegration="Reference"/>
				</field>
				<field name="Description">
					<type class="ariba.base.core.MultiLingualString"/>
					<properties metaDataIntegration="Reference"/>
				</field>
			</classVariant>
		</class>
		<group name="IncoTermsChooser">
			<groupClass name="cat.core.IncoTerms">
				<groupClassVariant name="SAP">
					<groupField name="UniqueName">
						<properties label="@aml.CatSAPCoreExt/IncoTerms"
							prototypeValue="99999" rank="10"/>
					</groupField>
					<groupField name="Description">
						<properties label="@aml.CatSAPCoreExt/Description"
							rank="20"/>
					</groupField>
				</groupClassVariant>
			</groupClass>
		</group>
		<group name="PaymenttermChooser">
			<groupClass name="ariba.payment.core.PaymentTerms">
				<groupClassVariant name="SAP">
					<groupField name="UniqueName">
						<properties label="@aml.CatSAPCoreExt/UniqueName"
							prototypeValue="99999" rank="10"/>
					</groupField>
					<groupField name="Description">
						<properties label="@aml.CatSAPCoreExt/Description"
							rank="20"/>
					</groupField>
				</groupClassVariant>
			</groupClass>
		</group>
		<inClass name="ariba.core.CompanyCode">
			<field name="DefaultIncoTerms1" respectable="true">
				<type class="cat.core.IncoTerms"/>
				<properties label="@aml.CatSAPCoreExt/DefaultIncoTerms1"
					metaDataIntegration="Reference"/>
			</field>
		</inClass>
		<inClass name="ariba.purchasing.core.PurchaseOrder">
			<inClassVariant name="SAP">
			
			<!-- Start Q4 2013-RSD119-FDD5.0/TDD1.0 -->
				<field name="OIOAgreement">
					<type class="boolean"/>
					<properties label="OIO Agreement"/>
				 </field>

			<!-- End Q4 2013-RSD119-FDD5.0/TDD1.0 -->

				<field name="SendMethod">
					<type class="java.lang.String" length="55"/>
				</field>
				<!-- Added by garima -->
				<field name="IsHazmat">
					<type class="boolean"/>
				</field>
				<field name="TaxInstructions">
					<type class="java.lang.String" length="85"/>
					<properties label="@aml.cat.ui1/LabelTaxInfo"/>
				</field>
				<field name="BuyerCode">
					<type class="cat.core.BuyerCode"/>
					<properties label="@aml.cat.ui/LabelBuyerCode"
						metaDataIntegration="Reference"/>
				</field>
				<field name="BuyerContact">
					<type class="java.lang.String" length="255"/>
					<properties label="@aml.cat.ui1/LabelBuyerContact"/>
				</field>
				<field name="IncoTerms">
					<type class="java.lang.String" length="255"/>
					<properties label="@aml.cat.ui1/LabelIncoTerms"/>
				</field>
				<!-- end -->
			</inClassVariant>
		</inClass>

		<inClass name="ariba.purchasing.core.POLineItem">
			<inClassVariant name="SAP">
				<field name="DerivedAccountDistribution">
					<type class="java.lang.String" length="55"/>
					<properties editable="false"
						fieldEditorClass="ariba.htmlui.fieldsui.fields.APETextField"
						label="@aml.cat.sap/LabelDerivedAccountDistribution"/>
				</field>
			</inClassVariant>
		</inClass>

		<inClass name="ariba.core.AccountCategory">
			<inClassVariant name="SAP">
				<lookupKey fields="CompanyCode"/>
				<field name="CompanyCode">
					<type class="ariba.core.CompanyCode"/>
					<properties metaDataIntegration="Reference"/>
				</field>
				<field name="AllowSplit">
					<type class="boolean"/>
					<properties metaDataIntegration="Reference"/>
				</field>
			</inClassVariant>
		</inClass>
		<inClass name="ariba.purchasing.core.Requisition">
			<inClassVariant name="SAP">



<!-- Start Q4 2013-RSD119-FDD5.0/TDD1.0 --> 

		<field name="OIOAgreement">
                    <type class="boolean"/>
                    <properties label="OIO Agreement"/>
                </field>
		


	<!-- OIOAgreement - Set to True on Req create since SupplierLoc Change doesn't fire on Line create -->

                <trigger event="Create" name="SetOIOAgreementFieldOnCreate">
                    <action implementation="ariba.base.fields.action.SetField">
                        <parameter name="Target" outputField="OIOAgreement"/>
                        <parameter name="Value" value="true"/>
                    </action>
                </trigger>

<!-- End  Q4 2013-RSD119-FDD5.0/TDD1.0 --> 
		





			<!-- Code Added to include AssessTaxButton for SAP partition to address exception for Vertex- Archana START-->
				 <field name="AssessTaxButton" noPersist="true">
				  <type class="java.lang.Boolean"/>
    			 <visibility>
			 				 
			 		<andCondition>
			 			<condition implementation="ariba.common.core.condition.RoleEqualTo">
			 				<parameter name="TargetValue" value="MSC Administrator"/>
			 			</condition>
			                <!-- Rajat - Code Added to include AssessTaxButton for SAP partition only-->
			 			<condition implementation="ariba.base.fields.condition.EqualTo" testField="PartitionNumber">
			 				<parameter name="TargetValue" value="5"/>
			 			</condition>	   	                        
			 		</andCondition>
			 				
			</visibility>
				<properties fieldEditorClass="ariba.htmlui.fieldsui.fields.APETriggerButton"  title="@aml.cat.ui1/LabelAssessTaxButton"/>
				 </field>
				 <!-- This is used in CatSAPTaxCustomApproverTM -->     	  
			  <field name="TaxOverrideFlag">
				   <type class="boolean"/>
				</field>  
				
				<trigger event="FieldChange" field="AssessTaxButton" name="AssessTaxAndSetTaxFields">
					<action implementation="config.java.customapprover.sap.CatAssessTaxTM"/>
		     </trigger>
			 <!-- Code Added to include AssessTaxButton for SAP partition to address exception for Vertex- Archana END-->
		<!-- End of Code-->

				<inField name="HoldEscalation">
					<properties forceRefresh="true"
						label="@aml.cat.ui1/LabelHoldEscalation"/>
				</inField>
				<field name="HoldEscalationOwner">
					<type class="java.lang.String" length="65"/>
					<properties editable="false"
						fieldEditorClass="ariba.htmlui.fieldsui.fields.APETextField"
						label="@aml.cat.ui1/LabelHoldEscalationOwner"/>
				</field>
				<field name="ContractRefNumber">
					<type class="java.lang.String" length="255"/>
					<properties forceRefresh="true"
						label="@aml.CatSAPRequisitionExt/ContractRefNumber"/>
				</field>
				
                	 <!--  Code added by Jayashree for PO Conversion Requisition Level starts -->
			   	<field name="POComment" nullAllowed="true">
					<type class="java.lang.String" length="255"/>
					<properties label="POComment" metaDataIntegration="Reference"/>
				</field>
			<!--  End of PO Conversion Code -->
				<field name="CriticalAssetDown">
					<type class="java.lang.Boolean"/>
					<editability>
						<notCondition>
							<condition
								implementation="ariba.base.core.condition.NonEmptyField"
								testField="PreviousVersion">
							</condition>
						</notCondition>
					</editability>
					<properties allowNullValue="false" forceRefresh="true"
						label="@aml.CatSAPRequisitionExt/CriticalAssetDown"/>
				</field>


				<!-- Add by Sandeep for Checking if PR can be converted to Contract-->
				<field name="IsPotentialContract" nullAllowed="true">
					<type class="java.lang.Boolean"/>
					<properties
						controller="ariba.htmlui.fieldsui.fields.ARFYesNo"
						label="Is this PR a potential Contract ?"/>
				</field>
				<!-- Add by Nag for cascade capital-->
				<field name="CascadeCapitalRoles" nullAllowed="true">
					<javadoc>Field to store Capital Approvers roles</javadoc>
					<type class="cat.CascadeApprover" vector="true"/>
					<properties
						label="@aml.CatSAPRequisitionExt/CCapitalApproversLabel"/>
				</field>
				<!-- Fields required for eRFQ implementation -->
				<field name="ISeRFQ">
					<type class="boolean"/>
					<editability>
						<notCondition>
							<condition
								implementation="ariba.base.core.condition.NonEmptyField"
								testField="PreviousVersion">
							</condition>
						</notCondition>
					</editability>
					<validity>
						<orCondition>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"

									testField="ISeRFQ"/>
							</notCondition>
							<condition
								implementation="config.java.condition.sap.CatReqHasCatalogItems">
								<parameter inputField="this" name="ReqToCheck"/>
							</condition>
						</orCondition>
					</validity>
					<properties forceRefresh="true"
						label="@aml.cat.sap/LabeleRFQ"/>
				</field>
				<field name="ISeRFQRequisition">
					<type class="boolean"/>
					<properties hidden="true"
						label="@aml.cat.sap/LabeleRFQRequisition"/>
				</field>
				<field name="eRFQBuyer">
					<type class="ariba.user.core.User"/>
					<properties hidden="true" skipInitialChooserLoad="true"/>
				</field>
				<field name="RespondByDate" nullAllowed="true">
					<type class="ariba.util.core.Date"/>
					<validity>
						<condition
							implementation="ariba.base.fields.condition.BoundedDate">
							<parameter name="FutureDate" value="true"/>
							<parameter name="IgnoreTime" value="false"/>
							<parameter name="CalendarDateFuzzyLogic"
								value="true"/>
							<parameter name="Message"
								value="@aml.cat.sap/MessageHasToBeFutureDate"/>
						</condition>
					</validity>
					<properties forceRefresh="true"
						label="@aml.cat.sap/LabelRespondByDate"
						prototypeValue="Mon, 31 Jan, 1999"/>
				</field>
				<field name="LognetSuppliers">
					<type class="ariba.common.core.SupplierLocation"
						vector="true"/>
					<validity>
						<condition
							implementation="config.java.condition.sap.CatSAPCheckForRFQSuppliers">
							<parameter inputField="this" name="Requisition"/>
						</condition>
					</validity>
					<properties alignmentInTable="Center" charWidth="50%"
						chooserField="UniqueName"
						chooserGroup="CatSAPSupplierLocationChooser"
						label="@aml.cat.sap/LabelLognetSupplier"
						nameTableClass="config.java.nametable.sap.CateRFQSupplierLocNameTable"
						titleField="UniqueName" titleFormat="%s (%s, %s)"
						titleGroup="CatSAPSupplierLocationChooser"/>
				</field>
				<field name="WriteInSuppliers">
					<type class="cat.core.ERFQSupplierDetails" vector="true"/>
					<validity>
						<condition
							implementation="config.java.condition.sap.CatSAPCheckForRFQSuppliers">
							<parameter inputField="this" name="Requisition"/>
						</condition>
					</validity>
					<properties
						controller="ariba.htmlui.baseui.fields.ARFTableButton"
						forceRefresh="true"
						label="@aml.cat.sap/LabelWriteInSupplier"/>
				</field>
				<field name="DelayPurchase">
					<type class="java.lang.Boolean"/>
					<properties allowNullValue="false" forceRefresh="true"
						label="@aml.CatSAPRequisitionExt/DelayPurchase"/>
				</field>
				<field name="CalenderChooser" nullAllowed="true">
					<type class="ariba.util.core.Date"/>
					<validity>
						<condition
							implementation="ariba.base.fields.condition.BoundedDate">
							<parameter name="FutureDate" value="true"/>
							<parameter name="IgnoreTime" value="false"/>
							<parameter name="CalendarDateFuzzyLogic"
								value="true"/>
							<parameter name="Message"
								value="@aml.cat.sap/MessageHasToBeFutureDate"/>
						</condition>
					</validity>
					<properties forceRefresh="true"
						prototypeValue="Mon, 31 Jan, 1999"/>
				</field>
				<inField name="ClassProperties">
					<properties
						approveHook="config.java.hook.sap.CatSAPReqApproveHook"
						printHook="config.java.print.sap.CatSAPApprovablePrintHook"
						submitHook="config.java.hook.sap.CatSAPReqSubmitHook"
						withdrawHook="config.java.hook.sap.CatSAPRequisitionWithdrawHook"/>
				</inField>
				<inField name="CustomCatalogPurchaseOrg">
					<editability>
						<andCondition>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="PreviousVersion"/>
							</notCondition>
							<orCondition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="StatusString">
									<parameter name="TargetValue"
										value="Composing"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="StatusString">
									<parameter name="TargetValue"
										value="Submitted"/>
								</condition>
							</orCondition>
							<condition
								implementation="config.java.condition.sap.CatReqHasLineItems">
								<parameter inputField="this" name="ReqToCheck"/>
							</condition>
						</andCondition>
					</editability>
					<validity clusterType="ariba.purchasing.core.Requisition">
						<andCondition>
							<condition
								implementation="ariba.base.core.condition.NonEmptyField"/>
							<condition
								implementation="config.java.condition.sap.CATSAPValidatePurchaseOrg">
								<parameter inputField="this" name="InputValue"/>
							</condition>
						</andCondition>
					</validity>
					<visibility>
						<condition
							implementation="ariba.base.fields.condition.EqualTo"
							testField="CompanyCode.PurchaseOrgFiltering">
							<parameter name="TargetValue" value="Y"/>
						</condition>
					</visibility>
					<properties forceRefresh="true"
						nameTableClass="config.java.nametable.sap.CATSAPFilterPurchaseOrg"/>
				</inField>
				<inField name="Requester">
					<editability>
						<notCondition>
							<condition
								implementation="ariba.base.fields.condition.NonNullObject"
								testField="PreviousVersion"/>
						</notCondition>
					</editability>
					<!-- CR 200-V2 Removing OBO field validity as it is no more required in SAP partition
					<validity>
					<condition implementation="config.java.condition.sap.CATSAPValidateOBO">
					<parameter inputField="this" name="InputValue" />
					</condition>
					</validity>
					-->
					<properties chooserSearchGroup="CatGloablUserSearch"
						forceRefresh="true"
						nameTableClass="config.java.nametable.sap.CATSAPFilterOBOUsers"
						skipInitialChooserLoad="true"/>
				</inField>
				<inField name="LineItems">
					<validity>
						<andCondition>
							<condition
								implementation="ariba.purchasing.core.condition.NonEmptyReqLineItems">
								<parameter inputField="this" name="Requisition"/>
								<parameter name="Message"
									value="@ariba.procure.core/ReqLineItemsRequired"/>
							</condition>
							<condition
								implementation="ariba.collaboration.core.condition.CollaborationNotInProgress"
								testField="this">
								<parameter name="Message"
									value="@ariba.purchasing.core/NotAllowedWhileCollaborationInProgress"/>
							</condition>
							<condition
								implementation="config.java.condition.sap.CATSAPLineItemValidity">
								<parameter inputField="this" name="LICToCheck"/>
							</condition>
						</andCondition>
					</validity>
				</inField>
				<!-- Added Customshipfield at req header by Aswini for PCL-->		
		        <field name="CustomShipTo">
                   <type class="java.lang.String" length="300"/>
                 </field>
		        <trigger name="DefaultCustomShiptofromRequester" event="FieldChange" field="Requester">
                     <action implementation="ariba.base.fields.action.SetField">
                       <parameter name="Target" outputField="CustomShipTo"/>
                       <parameter name="Value" inputField="Requester.PartitionedUser.ShipTo.UniqueName"/>
                     </action>	
                </trigger>			
               <!-- code ended for PCL-->
				<trigger event="FieldChange" field="LineItems"
					name="HeaderDeliverToDefaulter">
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="DefaultLineItems[0].DeliverTo"/>
						<parameter
							inputField="Requester.PartitionedUser.DeliverTo"
							name="Value"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter
							inputField="Requester.PartitionedUser.DeliverToPhone"
							name="Value"/>
						<parameter name="Target"
							outputField="DefaultLineItems[0].DeliverToPhone"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter
							inputField="Requester.PartitionedUser.MailDrop"
							name="Value"/>
						<parameter name="Target"
							outputField="DefaultLineItems[0].MailDrop"/>
					</action>
				</trigger>
                         <!--  Code added by Jayashree for PO Conversion Requisition Level starts -->
				<trigger event="FieldChange" field="POComment"
					name="CatSetPOComment">
					<action
						implementation="config.java.action.sap.CatSetPOComment"/>
				</trigger>
		         <!-- End of Code-->
				<trigger event="FieldChange" field="CriticalAssetDown"
					name="SetReqTitleForCriticalAssetDown">
					<action
						implementation="config.java.action.sap.CatSetTitleForCriticalAssetDown"/>
				</trigger>

				<!--Trigger to copy TaxCode from MaLI to TaxCode
				<trigger name="DefaultTaxCodeFromMALineItem"
				event="DefaultFromMALineItem">
				<action implementation="ariba.common.core.action.CopyFields">
				<parameter name="SourcePath"
				value="MALineItem.TaxCode"/>
				<parameter name="SourceGroup"
				value="TaxCodeDefaultingFromMALI"/>
				<parameter name="TargetPath"
				value="TaxCode"/>
				<parameter name="Defaulting"
				value="true"/>
				</action>
				</trigger>-->

				<!-- Trigger to set Capital Roles and approvers to False -->
				<trigger event="FieldChange" field="AccountCategory"
					name="catResetCostCenter">
					<action
						implementation="config.java.action.sap.CATCascadeCapitalRuleIsOn"/>
				</trigger>

				<trigger event="FieldChange" field="TotalCost"
					name="catCCCADefault">
					<action
						implementation="config.java.action.sap.CATCascadeCapitalRuleIsOn"/>
				</trigger>
				<!-- Trigger to set ISeRFQ to False -->
				<trigger event="Create" name="DefaultISeRFQToFalse">
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="ISeRFQ"/>
						<parameter name="Value" value="false"/>
					</action>
				</trigger>
				<!-- Trigger to set ISeRFQRequisition to False -->
				<trigger event="Create" name="DefaultISeRFQRequisitionToFalse">
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="ISeRFQRequisition"/>
						<parameter name="Value" value="false"/>
					</action>
				</trigger>

				<!--Sandeep, Change for BudgetCheck, Setting Trigger-->
				<trigger name="DefaultIsPotentialContract" event="Create">
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="IsPotentialContract"/>
						<parameter name="Value" value="false"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="ISeRFQ"
					name="ClearSupplierDataFromAdHocLinesOneRFQ">
					<condition
						implementation="config.java.condition.CatBooleanFieldEqualTo"
						testField="this">
						<parameter name="TestField" value="ISeRFQ"/>
						<parameter name="TestValue" value="true"/>
					</condition>
					<action
						implementation="config.java.action.sap.CatSAPWipeLineItemSupplierData"/>
				</trigger>
				<trigger event="FieldChange" field="ISeRFQ"
					name="DefaultRespondBy">
					<condition
						implementation="config.java.condition.CatBooleanFieldEqualTo"
						testField="this">
						<parameter name="TestField" value="ISeRFQ"/>
						<parameter name="TestValue" value="true"/>
					</condition>
					<action
						implementation="config.java.action.sap.CatSAPDefaultRespondByDate"/>
				</trigger>
				<deleteTrigger name="SetCompanyCodeOnRequesterChange"/>
				<deleteTrigger
					name="SetCustomCatalogPurchaseOrgOnRequesterChange"/>
				<trigger event="FieldChange" field="Requester"
					name="SetCompanyCodeOnRequesterChange1"
					respectUserData="false">
					<condition
						implementation="config.java.condition.sap.CatReqHasLineItems">
						<parameter inputField="this" name="ReqToCheck"/>
					</condition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="CompanyCode"/>
						<parameter
							inputField="Requester.PartitionedUser.CompanyCode"
							name="Value"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="Requester"
					name="SetCustomCatalogPurchaseOrgOnRequesterChange1">
					<condition
						implementation="ariba.base.fields.condition.EqualTo"
						testField="CompanyCode.PurchaseOrgFiltering">
						<parameter name="TargetValue" value="Y"/>
					</condition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="CustomCatalogPurchaseOrg"/>
						<parameter
							inputField="Requester.PartitionedUser.PurchaseOrg"
							name="Value"/>
					</action>
				</trigger>


				<!-- Added to reset the HoldTillDate to null on change of Delay Purchase -->
				<trigger event="FieldChangeByUser" field="DelayPurchase"
					name="SetHoldTillDateOnDelayPurchaseChange">
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="HoldTillDate"/>
						<parameter name="Value" nullValue="true"/>
					</action>
				</trigger>
				<!-- HoldEscalationOwner -->
				<trigger event="FieldChangeByUser" field="HoldEscalation"
					name="SetHoldEscalationOwnerOnChange">
					<action
						implementation="config.java.action.vcsv1.CatSetHoldEscalationOwner"/>
				</trigger>
			<!-- Set BuyerCode from below logic for PCL countries -->
				<trigger name="SetBuyerCodeOnRequesterChangeforplantcode"
                        event="FieldChangeByUser"
                        field="Requester"
                        respectUserData="true">
	                    <condition implementation="ariba.base.fields.condition.EqualTo" testField="CompanyCode.BuyerAssignment">
                           <parameter name="TargetValue" value="Plant" />
                         </condition>
                    <action implementation="config.java.action.sap.SAPCatSetBuyerCodeFromMap"/>
                </trigger>
   			</inClassVariant>
		</inClass>

		<inClass name="ariba.purchasing.core.POLineItem">
			<inClassVariant name="SAP">
				<trigger event="FieldChange" field="PaymentTerms"
					name="HeaderPaymentTermsDefaulter">
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="LineItemCollection.PaymentTerms"/>
						<parameter inputField="PaymentTerms" name="Value"/>
					</action>
				</trigger>
			</inClassVariant>
		</inClass>


		<!-- ================================================================== -->


		<!-- inClass: ariba.procure.core.ProcureLineItem                        -->


		<!-- ================================================================== -->

		<inClass name="ariba.procure.core.ProcureLineItem">
			<inClassVariant name="SAP">
				<!-- Added by Majid for UsePreferredSupplier *** Starts here-->
				<field name="UsePreferredSupplier">
					<type class="boolean"/>
					<editability clusterType="ariba.purchasing.core.Requisition">
						<condition
							implementation="config.java.condition.sap.CatSAPPrefSuppEdit">
							<parameter inputField="this" name="ReqParam"/>
						</condition>
					</editability>
					<properties
						label="@cat.psmSAP.eform/LabelUsePreferredSupplier"/>
				</field>

				<!-- trigger event="Create" name="SetSAPPreferredSupplier">
				<action implementation="ariba.base.fields.action.SetField">
				<parameter name="Target" outputField="UsePreferredSupplier"/>
				<parameter name="Value" value="true"/>
				</action>
				</trigger -->
				<!-- Added by Majid for UsePreferredSupplier *** Ends here-->
				<field name="PaymentTerms" respectable="true">
					<type class="ariba.payment.core.PaymentTerms"/>
					<validity>
						<orCondition>
							<condition
								implementation="config.java.condition.sap.CatSAPPaymentTermValidity">
								<parameter inputField="this" name="LineItem"/>
							</condition>
							<notCondition>
								<condition
									implementation="ariba.common.core.condition.UserHasPermission">
									<parameter name="PermissionName"
										value="CatPurchasing"/>
								</condition>
							</notCondition>
							<!-- Added by Majid -->
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="LineType.Category">
								<parameter name="TargetValue" value="2"/>
							</condition>
						</orCondition>
					</validity>
					<properties chooserGroup="PaymenttermChooser"
						forceRefresh="true"
						label="@aml.cat.ui3/LabelPaymentTerms"
						metaDataIntegration="Reference"
						nameTableClass="config.java.nametable.sap.CatSAPPaymentTermsNameTable"
						titleFormat="%s (%s)" titleGroup="PaymenttermChooser"/>
				</field>


				<!-- Added by James *** Validate Accounting functionality ***  -->
				<field name="ValidateAccounting">
					<type class="java.lang.Boolean"/>
					<!-- Issue 255 Start -->
					<validity>
                    <condition
						implementation="config.java.condition.sap.CatSAPValidateAccountingCheck">
						<parameter inputField="this" name="LineItem"/>
					</condition>
                    </validity>
					<!-- Issue 255 End -->
					<properties
						fieldEditorClass="ariba.htmlui.fieldsui.fields.APETriggerButton"
						hideLabel="true"
						title="@aml.cat.ui/LabelValidateAccountingButton"/>
				</field>
				<!-- Added to store NotToExceedPrice * Quantity -->
				<field name="NTEAmount">
					<type class="ariba.basic.core.Money"/>
				</field>
				<!-- Issue 255 Start -->
				<field name="CheckValidateAcctButton">
					<type class="java.lang.Boolean"/>
                </field>
				<!-- Issue 255 End -->
				<field name="TradingPartner">
					<type class="ariba.core.CompanyCode"/>
					<validity>
						<!--
						<condition implementation="config.java.condition.sap.CatTradingPartnerValidity" testField="this">
						<parameter name="TestField" value="TradingPartner"/>
						</condition>
						-->
						<orCondition>
							<condition
								implementation="ariba.base.fields.condition.NotEqualTo"
								testField="AccountCategory.UniqueName">
								<parameter name="TargetValue"
									value="@aml.CatSAPRequisitionExt/TradingPartnerAccCat"/>
							</condition>
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="TradingPartner.SAPSource">
								<parameter name="TargetValue"
									value="@aml.CatSAPRequisitionExt/CBSTradingPartner"/>
							</condition>
						</orCondition>
					</validity>
					<properties chooserGroup="CompanyCodeChooser"
						forceRefresh="true"
						label="@aml.CatSAPRequisitionExt/TradingPartnerLabel"
						metaDataIntegration="Reference"
						nameTableClass="config.java.nametable.sap.CatTradingPartnerNameTable"
						titleFormat="%s (%s)" titleGroup="CompanyCodeChooser"/>
				</field>
				<!--
				ARajendren Ariba, Inc..
				Added skipInitialChooserLoad property for Performance Improvement
				-->
				<inField name="SupplierLocation">
					<properties allowCustomValue="false"
						chooserGroup="CatSAPSupplierLocationChooser"
						chooserLimit="100" controllerType="RecentUserChoice"
						forceRefresh="true"
						label="@aml.CatSAPRequisitionExt/SupplierLocationLabel"
						nameTableClass="config.java.nametable.sap.CatNonCatalogSupplierLocNameTable"
						skipInitialChooserLoad="true" titleFormat="%s (%s)"
						titleGroup="CatSAPSupplierLocationChooser"/>
				</inField>
				<inField name="PurchaseOrg">
					<validity>
						<orCondition>
							<andCondition>
								<condition
									implementation="ariba.base.core.condition.NonEmptyField"/>
								<condition
									implementation="ariba.common.core.condition.ObjectMatchingQuery"
									nullHandling="forceTrue">
									<parameter name="AQLCondition"
										value="PorgCompanyCodeCombo.CompanyCode = :CompanyCode
										AND PorgCompanyCodeCombo.PurchaseOrg = PurchaseOrg
										AND PurchaseOrg.IsSAPPurchaseOrg = 'N'"/>
									<parameter name="AdditionalClasses"
										value="cat.core.PorgCompanyCodeCombo"/>
									<parameter inputField="CompanyCode"
										name="CompanyCode"
										nullHandling="forceTrue"
										typeCast="ariba.core.CompanyCode"/>
								</condition>
							</andCondition>
							<condition
								implementation="ariba.base.fields.condition.NotEqualTo"
								testField="LineItemCollection.CompanyCode.PurchaseOrgFiltering">
								<parameter name="TargetValue" value="Y"/>
							</condition>
						</orCondition>
					</validity>
					<visibility>
						<andCondition>
							<notCondition>
								<condition
									implementation="ariba.contract.core.condition.IsContractSourcingRequest">
									<parameter inputField="this" name="PLI"/>
								</condition>
							</notCondition>
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="LineItemCollection.CompanyCode.PurchaseOrgFiltering">
								<parameter name="TargetValue" value="Y"/>
							</condition>
						</andCondition>
					</visibility>
				</inField>
				<inField name="ShipTo">
					<!--validity>
					<condition implementation="ariba.common.core.condition.ObjectMatchingQuery" nullHandling="forceFalse">
					<parameter name="AQLCondition" value="Address.CompanyCode = :CompanyCode"/>
					<parameter name="CompanyCode" inputField="LineItemCollection.CompanyCode"/>
					<parameter name="IgnoreQueryCache" value="false"/>
					</condition>
					</validity -->
					<validity>
						<condition
							implementation="config.java.condition.sap.CatSAPShipToValidity">
							<parameter inputField="this" name="PLI"/>
						</condition>
					</validity>
					<properties chooserGroup="PlantChooser" forceRefresh="true"
						metaDataIntegration="Reference"
						nameTableClass="config.java.nametable.sap.CatSAPShipToNameTable"
						titleFormat="%s (%s)" titleGroup="PlantChooser"/>
				</inField>
				<inField name="BillingAddress">
					<validity
						clusterType="ariba.procure.core.ProcureLineItemCollection">
						<condition
							implementation="config.java.condition.sap.CatSAPShipToValidity">
							<parameter inputField="this" name="PLI"/>
						</condition>
					</validity>
				</inField>
				<inField name="Supplier">
					<validity>
						<orCondition>
							<condition
								implementation="ariba.common.core.condition.DirectSupplier"
								nullHandling="forceFalse"/>
							<condition
								implementation="ariba.common.core.condition.ObjectMatchingQuery"
								nullHandling="forceFalse">
								<parameter name="AQLCondition"
									value="PorgSupplierCombo.Supplier = Supplier
									AND PorgSupplierCombo.PurchaseOrg = :PurchaseOrg"/>
								<parameter name="AdditionalClasses"
									value="ariba.core.PorgSupplierCombo"/>
								<parameter inputField="PurchaseOrg"
									name="PurchaseOrg" nullHandling="forceTrue"/>
								<parameter name="IgnoreQueryCache" value="false"/>
							</condition>
							<condition
								implementation="ariba.base.fields.condition.NotEqualTo"
								testField="LineItemCollection.CompanyCode.PurchaseOrgFiltering">
								<parameter name="TargetValue" value="Y"/>
							</condition>
						</orCondition>
					</validity>
				</inField>
				<inField name="TaxCode">
					<!-- <validity clusterType="ariba.contract.core.MasterAgreementCoreApprovable">
					<orCondition>
					<andCondition>
					<notCondition>
					<condition implementation="ariba.common.core.condition.UserHasPermission">
					<parameter name="PermissionName" value="CatPurchasing"/>
					</condition>
					</notCondition>
					<condition implementation="ariba.base.fields.condition.EqualTo" testField="IsAdHoc">
					<parameter name="TargetValue" value="true"/>
					</condition>
					</andCondition>
					<condition implementation="config.java.condition.sap.CatSAPTaxCodeValidity">
					<parameter name="LineItem" inputField="this"/>
					</condition>
					</orCondition>
					</validity>-->
					<validity>
						<!--issue 1024-->
						<!-- Code commented to remove Direct Permit state check as part of Vertex -->
					<!--	<orCondition> -->
					<!--		<andCondition> -->
								<orCondition>
									<andCondition>
										<notCondition>
											<condition
												implementation="ariba.common.core.condition.UserHasPermission">
												<parameter name="PermissionName"
													value="CatPurchasing"/>
											</condition>
										</notCondition>
										<condition
											implementation="ariba.base.fields.condition.EqualTo"
											testField="IsAdHoc">
											<parameter name="TargetValue"
												value="true"/>
										</condition>
									</andCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPTaxCodeValidity">
										<parameter inputField="this"
											name="LineItem"/>
									</condition>
									<!-- Added by Majid -->
									<condition
										implementation="ariba.base.fields.condition.EqualTo"
										testField="LineType.Category">
										<parameter name="TargetValue" value="2"/>
									</condition>
								</orCondition>
						<!-- Code commented for Vertex to remove B3 and AR state check -->
						<!--		<andCondition>
									<orCondition>
										<notCondition>
											<condition
												implementation="ariba.base.fields.condition.EqualTo"
												testField="LineItemCollection.CompanyCode.UniqueName">
												<parameter name="TargetValue"
													value="1000"/>
											</condition>
										</notCondition>
										<notCondition>
											<condition
												implementation="ariba.base.fields.condition.EqualTo"
												testField="ShipTo.State">
												<parameter name="TargetValue"
													value="AR"/>
											</condition>
										</notCondition>
									</orCondition>
									<notCondition>
										<condition
											implementation="ariba.base.fields.condition.EqualTo"
											testField="TaxCode.SAPTaxCode">
											<parameter name="TargetValue"
												value="B3"/>
										</condition>
									</notCondition>
								</andCondition>
							</andCondition>
							<andCondition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="LineItemCollection.CompanyCode.UniqueName">
									<parameter name="TargetValue" value="1000"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="ShipTo.State">
									<parameter name="TargetValue" value="AR"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="TaxCode.SAPTaxCode">
									<parameter name="TargetValue" value="B3"/>
									<parameter name="Message"
										value="@aml.SAPRequisitionExt/ChooseTaxCode"/>
								</condition>
							</andCondition>
						</orCondition>  --> 
						<!-- Code commented completed -->
						<!--issue 1024 ends -->
					</validity>
					<visibility>
						<condition
							implementation="ariba.base.fields.condition.AlwaysTrue"/>
					</visibility>
					<!-- Code Added by Aswini for Vertex for taxcode editability-->
					<editability>
					    <condition implementation="config.java.condition.sap.CatSAPTaxCodeEditabilityforPR" testField="this"/>					       						
					</editability>	
					<!-- code ended -->
					<!-- Sdey, Ariba, Inc. - 9r does additional validation for required="true" fields. Changing it to false -->
					<properties
						nameTableClass="config.java.nametable.sap.CatSAPTaxCodeNameTable"
						required="false"/>
				</inField>
				<field name="IncoTerms1">
					<type class="cat.core.IncoTerms"/>
					<properties chooserGroup="IncoTermsChooser" chooserLimit="10"
						controllerType="RecentUserChoice" hidden="false"
						label="@aml.SAPRequisitionExt/IncoTerms1"
						titleFormat="%s (%s)" titleGroup="IncoTermsChooser"/>
				</field>

				<field name="IncoTerms2">
					<type class="java.lang.String"/>
					<properties label="@aml.SAPRequisitionExt/IncoTerms2"/>
				</field>

				<trigger event="Create" name="SetBillingAddressOnCreate">
					<condition
						implementation="ariba.base.fields.condition.NonNullObject"
						testField="LineItemCollection.CompanyCode"/>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="BillingAddress"/>
						<parameter
							inputField="LineItemCollection.CompanyCode.DefaultBillToAddress"
							name="Value"/>
					</action>
				</trigger>
				<trigger event="FieldChangeByUser" field="AccountCategory"
					name="SetTradingPartnerOnAccCatChange">
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="TradingPartner"/>
						<parameter name="Value" nullValue="true"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="ValidateAccounting"
					name="ValidateAccountingAndSetValidationMessage">
					<action
						implementation="config.java.action.sap.CatSAPValidateAccountingString"/>
				</trigger>
                    <!-- Issue 255 Start -->
                <trigger event="FieldChange" field="ValidateAccounting"
				  name="SetCheckValidateAcctButton">
				  <action implementation="ariba.base.fields.action.SetField">
				  <parameter name="Target" outputField="CheckValidateAcctButton"/>
				  <parameter name="Value" value="true"/>
				   </action>
				</trigger> 
				
				<trigger event="Create" name="SetCheckValidateAcctButtonOnCreate">
				   <action implementation="ariba.base.fields.action.SetField">
					<parameter name="Target" outputField="CheckValidateAcctButton"/>
                                        <parameter name="Value" value="false"/>
				   </action>
				</trigger>
				<trigger event="FieldChange" field="AccountCategory"
				  name="SetChkValidateAcctButtonOnAcctCategoryChange">
				  <action implementation="ariba.base.fields.action.SetField">
				  <parameter name="Target" outputField="CheckValidateAcctButton"/>
				  <parameter name="Value" value="false"/>
				   </action>
				</trigger>
				<!-- Issue 255 End -->
			</inClassVariant>
		</inClass>

		<inClass name="ariba.purchasing.core.ReqLineItem">
			<inClassVariant name="SAP">

				<!--
				S. Dey  - AUL - 9r1 is expecting the Accounting to get set
				from Commodity Export Map. It is resetting the accouning.
				-->
				<deleteTrigger name="SetCEMEOnQtyChange"/>
				<deleteTrigger name="SetCEMEOnLineAmountChange"/>
				<!-- SDey End -->

				<deleteTrigger name="SetAccountCategoryForAdHocItem"/>
		<!--
				<trigger event="Create" name="CATSAPAccountCategoryCreateTrigger">
					<condition
						implementation="ariba.procure.core.condition.AdHocLineItem"/>
					<action
						implementation="config.java.action.sap.CATSAPAccountCategoryCreateTrigger">
						<parameter name="Target" outputField="AccountCategory"/>
					</action>
				</trigger>  -->
				<!--<trigger event="FieldChange" field="CommodityExportMapEntry" name="CATSAPSetAccountCategoryOnCEMChange" respectUserData="true">
				<condition implementation="ariba.procure.core.condition.AdHocLineItem"/>
				<action implementation="config.java.action.sap.CATSAPSetAccountCategoryOnCEMChange">
				<parameter name="Target" outputField="AccountCategory"/>
				</action>
				</trigger>-->


<!-- Start Q4 2013-RSD119-FDD5.0/TDD1.0 -->

                <trigger event="FieldChange" field="SupplierLocation" name="SetHeaderOIOAgreementSAPOnSupplierChange">
                    <condition implementation="config.java.condition.sap.CatReqContainsOIOSupplier" testField="LineItemCollection"/>
                    <action implementation="ariba.base.fields.action.SetField">
                        <parameter name="Target" outputField="LineItemCollection.OIOAgreement"/>
                        <parameter name="Value" value="true"/>
                    </action>
                </trigger>


<!-- End Q4 2013-RSD119-FDD5.0/TDD1.0 -->

				<trigger event="FieldChange" field="CommodityExportMapEntry"
					name="SetIsHazmatOnCEMEChange">
					<notCondition>
						<condition
							implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
							testField="this"/>
					</notCondition>
					<action
						implementation="config.java.action.sap.CatSAPSetHazmatIndicator"/>
				</trigger>
				<trigger event="FieldChangeByUser" field="MSDSNumber"
					name="SetIsHazmatOnMSDSNumberChange">
					<notCondition>
						<condition
							implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
							testField="this"/>
					</notCondition>
					<action
						implementation="config.java.action.sap.CatSAPSetHazmatIndicator"/>
				</trigger>

				<trigger event="Create" name="SetSAPPreferredSupplier">
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="UsePreferredSupplier"/>
						<parameter name="Value" value="true"/>
					</action>
				</trigger>

				<!-- Added by garima -->
				<field name="DerivedAccountDistribution">
					<type class="java.lang.String" length="55"/>
					<properties editable="false"
						fieldEditorClass="ariba.htmlui.fieldsui.fields.APETextField"
						label="@aml.cat.sap/LabelDerivedAccountDistribution"/>
				</field>
				<trigger event="FieldChange" field="AccountCategory"
					name="DerivedAccountDistribution">
					<action
						implementation="config.java.action.sap.CATSAPDrvdAccntDistString">
						<parameter inputField="this" name="LI"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="TradingPartner"
					name="DerivedAccountDistributionTP">
					<action
						implementation="config.java.action.sap.CATSAPDrvdAccntDistString">
						<parameter inputField="this" name="LI"/>
					</action>
				</trigger>

				<field name="LineAttachmentIndicator">
					<type class="java.lang.Boolean"/>
					<properties editable="false"
						label="@aml.cat.ui1/LabelLineAttachmentIndicator"/>
				</field>
				<inField name="NeedBy">
					<!-- Turn off NeedBy validation for fee and milestone since they default from



					required for fees and milestones field LineItem.StartDate -->

					<validity>
						<orCondition>
							<condition
								implementation="ariba.common.core.condition.HeaderLevelField">
								<parameter inputField="this" name="LineItem"/>
							</condition>
							<andCondition>
								<condition
									implementation="ariba.base.core.condition.NonEmptyField"
									testField="CategoryLineItemDetails"/>
								<notCondition>
									<condition
										implementation="ariba.procure.core.condition.ShowShippingOnLineItem"
										testField="this"/>
								</notCondition>
							</andCondition>
							<condition
								implementation="ariba.procure.core.condition.NeedByDate">
								<parameter name="AllowNullDate" value="true"/>
								<parameter name="NotPastDate" value="true"/>
								<parameter inputField="LineItemCollection"
									name="ProcureLineItemCollection"/>
								<parameter inputField="this"
									name="ProcureLineItem"/>
							</condition>
						</orCondition>
					</validity>
				</inField>
				<inField name="BillingAddress">
					<editability>
						<!-- notCondition>
						<condition implementation="ariba.base.fields.condition.NonNullObject" testField="this"/>
						</notCondition -->
						<orCondition>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPShipToValidity">
									<parameter inputField="this" name="PLI"/>
								</condition>
							</notCondition>
							<notCondition>
								<condition
									implementation="ariba.procure.core.condition.ShowShippingOnLineItem"
									testField="this"/>
							</notCondition>
						</orCondition>
					</editability>
					<validity>
						<condition
							implementation="config.java.condition.sap.CatSAPShipToValidity">
							<parameter inputField="this" name="PLI"/>
						</condition>
					</validity>
					<properties chooserGroup="PlantChooser" forceRefresh="true"
						metaDataIntegration="Reference"
						nameTableClass="config.java.nametable.sap.CatSAPBillToNameTable"
						titleFormat="%s (%s)" titleGroup="PlantChooser"/>
				</inField>
				<field name="IsCapitalIT">
					<type class="java.lang.String" length="10"/>
					<properties label="@aml.cat.ui1/IsCapitalIT"
						metaDataIntegration="Reference"/>
				</field>
				<!-- Added trigger for setting Deliverto -->
				<trigger event="Create" name="DeliverToDefaulter">
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="DeliverTo"/>
						<parameter
							inputField="LineItemCollection.Requester.PartitionedUser.DeliverTo"
							name="Value"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="LineItemCollection.DefaultLineItems[0].DeliverTo"/>
						<parameter
							inputField="LineItemCollection.Requester.PartitionedUser.DeliverTo"
							name="Value"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="DeliverToPhone"/>
						<parameter
							inputField="LineItemCollection.Requester.PartitionedUser.DeliverToPhone"
							name="Value"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="LineItemCollection.DefaultLineItems[0].DeliverToPhone"/>
						<parameter
							inputField="LineItemCollection.Requester.PartitionedUser.DeliverToPhone"
							name="Value"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="MailDrop"/>
						<parameter
							inputField="LineItemCollection.Requester.PartitionedUser.MailDrop"
							name="Value"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="LineItemCollection.DefaultLineItems[0].MailDrop"/>
						<parameter
							inputField="LineItemCollection.Requester.PartitionedUser.MailDrop"
							name="Value"/>
					</action>
				</trigger>
				<deleteTrigger name="SetSupplierLocationOnSupplierChange"/>


				<!-- Added by James to set AccountCategory at header level ** Oct 06 2008 **Start** -->
				<trigger event="FieldChange" field="AccountCategory"
					name="CATSAPSetAcctCategory">
					<action
						implementation="config.java.action.sap.CATSAPSetAcctCategory"/>
				</trigger>


				<!-- Added by James to set AccountCategory at header level ** Oct 06 2008 **End** -->
				<trigger event="FieldChange" field="Supplier"
					name="CatSetSupplierLocation">
					<andCondition>
						<condition
							implementation="ariba.base.fields.condition.NotEqualTo"
							testField="IsAdHoc">
							<parameter name="TargetValue" value="true"/>
						</condition>
						<condition
							implementation="ariba.base.fields.condition.NonNullObject"
							testField="Supplier"/>
					</andCondition>
					<action
						implementation="config.java.action.sap.CatSetSupplierLocation"/>
				</trigger>
				<trigger event="FieldChange" field="SupplierLocation"
					name="CatSetSupplier">
					<andCondition>
						<condition
							implementation="ariba.base.fields.condition.EqualTo"
							testField="IsAdHoc">
							<parameter name="TargetValue" value="true"/>
						</condition>
						<condition
							implementation="ariba.base.fields.condition.NonNullObject"
							testField="SupplierLocation"/>
					</andCondition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="Supplier"/>
						<parameter inputField="SupplierLocation.Supplier"
							name="Value"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="AccountCategory"
					name="SetReqGeneralLedgerOnAccCatChange">
					<action
						implementation="config.java.action.sap.CatSetGeneralLedger"/>
				</trigger>


				<!--Added By Nag for Defaulting AcctCategory from MALineItem to ReqLineItem -->
				<trigger event="FieldChange" field="MALineItem"
					name="DefaultAcctCategoryFromMALIItem"
					respectUserData="false">
					<condition
						implementation="ariba.base.fields.condition.NonNullObject"
						testField="MALineItem"/>
					<action implementation="ariba.common.core.action.CopyFields">
						<parameter name="SourcePath" value="MALineItem"/>
						<parameter name="SourceGroup" value="ObjectDefaulting"/>
						<parameter inputField="this" name="Target"/>
						<parameter name="Defaulting" value="true"/>
					</action>
				</trigger>
			       <!-- Issue 247 Start -->
				<trigger event="FieldChange"  field="MALineItem" name="DefaultShiptofromRequesterProfile"  respectUserData="false">
					<andCondition>
						<condition
							implementation="ariba.base.fields.condition.NonNullObject" testField="MALineItem"/> 
						<condition
							implementation="ariba.base.fields.condition.EqualTo" testField="MasterAgreement.TermTypeString">
								<parameter name="TargetValue" value="Supplier"/>
						</condition>		
					</andCondition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="ShipTo"/>
						<parameter inputField="LineItemCollection.Requester.PartitionedUser.ShipTo" name="Value"/>
					</action>	
				</trigger>
                              <!-- Issue 247 End -->	
				<!--Amit Gupta -->
				<trigger event="DefaultFromMALineItem"
					name="DefaultAccountingFromMALineItemtoReqlineitem">
					<action
						implementation="ariba.contract.core.action.SetAccountingFromContractLineItem">
						<parameter name="SourcePath"
							value="MALineItem.Accountings.SplitAccountings"/>
						<parameter name="SourceGroup" value="ObjectDefaulting"/>
						<parameter inputField="Accountings.SplitAccountings"
							name="Target"/>
						<parameter name="Defaulting" value="true"/>
					</action>
					<action implementation="ariba.common.core.action.CopyFields">
						<parameter name="SourcePath" value="MALineItem"/>
						<parameter name="SourceGroup"
							value="TaxCodeDefaultingFromMALI"/>
						<!--      <parameter name="TargetPath"
						value="TaxCode"/> -->
						<parameter name="Defaulting" value="true"/>
					</action>
				</trigger>

				<!--Nagg********** -->
				<trigger event="FieldChange" field="CommodityExportMapEntry"
					name="SetLineItemFieldsOnCEMChange" respectUserData="false">
					<action implementation="ariba.common.core.action.CopyFields">
						<parameter inputField="CommodityExportMapEntry"
							name="Source"/>
						<parameter name="SourceGroup"
							value="ObjectDefaultingFromCEM"/>
						<parameter inputField="this" name="Target"/>
						<parameter name="Defaulting" value="true"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="SupplierLocation"
					name="CatSetDefaultCurrency">
					<andCondition>
						<condition
							implementation="ariba.base.fields.condition.EqualTo"
							testField="IsAdHoc">
							<parameter name="TargetValue" value="true"/>
						</condition>
						<condition
							implementation="ariba.base.fields.condition.NonNullObject"
							testField="SupplierLocation.DefaultCurrency"/>
					</andCondition>
					<action
						implementation="config.java.action.sap.CatSAPSetCurrencyOnSupplierChange"/>
					<!--
					<action implementation="ariba.base.fields.action.SetField">
					<parameter inputField="SupplierLocation.DefaultCurrency" name="Value"/>
					<parameter name="Target" outputField="Description.Price.Currency"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
					<parameter inputField="SupplierLocation.DefaultCurrency" name="Value"/>
					<parameter name="Target" outputField="Amount.Currency"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
					<parameter inputField="SupplierLocation.DefaultCurrency" name="Value"/>
					<parameter name="Target" outputField="Accountings.SplitAccountings[0].Amount.Currency"/>
					</action>
					-->
				</trigger>
				<!-- trigger event="FieldChange" field="LineItemType" name="CatSetUOMForService">
				<andCondition>
				<condition implementation="ariba.base.fields.condition.EqualTo" testField="IsAdHoc">
				<parameter name="TargetValue" value="true"/>
				</condition>
				<condition implementation="ariba.base.fields.condition.EqualTo" testField="LineItemType">
				<parameter name="TargetValue" value="@cat.aml.picklistvalues1/TaxQualifier2"/>
				</condition>
				</andCondition>
				<action implementation="ariba.base.fields.action.SetField">
				<parameter name="Value" value="1.00"/>
				<parameter name="Target" outputField="Description.Price.Amount"/>
				</action>
				<action implementation="ariba.base.fields.action.SetField">
				<parameter name="Value" value="1.00"/>
				<parameter name="Target" outputField="Amount.Amount"/>
				</action>
				<action implementation="config.java.action.sap.CatSetUOMForService"/>
				</trigger -->

				<trigger event="FieldChange" field="LineItemType"
					name="CatSetUOMForService">
					<andCondition>
						<condition
							implementation="ariba.base.fields.condition.EqualTo"
							testField="LineItemCollection.CompanyCode.ServiceItemFunc">
							<parameter name="TargetValue" value="Y"/>
						</condition>
						<andCondition>
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="IsAdHoc">
								<parameter name="TargetValue" value="true"/>
							</condition>
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="LineItemType">
								<parameter name="TargetValue"
									value="@cat.aml.picklistvalues1/TaxQualifier2"/>
							</condition>
						</andCondition>
					</andCondition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Value" value="1.00"/>
						<parameter name="Target"
							outputField="Description.Price.Amount"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Value" value="1.00"/>
						<parameter name="Target" outputField="Amount.Amount"/>
					</action>
					<action
						implementation="config.java.action.sap.CatSetUOMForService"/>
				</trigger>

				<trigger event="FieldChange" field="IncoTerms1"
					name="defaultIncoterm2">
					<andCondition>


						<!-- condition implementation="ariba.base.fields.condition.NonNullObject" testField="ShipTo"/ -->
						<condition
							implementation="ariba.base.fields.condition.NonNullObject"
							testField="IncoTerms1"/>
					</andCondition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="IncoTerms2"/>


						<!-- parameter name="Value" inputField="ShipTo.City"/ -->
						<parameter name="Value"
							value="@aml.CatSAPRequisitionExt/SAPDefaultIncoTerms2"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="LineItemCollection.DefaultLineItems[0].IncoTerms2"/>


						<!-- parameter name="Value" inputField="LineItemCollection.ShipTo.City"/ -->
						<parameter name="Value"
							value="@aml.CatSAPRequisitionExt/SAPDefaultIncoTerms2"/>
					</action>
				</trigger>
				<trigger event="Create"
					name="defaultIncoterm1fromCompanyOnCreate">
					<andCondition>
						<notCondition>
							<condition
								implementation="ariba.base.fields.condition.NonNullObject"
								testField="Supplier.IncoTerms"/>
						</notCondition>
						<condition
							implementation="ariba.base.fields.condition.NonNullObject"
							testField="LineItemCollection.CompanyCode.DefaultIncoTerms1"/>
					</andCondition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="IncoTerms1"/>
						<parameter
							inputField="LineItemCollection.CompanyCode.DefaultIncoTerms1"
							name="Value"/>

					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="LineItemCollection.DefaultLineItems[0].IncoTerms1"/>
						<parameter
							inputField="LineItemCollection.CompanyCode.DefaultIncoTerms1"
							name="Value"/>
					</action>
				</trigger>

				<trigger event="FieldChange" field="Supplier"
					name="defaultIncoterm1">
					<condition
						implementation="ariba.base.fields.condition.NonNullObject"
						testField="Supplier.IncoTerms"/>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="IncoTerms1"/>
						<parameter inputField="Supplier.IncoTerms" name="Value"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="LineItemCollection.DefaultLineItems[0].IncoTerms1"/>
						<parameter inputField="Supplier.IncoTerms" name="Value"/>
					</action>
				</trigger>

				<trigger event="FieldChange" field="Supplier"
					name="defaultIncoterm1fromCompany">
					<andCondition>
						<notCondition>
							<condition
								implementation="ariba.base.fields.condition.NonNullObject"
								testField="Supplier.IncoTerms"/>
						</notCondition>
						<condition
							implementation="ariba.base.fields.condition.NonNullObject"
							testField="LineItemCollection.CompanyCode.DefaultIncoTerms1"/>
					</andCondition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="IncoTerms1"/>
						<parameter
							inputField="LineItemCollection.CompanyCode.DefaultIncoTerms1"
							name="Value"/>
					</action>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target"
							outputField="LineItemCollection.DefaultLineItems[0].IncoTerms1"/>
						<parameter
							inputField="LineItemCollection.CompanyCode.DefaultIncoTerms1"
							name="Value"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="SupplierLocation"
					name="LinePaymentTermsDefaulter">
					<condition
						implementation="ariba.base.fields.condition.NonNullObject"
						testField="SupplierLocation.PaymentTerms"/>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="PaymentTerms"/>
						<parameter inputField="SupplierLocation.PaymentTerms"
							name="Value"/>
					</action>
				</trigger>


				<!-- Added by Nag to default Paymentterms from company if its null form suplocation  -->
				<trigger event="Create"
					name="CatSetPaymentTermsFromCompanyOnCreate">
					<andCondition>
						<condition
							implementation="ariba.base.fields.condition.NonNullObject"
							testField="LineItemCollection.CompanyCode.DefaultPaymentTerms"/>
						<notCondition>
							<condition
								implementation="ariba.base.fields.condition.NonNullObject"
								testField="SupplierLocation.PaymentTerms"/>
						</notCondition>
					</andCondition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="PaymentTerms"/>
						<parameter
							inputField="LineItemCollection.CompanyCode.DefaultPaymentTerms"
							name="Value"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="SupplierLocation"
					name="CatSetPaymentTermsFromCompany">
					<andCondition>
						<condition
							implementation="ariba.base.fields.condition.NonNullObject"
							testField="LineItemCollection.CompanyCode.DefaultPaymentTerms"/>
						<notCondition>
							<condition
								implementation="ariba.base.fields.condition.NonNullObject"
								testField="SupplierLocation.PaymentTerms"/>
						</notCondition>
					</andCondition>
					<action implementation="ariba.base.fields.action.SetField">
						<parameter name="Target" outputField="PaymentTerms"/>
						<parameter
							inputField="LineItemCollection.CompanyCode.DefaultPaymentTerms"
							name="Value"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="MALineItem"
					name="SetAccountingFieldsToNullOnMALineItemChange">
					<condition
						implementation="ariba.base.fields.condition.NonNullObject"
						testField="AccountCategory"/>
					<action
						implementation="ariba.sap.common.SetAccountingFieldsToNull">
						<parameter inputField="AccountCategory" name="Source"/>
						<parameter inputField="Accountings.SplitAccountings"
							name="Target"/>
						<parameter name="TargetGroup"
							value="SAPAccountingFields"/>
					</action>
				</trigger>
				<trigger event="FieldChangeByUser" field="AccountCategory"
					name="SetCosCenterTextFromUserProfile">
					<condition
						implementation="config.java.condition.sap.CatVisibleField">
						<parameter inputField="AccountCategory"
							name="AccountCategory"
							typeCast="ariba.core.AccountCategory"/>
						<parameter name="FieldName" value="CostCenter"/>
					</condition>
					<action
						implementation="config.java.action.sap.CatSetCostCenterFromUserProfile"/>
				</trigger>
				<trigger event="FieldChangeByUser" field="AccountCategory"
					name="SetValidateAccountingMessage">
					<action
						implementation="config.java.action.sap.CatSAPSetValidateAccountingMessage"/>
				</trigger>
				<!-- Tax Use -->
			<!-- Trigger for BuyerCodeDefault for plant code logic changes -->
			    <trigger name="SetBuyerCodeOnPCCChangeforPlanCode"
                        event="FieldChange"
                        field="CommodityCode"
                        respectUserData="true">
			            <condition implementation="ariba.base.fields.condition.EqualTo" testField="LineItemCollection.CompanyCode.BuyerAssignment">
                           <parameter name="TargetValue" value="Plant" />
                         </condition>
                 <action implementation="config.java.action.sap.SAPCatSetBuyerCodeFromMap"/>
                </trigger>
  	        <!-- Code change completed -->
			<!-- Soumya Mohanty -->
			<!-- Tax Code Determination for Vertex START-->
			<!-- Code Started For Tax Code Determination Logic Requisition Level -->
			   <trigger name="TaxCodeDeterminationForReqFieldChange" event="FieldChange" field="ShipTo">
			        <action implementation="config.java.action.sap.CatSetTaxCodeFromCatalog"/>	
                </trigger>
			<!-- Code Ended For Tax Code Determination Logic Requisition Level -->
			<!-- Tax Code Determination for Vertex END-->
		<!-- WI314-IBM: Code added by Abhishek for defaulting MSDSNumber, IsHazmat and HazmatWeight from MALineItem to Requisition Level starts -->
		 	 <trigger event="FieldChange" field="MALineItem" name="DefaultMSDSNumberIsHazmatAndHazmatWeightMALineItem">
				 <orCondition>
				    <condition implementation="config.java.condition.CatNonNullMALineItemField" testField="this">
					    <parameter name="FieldName" value="MSDSNumber"/>
				    </condition>
				    <condition implementation="config.java.condition.CatNonNullMALineItemField" testField="this">
					 <parameter name="FieldName" value="IsHazmat"/>
				    </condition>
				     <condition implementation="config.java.condition.CatNonNullMALineItemField" testField="this">
				     <parameter name="FieldName" value="HazmatWeight"/>
				    </condition>
				 </orCondition>
				 <action implementation="ariba.common.core.action.CopyFields">
					<parameter name="SourceField" value="MALineItem.MSDSNumber"/>
					<parameter name="TargetField" value="MSDSNumber"/>
					<parameter name="Defaulting" value="false"/>
				 </action>
				 <action implementation="ariba.common.core.action.CopyFields">
					<parameter name="SourceField" value="MALineItem.IsHazmat"/>
					<parameter name="TargetField" value="IsHazmat"/>
					<parameter name="Defaulting" value="false"/>
				 </action>
				 <action implementation="ariba.common.core.action.CopyFields">
				    <parameter name="SourceField" value="MALineItem.HazmatWeight"/>
				    <parameter name="TargetField" value="HazmatWeight"/>
				    <parameter name="Defaulting" value="false"/>
				 </action>
		         </trigger>
		<!-- WI314-IBM: Code added by Abhishek for defaulting MSDSNumber, IsHazmat and HazmatWeight from MALineItem to Requisition Level ends -->
			</inClassVariant>
		</inClass>
		<inClass name="ariba.common.core.SplitAccounting">
			<inClassVariant name="SAP">
				<trigger event="FieldChange" field="CostCenterText"
					name="DerivedAccountDistributionCC">
					<action
						implementation="config.java.action.sap.CATSAPDrvdAccntDistString">
						<parameter inputField="LineItem" name="LI"/>
					</action>
				</trigger>

				<trigger event="FieldChange" field="GeneralLedgerText"
					name="DerivedAccountDistributionGL">
					<action
						implementation="config.java.action.sap.CATSAPDrvdAccntDistString">
						<parameter inputField="LineItem" name="LI"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="WBSElementText"
					name="DerivedAccountDistributionWBS">
					<action
						implementation="config.java.action.sap.CATSAPDrvdAccntDistString">
						<parameter inputField="LineItem" name="LI"/>
					</action>
				</trigger>

				<trigger event="FieldChange" field="InternalOrderText"
					name="DerivedAccountDistributionIO">
					<action
						implementation="config.java.action.sap.CATSAPDrvdAccntDistString">
						<parameter inputField="LineItem" name="LI"/>
					</action>
				</trigger>
				<!-- Issue 255 Start -->
				<trigger event="FieldChange" field="InternalOrderText"
					name="CatSetValidateButtonBooleanValueToFalse">
					<action
						implementation="config.java.action.sap.CATSAPSetCheckValidateAcctButton">
					</action>
					</trigger>
					<!-- Issue 255 End -->
			</inClassVariant>
		</inClass>
		<inClass name="ariba.common.core.CommodityExportMapEntry">
			<inClassVariant name="SAP">
				<field name="GeneralLedgerText" nullAllowed="true">
					<type class="java.lang.String"/>
					<properties metaDataIntegration="Reference"/>
				</field>
				<field name="AssetText" nullAllowed="true">
					<type class="java.lang.String"/>
					<properties metaDataIntegration="Reference"/>
				</field>
				<field name="InternalOrderText" nullAllowed="true">
					<type class="java.lang.String"/>
					<properties metaDataIntegration="Reference"/>
				</field>
				<field name="WBSElementText" nullAllowed="true">
					<type class="java.lang.String"/>
					<properties metaDataIntegration="Reference"/>
				</field>
				<field name="BuyerCode" nullAllowed="true">
					<type class="cat.core.BuyerCode"/>
					<properties metaDataIntegration="Reference"/>
				</field>
				<field name="LineItemType" nullAllowed="true">
					<type class="java.lang.String"/>
					<properties metaDataIntegration="Reference"/>
				</field>
				<field name="IsHazmat" nullAllowed="true">
					<type class="boolean"/>
					<properties metaDataIntegration="Reference"/>
				</field>
				<field name="IsCapitalIT" nullAllowed="true">
					<type class="java.lang.String"/>
					<properties metaDataIntegration="Reference"/>
				</field>
			</inClassVariant>
		</inClass>


		<!-- ************************************** CLASSES ****************************************** -->

		<inGroup name="ShippingFields">
			<groupClass name="ariba.purchasing.core.ReqLineItem">
				<groupClassVariant name="SAP">
					<groupField name="ShipTo">
						<editability>
							<andCondition>
								<orCondition>
									<condition
										implementation="ariba.purchasing.core.condition.RequisitionHasValidOrders">
										<parameter
											inputField="LineItemCollection"
											name="ProcureLineItemCollection"/>
									</condition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</orCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
							</andCondition>
						</editability>
						<visibility>
							<condition
								implementation="ariba.base.fields.condition.AlwaysTrue"/>
						</visibility>
						<properties allowCustomValue="true" required="true"/>
					</groupField>
					<groupField name="DeliverTo">
						<!--<editability>
						<notCondition>
						<condition implementation="ariba.common.core.condition.HeaderLevelField">
						<parameter name="LineItem" inputField="this"/>
						</condition>
						</notCondition>
						</editability>-->
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</editability>
						<validity>
							<condition
								implementation="ariba.base.fields.condition.AlwaysTrue"/>
						</validity>
						<properties charWidth="30" hidden="false" rank="20"
							textLength="25"/>
					</groupField>

					<groupField name="DeliverToPhone">
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</editability>
						<properties charWidth="30" editable="true" rank="25"
							textLength="50"/>
					</groupField>
					<groupField name="MailDrop">
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</editability>
						<properties charWidth="30" editable="true" rank="30"
							textLength="50"/>
					</groupField>
					<groupField name="IncoTerms1">
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</editability>
						<properties chooserGroup="IncoTermsChooser"
							chooserLimit="10" controllerType="RecentUserChoice"
							hidden="false" rank="35" titleFormat="%s (%s)"
							titleGroup="IncoTermsChooser"/>
					</groupField>
					<groupField name="IncoTerms2">
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</editability>
						<properties charWidth="30" hidden="false" rank="40"
							textLength="25"/>
					</groupField>

				</groupClassVariant>
			</groupClass>
		</inGroup>
		<inGroup name="ProcureAccountingFields">
			<inGroupClass name="ariba.common.core.SplitAccounting">
				<inGroupClassVariant name="SAP">
					<groupField name="GeneralLedgerText">
						<visibility>
							<condition
								implementation="config.java.condition.sap.CatVisibleField">
								<parameter inputField="LineItem.AccountCategory"
									name="AccountCategory"
									typeCast="ariba.core.AccountCategory"/>
								<parameter name="FieldName"
									value="GeneralLedger"/>
							</condition>
						</visibility>
						<editability>
							<andCondition>
								<condition
									implementation="config.java.condition.sap.CatGeneralLedgerTextEditability"
									testField="this">
								</condition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="LineItem"/>
								</notCondition>
							</andCondition>
						</editability>
						<properties rank="10" zone="Left"/>
					</groupField>
					<groupField name="CostCenterText">
						<visibility>
							<condition
								implementation="config.java.condition.sap.CatVisibleField">
								<parameter inputField="LineItem.AccountCategory"
									name="AccountCategory"
									typeCast="ariba.core.AccountCategory"/>
								<parameter name="FieldName" value="CostCenter"/>
							</condition>
						</visibility>
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="LineItem"/>
							</notCondition>
						</editability>
						<properties allowNullValue="true" rank="20" zone="Right"/>
					</groupField>
					
					<!-- **** START!! -Changes done by Sandeep fro MACH1 2.5 *** -->

					<groupField name="WBSElementText">
						<visibility>
							<orCondition>
								<condition
									implementation="config.java.condition.sap.CatVisibleField">
									<parameter name="AccountCategory"
										inputField="LineItem.AccountCategory"
										typeCast="ariba.core.AccountCategory"/>
									<parameter name="FieldName"
										value="WBSElement"/>
								</condition>
								<andCondition>
									<condition
										implementation="ariba.base.fields.condition.NonNullObject"
										testField="WBSElementText"/>
									<condition
										implementation="ariba.base.fields.condition.NonEmptyString"
										testField="InternalOrderText"/>
									<condition
										implementation="config.java.condition.sap.CatSAPFixedAssetCheck"
										testField="LineItem"/>
								</andCondition>
							</orCondition>
						</visibility>
						<editability>
							<notCondition>
								<orCondition>
									<condition
										implementation="ariba.base.fields.condition.NonNullObject"
										testField="InternalOrderText"/>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="LineItem"/>
								</orCondition>
							</notCondition>
						</editability>


						<!-- ****END Changes done by Sandeep fro MACH1 2.5 *** -->

						<properties rank="30" zone="Right"/>
					</groupField>
					<groupField name="AssetText">
						<visibility>
							<condition
								implementation="config.java.condition.sap.CatVisibleField">
								<parameter inputField="LineItem.AccountCategory"
									name="AccountCategory"
									typeCast="ariba.core.AccountCategory"/>
								<parameter name="FieldName" value="Asset"/>
							</condition>
						</visibility>
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="LineItem"/>
							</notCondition>
						</editability>
						<properties rank="40" zone="Left"/>
					</groupField>
					<groupField name="InternalOrderText">
						<visibility>
							<condition
								implementation="config.java.condition.sap.CatVisibleField">
								<parameter inputField="LineItem.AccountCategory"
									name="AccountCategory"
									typeCast="ariba.core.AccountCategory"/>
								<parameter name="FieldName"
									value="InternalOrder"/>
							</condition>
						</visibility>
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="LineItem"/>
							</notCondition>
						</editability>
                                           <properties  rank="50" zone="Right"/>
					</groupField>
					<groupField name="CostCenterApprover">
						<visibility>
							<andCondition>
								<condition
									implementation="config.java.condition.sap.CatVisibleField">
									<parameter
										inputField="LineItem.AccountCategory"
										name="AccountCategory"
										typeCast="ariba.core.AccountCategory"/>
									<parameter name="FieldName"
										value="CostCenter"/>
								</condition>
								<condition
									implementation="config.java.condition.CatCostCenterApproverVisibility"
									testField="this">
									<parameter name="TestUser" value="Requester"/>
								</condition>
							</andCondition>
						</visibility>
						<validity>


							<!-- CR 225 - making costcenter approver selection necessary when user costcenter and PR line costcenter are different -->
							<orCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatVisibleField">
										<parameter
											inputField="LineItem.AccountCategory"
											name="AccountCategory"
											typeCast="ariba.core.AccountCategory"/>
										<parameter name="FieldName"
											value="CostCenter"/>
									</condition>
								</notCondition>
								<andCondition>
									<condition
										implementation="config.java.condition.CatValidCostCenterForUser"
										testField="this">
										<parameter name="TestUser"
											value="Requester"/>
									</condition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"/>
								</andCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="LineItem"/>
							</orCondition>
							<!-- CR 225 end -->
						</validity>
						<properties forceRefresh="true" rank="60" zone="Right"/>
					</groupField>
					<groupField name="ValidateAccountingMessage">
						<visibility>
							<condition
								implementation="ariba.base.core.condition.NonEmptyField"/>
						</visibility>
						<properties rank="70" zone="Right"/>
					</groupField>


					<!--CR# 209 Adding new fields to ProcureAccountingFields group-->
					<groupField name="TradingPartnerGL">
						<visibility>
							<condition
								implementation="config.java.condition.sap.CatVisibleField">
								<parameter inputField="LineItem.AccountCategory"
									name="AccountCategory"
									typeCast="ariba.core.AccountCategory"/>
								<parameter name="FieldName"
									value="TradingPartnerGL"/>
							</condition>
						</visibility>
						<properties rank="80" zone="Left"/>
					</groupField>
					<groupField name="TradingPartnerCC">
						<visibility>
							<condition
								implementation="config.java.condition.sap.CatVisibleField">
								<parameter inputField="LineItem.AccountCategory"
									name="AccountCategory"
									typeCast="ariba.core.AccountCategory"/>
								<parameter name="FieldName"
									value="TradingPartnerCC"/>
							</condition>
						</visibility>
						<properties rank="90" zone="Left"/>
					</groupField>
					<!--CR# 209 Addition complete-->
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>
		<inGroup name="AccountingUnsplittableFields">
			<!--  Nagendra ********-->
			<inGroupClass name="ariba.contract.core.ContractRequestLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="PaymentTerms">
						<properties hidden="true"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>
			<!--  Nagendra ******** Changes for Taxcode-->
			<inGroupClass
				name="ariba.contract.core.ContractCoreApprovableLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="TaxCode">
						<validity
							clusterType="ariba.contract.core.ContractCoreApprovable">
							<orCondition>
								<andCondition>
									<notCondition>
										<condition
											implementation="ariba.common.core.condition.UserHasPermission">
											<parameter name="PermissionName"
												value="CatPurchasing"/>
										</condition>
									</notCondition>
									<condition
										implementation="ariba.base.fields.condition.EqualTo"
										testField="IsAdHoc">
										<parameter name="TargetValue"
											value="true"/>
									</condition>
								</andCondition>
								<orCondition>
									<andCondition>
										<condition
											implementation="ariba.base.fields.condition.EqualTo"
											testField="LineItemCollection.ReleaseType">
											<parameter name="TargetValue"
												value="1"/>
										</condition>
										<notCondition>
											<condition
												implementation="ariba.base.fields.condition.NonNullObject"
												testField="TaxCode"/>
										</notCondition>
									</andCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPTaxCodeValidity">
										<parameter inputField="this"
											name="LineItem"/>
									</condition>
								</orCondition>
							</orCondition>
						</validity>
					</groupField>
					<!-- Code added by Aswini for Vertex to display Incoterms on UI -->
					<groupField name="IncoTerms1">
				<properties chooserGroup="IncoTermsChooser"
				chooserLimit="10" controllerType="RecentUserChoice"
				hidden="false" rank="35" titleFormat="%s (%s)"
				titleGroup="IncoTermsChooser" required="true"/>
				  <visibility>
            <notCondition>
              <condition implementation="config.java.condition.CatMasterAgreementWithRelease" testField="this">
              </condition>
            </notCondition>
          </visibility>
          <validity>
            <orCondition>
              <condition implementation="config.java.condition.CatMasterAgreementWithRelease" testField="this">
              </condition>
              <condition implementation="ariba.base.core.condition.NonEmptyField"/>                                
             </orCondition>
           </validity>
          </groupField>
			<groupField name="IncoTerms2">
				<properties charWidth="30" hidden="false" rank="40"
				textLength="25"/>
		  <visibility>
            <notCondition>
              <condition implementation="config.java.condition.CatMasterAgreementWithRelease" testField="this">
              </condition>
            </notCondition>
          </visibility>
          <validity>
            <orCondition>
              <condition implementation="config.java.condition.CatMasterAgreementWithRelease" testField="this">
              </condition>
              <condition implementation="ariba.base.core.condition.NonEmptyField"/>                                
             </orCondition>
           </validity>
			</groupField>
		<!-- Code ended for Vertex -->
				</inGroupClassVariant>
			</inGroupClass>
			<!--  Nagendra ********  end-->

			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="AccountCategory">
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</editability>
					</groupField>
					<groupField name="ValidateAccounting">
						<!-- <validity>
						<condition implementation="config.java.condition.sap.CATSAPLineItemValidity">
						<parameter name="LICToCheck" inputField="LineItemCollection"/>
						</condition>
						</validity>
						<visibility>
						<notCondition>
						<condition implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
						testField="this"/>
						</notCondition>
						</visibility>
						-->
						<visibility>
							<andCondition>
								<condition
									implementation="config.java.condition.sap.CATSAPAccountingVisibility">
									<parameter inputField="this" name="LI"/>
								</condition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
							</andCondition>
						</visibility>
						<properties rank="100"/>
					</groupField>
					<groupField name="TradingPartner">
						<visibility>
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="AccountCategory.UniqueName">
								<parameter name="TargetValue"
									value="@aml.CatSAPRequisitionExt/TradingPartnerAccCat"/>
							</condition>
						</visibility>
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</editability>
						<validity>
							<orCondition>
								<condition
									implementation="ariba.base.fields.condition.NotEqualTo"
									testField="AccountCategory.UniqueName">
									<parameter name="TargetValue"
										value="@aml.CatSAPRequisitionExt/TradingPartnerAccCat"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="TradingPartner.SAPSource">
									<parameter name="TargetValue"
										value="@aml.CatSAPRequisitionExt/CBSTradingPartner"/>
								</condition>
							</orCondition>
						</validity>
						<properties
							nameTableClass="config.java.nametable.sap.CatTradingPartnerNameTable"
							rank="90" zone="Left"/>
					</groupField>
					<groupField name="CommodityExportMapEntry">
						<properties hidden="true"/>
					</groupField>
					<groupField name="TaxCode">
						<validity>
							<orCondition>
								<andCondition>
									<notCondition>
										<condition
											implementation="ariba.common.core.condition.UserHasPermission">
											<parameter name="PermissionName"
												value="CatPurchasing"/>
										</condition>
									</notCondition>
									<condition
										implementation="ariba.base.fields.condition.EqualTo"
										testField="IsAdHoc">
										<parameter name="TargetValue"
											value="true"/>
									</condition>
								</andCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPTaxCodeValidity">
									<parameter inputField="this" name="LineItem"/>
								</condition>
								<!-- Added by Majid -->
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="LineType.Category">
									<parameter name="TargetValue" value="2"/>
								</condition>
							</orCondition>
						</validity>
						<visibility>
							<condition
								implementation="ariba.base.fields.condition.AlwaysTrue"/>
						</visibility>
						<editability>
							<andCondition>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItemTaxCodeEdit"
									testField="this"/>
							</notCondition>
							<!-- Code Added by Aswini for Vertex -->
							<condition implementation="config.java.condition.sap.CatSAPTaxCodeEditabilityforPR" testField="this"/>		
						</andCondition>							
						</editability>
					<!-- code ended -->
					</groupField>
					<groupField name="PaymentTerms">
						<visibility>
							<condition
								implementation="ariba.common.core.condition.UserHasPermission">
								<parameter name="PermissionName"
									value="CatPurchasing"/>
							</condition>
						</visibility>
						<editability>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</editability>
						<properties allowCustomValue="false"
							chooserField="Description"
							controller="ariba.htmlui.approvableui.fields.ARFNamedObject"
							detailsGroup="PaymentTermsDetail"
							label="@aml.cat.ui3/LabelPaymentTerms" rank="100"
							titleField="Description"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>

		<inGroup name="ObjectDefaulting">
			<inGroupClass name="ariba.common.core.CommodityExportMapEntry">
				<inGroupClassVariant name="SAP">
					<groupField name="GeneralLedgerText"/>
					<groupField name="WBSElementText"/>
					<groupField name="AssetText"/>
					<groupField name="InternalOrderText"/>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>

		<inGroup name="SAPAccountingFields">
			<inGroupClass name="ariba.common.core.Accounting">
				<inGroupClassVariant name="SAP">
					<groupField name="GeneralLedgerText"/>
					<groupField name="CostCenterText"/>
					<groupField name="WBSElementText"/>
					<groupField name="AssetText"/>
					<groupField name="InternalOrderText"/>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>
		<inGroup name="EM_CreateGeneral">
			<inGroupClass name="ariba.common.core.CommodityExportMapEntry">
				<inGroupClassVariant name="SAP">
					<groupField name="GeneralLedgerText"/>
					<groupField name="WBSElementText"/>
					<groupField name="AssetText"/>
					<groupField name="InternalOrderText"/>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>
		<inGroup name="EM_EditGeneral">
			<inGroupClass name="ariba.common.core.CommodityExportMapEntry">
				<inGroupClassVariant name="SAP">
					<groupField name="GeneralLedgerText"/>
					<groupField name="WBSElementText"/>
					<groupField name="AssetText"/>
					<groupField name="InternalOrderText"/>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>

		<inGroup name="EM_CommodityExportMapSimpleDetails">
			<inGroupClass name="ariba.common.core.CommodityExportMapEntry">
				<inGroupClassVariant name="SAP">
					<groupField name="GeneralLedgerText"/>
					<groupField name="WBSElementText"/>
					<groupField name="AssetText"/>
					<groupField name="InternalOrderText"/>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>

		<inGroup name="EM_CommodityExportMapEntrySimpleDetails">
			<inGroupClass name="ariba.common.core.CommodityExportMapEntry">
				<inGroupClassVariant name="SAP">
					<groupField name="GeneralLedgerText"/>
					<groupField name="WBSElementText"/>
					<groupField name="AssetText"/>
					<groupField name="InternalOrderText"/>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>

		<!-- 	Amit gupta (Work item: 1127)  -->

		<group name="TaxCodeDefaultingFromMALI">
			<groupClass name="ariba.purchasing.core.ReqLineItem">
				<groupClassVariant name="SAP">
					<groupField name="TaxCode"/>
				</groupClassVariant>
			</groupClass>
		</group>

		<group name="CustomCatalog">
			<groupClass name="ariba.purchasing.core.Requisition">
				<groupClassVariant name="SAP">
					<groupField name="CustomCatalogPurchaseOrg">
						<properties editable="false"/>
					</groupField>
				</groupClassVariant>
			</groupClass>
		</group>

		<group name="HeaderDetailsEditable">
			<groupClass name="ariba.purchasing.core.Requisition">
				<groupClassVariant name="SAP">

<!-- Start Q4 2013-RSD119-FDD5.0/TDD1.0 -->
<groupField name="OIOAgreement">
                        <visibility>
                            <andCondition>
                                <condition implementation="ariba.common.core.condition.UserHasPermission">
                                    <parameter name="PermissionName" value="CatPurchasing"/>
                                </condition>
                                <condition implementation="config.java.condition.sap.CatReqContainsOIOSupplier" testField="this"/>
                            </andCondition>
                        </visibility>
                        <properties rank="287"/>
                    </groupField>

<!-- End Q4 2013-RSD119-FDD5.0/TDD1.0 -->

				<!-- Code Added to include AssessTaxButton for SAP partition to address exception for Vertex - Archana START-->
					<groupField name="AssessTaxButton">
						<visibility>
						  <andCondition>
						   	<condition implementation="ariba.common.core.condition.RoleEqualTo">
								<parameter name="TargetValue" value="MSC Administrator"/>
							</condition>
						<!-- Rajat - Code Added to include AssessTaxButton for SAP partition only-->
							<condition implementation="ariba.base.fields.condition.EqualTo" testField="PartitionNumber">
							   	<parameter name="TargetValue" value="5"/>
						         </condition>	   	                        
					          </andCondition>
			                        </visibility>
						<properties label="@aml.CatSAPRequisitionExt/LabelAssessTaxButton" rank="310" title="@aml.CatSAPRequisitionExt/LabelAssessTaxButton" zone="Left"/>
					</groupField>
			     <!-- End of Code  to include AssessTaxButton n-->
				 <!-- Code Added to include AssessTaxButton for SAP partition to address exception for Vertex - Archana END-->
					<groupField name="Name">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.purchasing.core.condition.RequisitionHasValidOrders">
									<parameter inputField="this"
										name="ProcureLineItemCollection"/>
								</condition>


								<!-- 05.15.06 (KS) - CR54 - Added to lock down edit of Title if Emergency Buy text added -->
								<notCondition>
									<condition
										implementation="config.java.condition.CatBooleanFieldEqualTo"
										testField="this">
										<parameter name="TestField"
											value="CriticalAssetDown"/>
										<parameter name="TestValue" value="true"/>
									</condition>
								</notCondition>
							</andCondition>
						</editability>
					</groupField>
					<groupField name="ContractRefNumber">
						<properties rank="225" zone="Bottom"/>
						<visibility>
							<orCondition>
								<andCondition>
									<notCondition>
										<condition
											implementation="ariba.common.core.condition.UserHasPermission">
											<parameter name="PermissionName"
												value="CatPurchasing"/>
										</condition>
									</notCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="ContractRefNumber">
									</condition>
								</andCondition>
								<condition
									implementation="ariba.common.core.condition.UserHasPermission">
									<parameter name="PermissionName"
										value="CatPurchasing"/>
								</condition>
							</orCondition>
						</visibility>
						<editability>
							<condition
								implementation="ariba.common.core.condition.UserHasPermission">
								<parameter name="PermissionName"
									value="CatPurchasing"/>
							</condition>
						</editability>
					</groupField>

					<groupField name="HoldEscalation">
						<visibility>
							<condition
								implementation="ariba.common.core.condition.UserHasPermission">
								<parameter name="PermissionName"
									value="CatPurchasing"/>
							</condition>
						</visibility>
						<properties rank="280"/>
					</groupField>

					<!-- ISSUE 831 -->
					<groupField name="HoldEscalationOwner">
						<visibility>
							<condition
								implementation="ariba.base.core.condition.NonEmptyField"/>
						</visibility>
						<properties rank="285"/>
					</groupField>

					<groupField name="CriticalAssetDown">
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="ISeRFQ"/>
							</notCondition>
						</visibility>
						<properties rank="525" zone="Bottom"/>
					</groupField>

					<groupField name="IsPotentialContract">
						<visibility>
							<andCondition>
								<condition
									implementation="ariba.common.core.condition.UserHasPermission">
									<parameter name="PermissionName"
										value="CatPurchasing"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="AccountCategory">
									<parameter name="TargetValue" value="F"/>
									<parameter name="TargetValue1" value="P"/>
								</condition>
							</andCondition>
						</visibility>
						<properties rank="535" zone="Bottom"/>
					</groupField>

					<groupField name="DelayPurchase">
						<properties rank="275" zone="Bottom"/>
					</groupField>
					<groupField name="HoldTillDate">
						<properties hidden="false"
							label="@aml.CatSAPRequisitionExt/HoldTillDateLabel"
							rank="305"/>
					</groupField>
					<groupField name="CustomCatalogPurchaseOrg">
						<properties rank="510"/>
					</groupField>
					<groupField name="CompanyCode">
						<editability>
							<andCondition>
								<notCondition>
									<condition
										implementation="ariba.base.fields.condition.NonNullObject"
										testField="PreviousVersion"/>
								</notCondition>
								<orCondition>
									<condition
										implementation="ariba.base.fields.condition.EqualTo"
										testField="StatusString">
										<parameter name="TargetValue"
											value="Composing"/>
									</condition>
									<condition
										implementation="ariba.base.fields.condition.EqualTo"
										testField="StatusString">
										<parameter name="TargetValue"
											value="Submitted"/>
									</condition>
								</orCondition>
								<condition
									implementation="config.java.condition.sap.CatReqHasLineItems">
									<parameter inputField="this"
										name="ReqToCheck"/>
								</condition>
								<!--CR# 210
								To remove the editaility condition on company code which checks users permission for cross company buying
								<condition implementation="ariba.common.core.condition.UserHasPermission">
								<parameter name="PermissionName" value="CatCrossCompanyBuying"/>
								</condition>
								-->
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="Requester.PartitionedUser.CompanyCode.CrossCompanyBuyEnabled">
									<parameter name="TargetValue" value="Y"/>
								</condition>
                                                               <!-- START WI 47 -->
                                                                <!-- WI47
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="Requester">
									<parameter inputField="Preparer"
										name="TargetValue"/>
								</condition>
                                                                -->
                                                              <!-- END WI 47 -->
							</andCondition>
						</editability>
						<validity>
							<andCondition>
								<orCondition>
									<condition
										implementation="ariba.common.core.condition.ObjectMatchingQuery"
										nullHandling="forceTrue">
										<parameter name="AQLCondition"
											value="SAPSource = :RequesterCompCodeSAPSource AND CrossCompanyBuyEnabled = 'Y'"/>
										<parameter
											inputField="Requester.PartitionedUser.CompanyCode.SAPSource"
											name="RequesterCompCodeSAPSource"
											nullHandling="forceTrue"/>
										<parameter name="Message"
											value="@aml.CatSAPRequisitionExt/CompanyCodeInvalid"/>
									</condition>
									<condition
										implementation="ariba.base.fields.condition.EqualTo"
										testField="CompanyCode">
										<parameter
											inputField="Requester.PartitionedUser.CompanyCode"
											name="TargetValue"/>
									</condition>
								</orCondition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="CompanyCode.SAPSource"/>
							</andCondition>
						</validity>
						<properties editable="true" forceRefresh="true"
							nameTableClass="config.java.nametable.sap.CatCompanyCodeNameTable"/>
					</groupField>
					<groupField name="ISeRFQ">
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="CriticalAssetDown"/>
							</notCondition>
						</visibility>
						<properties forceRefresh="true" rank="550"/>
					</groupField>
					<groupField name="ISeRFQ">
						<properties forceRefresh="true" rank="550"/>
					</groupField>
					<groupField name="RespondByDate">
						<visibility>
							<condition
								implementation="config.java.condition.CatBooleanFieldEqualTo"
								testField="this">
								<parameter name="TestField" value="ISeRFQ"/>
								<parameter name="TestValue" value="true"/>
							</condition>
						</visibility>
						<properties rank="575"/>
					</groupField>
					<groupField name="HoldTillDate">
						<visibility>
							<condition
								implementation="config.java.condition.CatBooleanFieldEqualTo"
								testField="this">
								<parameter name="TestField"
									value="DelayPurchase"/>
								<parameter name="TestValue" value="true"/>
							</condition>
						</visibility>


						<!-- Added to check the Hold Till date as non empty Field -->
						<validity>
							<orCondition>
								<condition
									implementation="config.java.condition.CatBooleanFieldEqualTo"
									testField="this">
									<parameter name="TestField"
										value="DelayPurchase"/>
									<parameter name="TestValue" value="false"/>
								</condition>
								<andCondition>
									<andCondition>
										<condition
											implementation="config.java.condition.CatBooleanFieldEqualTo"
											testField="this">
											<parameter name="TestField"
												value="DelayPurchase"/>
											<parameter name="TestValue"
												value="true"/>
										</condition>
										<condition
											implementation="ariba.approvable.core.condition.HoldTillDate">
											<parameter inputField="this"
												name="Approvable"/>


											<!-- AllowNullDate and Message parameters are not allowed -->
											<!-- parameter name="AllowNullDate" value="false"/>



											<parameter name="Message" value="@aml.CatSAPRequisitionExt/HTDateEmpytMessage"/ -->
										</condition>
									</andCondition>
									<condition
										implementation="ariba.base.fields.condition.BoundedDate"
										testField="HoldTillDate">
										<parameter name="AllowNullDate"
											value="false"/>
										<parameter name="NotPastDate"
											value="true"/>
										<parameter name="Message"
											value="@aml.CatSAPRequisitionExt/HTDateEmpytMessage"/>
									</condition>
								</andCondition>
							</orCondition>
						</validity>
						<properties forceRefresh="true"
							label="@aml.CatSAPRequisitionExt/HoldTillDateLabel"
							rank="275" required="true" zone="Bottom"/>
					</groupField>
					<groupField name="LognetSuppliers">
						<visibility>
							<condition
								implementation="config.java.condition.CatBooleanFieldEqualTo"
								testField="this">
								<parameter name="TestField" value="ISeRFQ"/>
								<parameter name="TestValue" value="true"/>
							</condition>
						</visibility>
						<properties rank="580"/>
					</groupField>
					<groupField name="WriteInSuppliers">
						<visibility>
							<condition
								implementation="config.java.condition.CatBooleanFieldEqualTo"
								testField="this">
								<parameter name="TestField" value="ISeRFQ"/>
								<parameter name="TestValue" value="true"/>
							</condition>
						</visibility>
						<properties rank="585"/>
					</groupField>
				</groupClassVariant>
			</groupClass>
			<groupClass name="cat.core.ERFQSupplierDetails">
				<groupClassVariant name="SAP">
					<groupField name="SupplierName"/>
					<groupField name="SupplierContact"/>
					<groupField name="SupplierEMail"/>
					<groupField name="SupplierFax"/>
					<!--
					<groupField name="Language"/>
					-->
					<groupField name="LocaleID"/>

				</groupClassVariant>
			</groupClass>

		</group>

		<inGroup name="SAPOrderLineItem">
			<inGroupClass name="ariba.purchasing.core.POLineItem">
				<groupClassVariant name="SAP">
					<groupField name="PaymentTerms"/>
					<groupField name="TradingPartner"/>
					<groupField name="IncoTerms1"/>
					<groupField name="IncoTerms2"/>
					<groupField name="BuyerCode"/>
					<groupField name="LineItemType"/>
					<groupField name="ValidateAccounting"/>
					<groupField name="IsHazmat"/>
					<groupField name="MSDSNumber"/>
					<groupField name="HazmatWeight"/>
				</groupClassVariant>
			</inGroupClass>
		</inGroup>

		<inGroup name="SAPInvoiceLineItem">
			<inGroupClass name="ariba.invoicing.core.InvoiceLineItem">
				<groupClassVariant name="SAP">
					<groupField name="PaymentTerms"/>
					<groupField name="TradingPartner"/>
					<groupField name="IncoTerms1"/>
					<groupField name="IncoTerms2"/>
					<groupField name="BuyerCode"/>
					<groupField name="LineItemType"/>
					<groupField name="ValidateAccounting"/>
					<groupField name="IsHazmat"/>
					<groupField name="MSDSNumber"/>
					<groupField name="HazmatWeight"/>
				</groupClassVariant>
			</inGroupClass>
		</inGroup>

		<inGroup name="InvoiceDefaulting">
			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<groupClassVariant name="SAP">
					<groupField name="PaymentTerms"/>
					<groupField name="TradingPartner"/>
					<groupField name="IncoTerms1"/>
					<groupField name="IncoTerms2"/>
					<groupField name="BuyerCode"/>
					<groupField name="LineItemType"/>
					<groupField name="ValidateAccounting"/>
					<groupField name="IsHazmat"/>
					<groupField name="MSDSNumber"/>
					<groupField name="HazmatWeight"/>
				</groupClassVariant>
			</inGroupClass>
		</inGroup>
		<inGroup name="HeaderDetailsNoneditable">
			<inGroupClass name="ariba.purchasing.core.PurchaseOrder">
				<inGroupClassVariant name="SAP">

<!-- Start Q4 2013-RSD119-FDD5.0/TDD1.0 -->
					<groupField name="OIOAgreement">
                  				<visibility>
 	                 	  			<andCondition>
                            					<condition implementation="config.java.condition.CatBooleanFieldEqualTo" testField="this">
                            						<parameter name="TestField" value="OIOAgreement"/>
                            						<parameter name="TestValue" value="true"/>
                            					</condition>
								<condition implementation="ariba.common.core.condition.UserHasPermission">
									<parameter name="PermissionName" value="CatPurchasing"/>
								</condition>
							</andCondition>
						</visibility>
                        <properties rank="185"/>
                    </groupField>

<!-- End Q4 2013-RSD119-FDD5.0/TDD1.0 -->



					<groupField name="SupplierLocation">
						<properties
							label="@aml.CatSAPRequisitionExt/LabelSupplierLocation"
							rank="135" titleField="UniqueName"/>
					</groupField>

					<!-- groupField name="LineItems[0].IncoTerms1.Description">
					<visibility>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="LineItems[0].IncoTerms1"/>
					</visibility>
					<properties label="@aml.CatSAPRequisitionExt/IncoTerms1PrintLabel"
					titleField="Description"
					rank="185"/>
					</groupField-->

					<groupField name="IncoTerms">
						<visibility>
							<condition
								implementation="ariba.base.fields.condition.NonNullObject"
								testField="IncoTerms"/>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/IncoTerms1PrintLabel"
							rank="185"/>
					</groupField>

					<groupField name="BuyerCode">
						<visibility>
							<condition
								implementation="ariba.base.fields.condition.NonNullObject"
								testField="BuyerCode"/>
						</visibility>
						<properties chooserField="BuyerCode" rank="160"
							titleFormat="%s (%s)" titleGroup="CatChooserTable"/>
					</groupField>

					<groupField name="BuyerContact">
						<visibility>
							<condition
								implementation="ariba.base.fields.condition.NonNullObject"
								testField="BuyerContact"/>
						</visibility>
						<properties rank="180"/>
					</groupField>

				</inGroupClassVariant>
			</inGroupClass>

			<inGroupClass name="ariba.purchasing.core.DirectOrder">
				<inGroupClassVariant name="SAP">

					<groupField name="CloseOrder">
						<properties editable="false"
							label="@aml.cat.ui1/LabelClose" rank="190"/>
					</groupField>

				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>
		<group name="HeaderDetailsNoneditable">
			<groupClass name="ariba.purchasing.core.Requisition">
				<groupClassVariant name="SAP">

<!-- Start Q4 2013-RSD119-FDD5.0/TDD1.0 -->

		   <groupField name="OIOAgreement">
                        <visibility>
                            <andCondition>
                                <condition implementation="config.java.condition.CatBooleanFieldEqualTo" testField="this">
                                    <parameter name="TestField" value="OIOAgreement"/>
                                    <parameter name="TestValue" value="true"/>
                                </condition>
                                <condition implementation="ariba.common.core.condition.UserHasPermission">
                                    <parameter name="PermissionName" value="CatPurchasing"/>
                                </condition>
                                <condition implementation="config.java.condition.sap.CatReqContainsOIOSupplier" testField="this"/>
                            </andCondition>
                        </visibility>
                        <properties rank="313"/>
                    </groupField>

<!-- End Q4 2013-RSD119-FDD5.0/TDD1.0 -->


					<groupField name="ContractRefNumber">
						<properties rank="225" zone="Bottom"/>
					</groupField>
					<groupField name="HoldEscalation">
						<visibility>
							<andCondition>
								<condition
									implementation="ariba.common.core.condition.UserHasPermission">
									<parameter name="PermissionName"
										value="CatPurchasing"/>
								</condition>
								<condition
									implementation="config.java.condition.CatBooleanFieldEqualTo"
									testField="this">
									<parameter name="TestField"
										value="HoldEscalation"/>
									<parameter name="TestValue" value="true"/>
								</condition>
							</andCondition>
						</visibility>
						<properties rank="310"/>
					</groupField>
					<groupField name="HoldEscalationOwner">
						<visibility>
							<condition
								implementation="ariba.base.core.condition.NonEmptyField"/>
						</visibility>
						<properties rank="315"/>
					</groupField>
					<groupField name="CriticalAssetDown">
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="ISeRFQ"/>
							</notCondition>
						</visibility>
						<properties rank="525" zone="Bottom"/>
					</groupField>
					<groupField name="DelayPurchase">
						<properties rank="275" zone="Bottom"/>
					</groupField>
					<groupField name="HoldTillDate">
						<properties hidden="false" rank="305"/>
					</groupField>
					<groupField name="CustomCatalogPurchaseOrg">
						<properties rank="510"/>
					</groupField>
					<groupField name="CompanyCode">
						<properties editable="false"/>
					</groupField>
					<groupField name="ISeRFQ">
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="CriticalAssetDown"/>
							</notCondition>
						</visibility>
						<properties rank="550"/>
					</groupField>
				</groupClassVariant>
			</groupClass>
		</group>


		<!-- ================================================================== -->


		<!-- inGroup: LineItemGeneralFields                                     -->


		<!-- ================================================================== -->
		<inGroup name="LineItemGeneralFields">
			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="Description.ManPartNumber">
						<properties hidden="true"/>
					</groupField>
					<groupField name="Outline">
						<properties hidden="true"/>
					</groupField>
					<groupField name="Form">
						<properties hidden="true"/>
					</groupField>
					<groupField name="Description.SupplierPartAuxiliaryID">
						<properties hidden="true"/>
					</groupField>

					<groupField name="Description.ReasonCode">
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.common.core.condition.NonZeroMoney"
									testField="Description.Price"/>
							</notCondition>
						</visibility>
						<editability>
							<orCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.CatFieldMatchingMALineItem"
										testField="this">
										<parameter name="FieldName"
											value="Description.ReasonCode"/>
									</condition>
								</notCondition>
								<condition
									implementation="config.java.condition.CatStringFieldEqualTo"
									testField="this">
									<parameter name="TestField"
										value="ReasonCode"/>
									<parameter name="TestValue"
										value="@cat.aml.SAPpicklistvalues/NoValue"/>
								</condition>
							</orCondition>
						</editability>
						<properties forceRefresh="true" rank="52" required="true"/>
					</groupField>


					<!-- ** ADDED for R4 Price Not-To-Exceed functionality ** -->
					<groupField name="Description.NotToExceedPrice">
						<visibility>
							<andCondition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="Description.ReasonCode"/>
								<condition
									implementation="config.java.condition.CatStringFieldEqualTo"
									testField="this">
									<parameter name="TestField"
										value="Description.ReasonCode"/>
									<parameter name="TestValue"
										value="@cat.aml.SAPpicklistvalues/ReasonCode2"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.common.core.condition.NonZeroMoney"
										testField="Description.Price"/>
								</notCondition>
							</andCondition>
						</visibility>
						<properties forceRefresh="true" rank="53"/>
					</groupField>
					<groupField name="Description.Price">
						<!-- To prevent Price Edit if NTE Reason Code -->
						<!-- ****** Santanu Commented for break fix ******* -->
						<!--<editability>
						<condition implementation="config.java.condition.CatStringFieldNotEqualTo" testField="this">
						<parameter name="TestField" value="Description.ReasonCode"/>
						<parameter name="TestValue" value="@cat.aml.SAPpicklistvalues/ReasonCode2"/>
						</condition>
						</editability>-->
						<!-- ****** Santanu Commented for break fix ******* -->
						<editability>
							<andCondition>
								<condition
									implementation="ariba.procure.core.condition.CatalogItemEditable">
									<parameter inputField="this" name="LineItem"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.contract.core.condition.ContractItemPrice">
										<parameter inputField="this"
											name="ProcureLineItem"/>
									</condition>
								</notCondition>
								<notCondition>
									<condition
										implementation="ariba.contract.core.condition.NonCatalogMarkDownInEffect"
										testField="this"/>
								</notCondition>


								<!-- 5.2.06 (C) override AllowChangeOrderStates condition to check if prize is zero -->
								<condition
									implementation="config.java.condition.vcsv1.CATAllowChangeOrderStates">
									<parameter inputField="this"
										name="ProcureLineItem"/>
								</condition>
								<condition
									implementation="config.java.condition.CatStringFieldNotEqualTo"
									testField="this">
									<parameter name="TestField"
										value="Description.ReasonCode"/>
									<parameter name="TestValue"
										value="@cat.aml.SAPpicklistvalues/ReasonCode2"/>
								</condition>
								<notCondition>
									<andCondition>
										<condition
											implementation="ariba.base.fields.condition.EqualTo"
											testField="LineItemType">
											<parameter name="TargetValue"
												value="@cat.aml.picklistvalues1/TaxQualifier2"/>
										</condition>
										<condition
											implementation="ariba.base.fields.condition.EqualTo"
											testField="LineItemCollection.CompanyCode.ServiceItemFunc">
											<parameter name="TargetValue"
												value="Y"/>
										</condition>
									</andCondition>
								</notCondition>
								<orCondition>
									<condition
										implementation="ariba.procure.core.condition.AdHocLineItem"
										testField="this"/>
									<condition
										implementation="ariba.common.core.condition.RoleEqualTo">
										<parameter name="TargetValue"
											value="Data Maintainer"/>
									</condition>
								</orCondition>
							</andCondition>
						</editability>
						<properties forceRefresh="true" rank="49" required="true"/>
					</groupField>
					<groupField name="PurchaseOrg">
						<properties editable="false" rank="10"/>
					</groupField>
					<groupField name="UsePreferredSupplier">
						<properties
							fieldEditorClass="ariba.htmlui.fieldsui.fields.APEBoolean"
							rank="50"/>
					</groupField>
					<groupField name="SupplierLocation">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="IsAdHoc">
									<parameter name="TargetValue" value="true"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</notCondition>
							</andCondition>
						</editability>
						<validity>
							<orCondition>
								<andCondition>
									<condition
										implementation="ariba.common.core.condition.ActiveClusterRoot"/>
									<condition
										implementation="config.java.condition.sap.CatSAPSupplierLocationValidity">
										<parameter inputField="this"
											name="LineItem"/>
									</condition>
								</andCondition>
								<notCondition>
									<condition
										implementation="ariba.common.core.condition.UserHasPermission">
										<parameter name="PermissionName"
											value="CatPurchasing"/>
									</condition>
								</notCondition>
							</orCondition>
						</validity>
						<properties hidden="false"
							label="@aml.CatSAPRequisitionExt/SupplierLocationLabel"
							rank="51"/>
					</groupField>
					<groupField name="Supplier">
						<properties hidden="true"/>
					</groupField>
					<groupField name="HazmatWeight">
						<visibility>
							<andCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
								<condition
									implementation="ariba.common.core.condition.UserHasPermission">
									<parameter name="PermissionName"
										value="CatHazmat"/>
								</condition>
							</andCondition>
						</visibility>
						<properties rank="86" zone="Left"/>
					</groupField>
					<groupField name="IsHazmat">
						<visibility>
							<andCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
								<condition
									implementation="ariba.common.core.condition.UserHasPermission">
									<parameter name="PermissionName"
										value="CatHazmat"/>
								</condition>
							</andCondition>
						</visibility>
						<properties forceRefresh="true" rank="87" zone="Left"/>
					</groupField>
					<groupField name="MSDSNumber">
						<visibility>
							<andCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
								<condition
									implementation="ariba.common.core.condition.UserHasPermission">
									<parameter name="PermissionName"
										value="CatHazmat"/>
								</condition>
							</andCondition>
						</visibility>
						<properties rank="85" zone="Left"/>
					</groupField>
					<groupField name="LineItemType">
						<editability>
							<andCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
								<notCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</notCondition>
							</andCondition>
						</editability>
						<properties forceRefresh="true" rank="95" required="true"
							zone="Left"/>
					</groupField>
					<groupField name="BuyerCode">
						<visibility>
							<condition
								implementation="ariba.common.core.condition.UserHasPermission">
								<parameter name="PermissionName"
									value="CatPurchasing"/>
							</condition>
						</visibility>
						<editability>
							<andCondition>
								<orCondition>
									<condition
										implementation="ariba.purchasing.core.condition.RequisitionHasValidOrders">
										<parameter
											inputField="LineItemCollection"
											name="ProcureLineItemCollection"/>
									</condition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</orCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
							</andCondition>
						</editability>
						<properties forceRefresh="true" rank="11" required="true"
							zone="Right"/>
					</groupField>
					<groupField name="Description.LeadTime">
						<visibility>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</visibility>
						<editability>
							<andCondition>
								<condition
									implementation="ariba.procure.core.condition.AdHocLineItem"
									testField="Description.LineItem"/>
								<condition
									implementation="ariba.purchasing.core.condition.RequisitionHasValidOrders">
									<parameter inputField="LineItemCollection"
										name="ProcureLineItemCollection"/>
								</condition>
							</andCondition>
						</editability>
						<properties forceRefresh="true" rank="54" zone="Left"/>
					</groupField>
					<groupField name="CommodityCode">
						<properties hidden="true"/>
					</groupField>                                  
					<groupField name="Description.Description">
						<editability>
					    <!-- Start :  SpringRelease_RSD 193 (FDD_193_1.0 / TDD_193_4.0) -->	
                                        <orCondition>
                                                 <condition implementation="ariba.base.fields.condition.TrueBoolean" testField="Description.IsPartialItem"/>
						<andCondition>
							<condition
								implementation="ariba.procure.core.condition.CatalogItemEditable">
								<parameter inputField="this" name="LineItem"/>
							</condition>
							<condition
								implementation="ariba.purchasing.core.condition.AllowChangeOrderStates">
								<parameter inputField="this"
									name="ProcureLineItem"/>
							</condition>
							<orCondition>
								<andCondition>
									<condition
										implementation="ariba.procure.core.condition.AdHocLineItem"
										testField="this"/>
									<notCondition>
										<condition
											implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
											testField="this"/>
									</notCondition>
								</andCondition>
								<condition
									implementation="ariba.common.core.condition.RoleEqualTo">
									<parameter name="TargetValue"
										value="Data Maintainer"/>
								</condition>
							</orCondition>
						</andCondition>
                                               </orCondition>
                                           <!-- End :  SpringRelease_RSD 193 (FDD_193_1.0 / TDD_193_4.0) -->
						</editability>
						<properties required="true"/>
					</groupField>
					<groupField name="Description.SupplierPartNumber">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.procure.core.condition.CatalogItemEditable">
									<parameter inputField="this" name="LineItem"/>
								</condition>
								<condition
									implementation="ariba.purchasing.core.condition.AllowChangeOrderStates">
									<parameter inputField="this"
										name="ProcureLineItem"/>
								</condition>
								<orCondition>
									<condition
										implementation="ariba.procure.core.condition.AdHocLineItem"
										testField="this"/>
									<condition
										implementation="ariba.common.core.condition.RoleEqualTo">
										<parameter name="TargetValue"
											value="Data Maintainer"/>
									</condition>
								</orCondition>
							</andCondition>
						</editability>
					</groupField>
					<groupField name="Description.UnitOfMeasure">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.procure.core.condition.CatalogItemEditable">
									<parameter inputField="this" name="LineItem"/>
								</condition>
								<condition
									implementation="ariba.purchasing.core.condition.AllowChangeOrderStates">
									<parameter inputField="this"
										name="ProcureLineItem"/>
								</condition>
								<!-- condition implementation="ariba.base.fields.condition.NotEqualTo" testField="LineItemType">
								<parameter name="TargetValue" value="@cat.aml.picklistvalues1/TaxQualifier2"/>
								</condition>
								<condition implementation="ariba.base.fields.condition.EqualTo" testField="LineItemCollection.CompanyCode.ServiceItemFunc">
								<parameter name="TargetValue" value="Y"/>
								</condition -->
								<orCondition>
									<condition
										implementation="ariba.procure.core.condition.AdHocLineItem"
										testField="this"/>
									<condition
										implementation="ariba.common.core.condition.RoleEqualTo">
										<parameter name="TargetValue"
											value="Data Maintainer"/>
									</condition>
								</orCondition>
							</andCondition>
						</editability>
						<properties required="true"/>
					</groupField>
					<groupField name="Description.CommonCommodityCode">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.procure.core.condition.CommodityCodeEditable">
									<parameter inputField="this" name="LineItem"/>
									<parameter name="AlwaysEditableWhenInvalid"
										value="true"/>
								</condition>
								<condition
									implementation="ariba.purchasing.core.condition.AllowChangeOrderStates">
									<parameter inputField="this"
										name="ProcureLineItem"/>
								</condition>
								<condition
									implementation="ariba.purchasing.core.condition.RequisitionHasValidOrders">
									<parameter inputField="LineItemCollection"
										name="ProcureLineItemCollection"/>
								</condition>
								<orCondition>
									<andCondition>
										<condition
											implementation="ariba.procure.core.condition.AdHocLineItem"
											testField="this"/>
										<notCondition>
											<condition
												implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
												testField="this"/>
										</notCondition>
									</andCondition>
									<condition
										implementation="ariba.common.core.condition.RoleEqualTo">
										<parameter name="TargetValue"
											value="Data Maintainer"/>
									</condition>
									<andCondition>
										<condition
											implementation="ariba.procure.core.condition.NonMappedCommonCommodityCode"
											testField="Description"/>
										<condition
											implementation="ariba.common.core.condition.UserHasPermission">
											<parameter name="PermissionName"
												value="CatPurchasing"/>
										</condition>
									</andCondition>
								</orCondition>
							</andCondition>
						</editability>
						<properties forceRefresh="true"
							helpTip="@aml.cat.ui/HelpCategory"
							label="@aml.cat.ui/LabelCommodityCodeName"/>
					</groupField>
					<!-- Code added for Vertex -->
					<groupField name="TaxAmount">
				     <properties label="@aml.cat.Invoice/TaxAmount" editable="false" rank="60"/>
			       </groupField>
			       <!-- Vertex code ended  -->
				</inGroupClassVariant>
			</inGroupClass>
			<inGroupClass name="ariba.purchasing.core.ReqLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="SupplierLocation">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="IsAdHoc">
									<parameter name="TargetValue" value="true"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</notCondition>
							</andCondition>
						</editability>
						<validity>
							<orCondition>
								<andCondition>
									<condition
										implementation="ariba.common.core.condition.ActiveClusterRoot"/>
									<condition
										implementation="config.java.condition.sap.CatSAPSupplierLocationValidity">
										<parameter inputField="this"
											name="LineItem"/>
									</condition>
								</andCondition>
								<notCondition>
									<condition
										implementation="ariba.common.core.condition.UserHasPermission">
										<parameter name="PermissionName"
											value="CatPurchasing"/>
									</condition>
								</notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="LineItemCollection.ISeRFQ">
									<parameter name="Message"
										value="@cat.java.sap/InvalidSupplierLocation"/>
								</condition>
							</orCondition>
						</validity>
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="LineItemCollection.ISeRFQ"/>
							</notCondition>
						</visibility>
						<properties hidden="false"
							label="@aml.CatSAPRequisitionExt/SupplierLocationLabel"
							rank="50"/>
					</groupField>
			<!-- Added by Aswini for Vertex -->
					<groupField name="TaxUse">
					<!-- removed editability condition for Vertex -->
					<!--  <editability>
                            <notCondition>
                                <condition implementation="config.java.condition.vcsv1.CatAdditionalChargeLineItem"
                                  testField="this"/>
                            </notCondition>
                        </editability> -->
						<!-- removed condition -->
                        <properties rank="90"
                        required="true"/>
                    </groupField>
					<!-- Code Ended for Vertex -->	
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>

		<inGroup name="LineItemSimpleGeneralFields">
			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="CommodityCode">
						<properties hidden="true"/>
					</groupField>
					<groupField name="Outline">
						<properties hidden="true"/>
					</groupField>
					<groupField name="PurchaseOrg">
						<properties editable="false" rank="1"/>
					</groupField>
					<groupField name="SupplierLocation">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="IsAdHoc">
									<parameter name="TargetValue" value="true"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</notCondition>
							</andCondition>
						</editability>
						<validity>
							<orCondition>
								<andCondition>
									<condition
										implementation="ariba.common.core.condition.ActiveClusterRoot"/>
									<condition
										implementation="config.java.condition.sap.CatSAPSupplierLocationValidity">
										<parameter inputField="this"
											name="LineItem"/>
									</condition>
								</andCondition>
								<notCondition>
									<condition
										implementation="ariba.common.core.condition.UserHasPermission">
										<parameter name="PermissionName"
											value="CatPurchasing"/>
									</condition>
								</notCondition>
							</orCondition>
						</validity>
						<properties hidden="false"
							label="@aml.CatSAPRequisitionExt/SupplierLocationLabel"
							rank="50"/>
					</groupField>
					<groupField name="Supplier">
						<properties hidden="true"/>
					</groupField>

					<groupField name="TaxCode">
						<properties editable="false"/>
					</groupField>

				</inGroupClassVariant>
			</inGroupClass>

			<inGroupClass name="ariba.purchasing.core.ReqLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="DerivedAccountDistribution">
						<validity>
							<condition
								implementation="config.java.condition.sap.CATSAPLineItemValidity">
								<parameter inputField="LineItemCollection"
									name="LICToCheck"/>
							</condition>
						</validity>
						<properties rank="90"/>
					</groupField>

					<groupField name="BuyerCode">
						<visibility>
							<condition
								implementation="ariba.common.core.condition.UserHasPermission">
								<parameter name="PermissionName"
									value="CatPurchasing"/>
							</condition>
						</visibility>
						<properties editable="true" rank="160"/>
					</groupField>

					<groupField name="ShipTo">
						<properties editable="false" rank="170"
							titleFormat="%s  %s, %s"
							titleGroup="CatAddressSelection"/>
					</groupField>

					<groupField name="MailDrop">
						<visibility>
							<condition
								implementation="ariba.common.core.condition.UserHasPermission">
								<parameter name="PermissionName"
									value="CatTransactionCtr"/>
							</condition>
						</visibility>
						<properties editable="false" rank="180"/>
					</groupField>
					<groupField name="NeedBy">
						<visibility>
							<condition
								implementation="ariba.common.core.condition.UserHasPermission">
								<parameter name="PermissionName"
									value="CatTransactionCtr"/>
							</condition>
						</visibility>
						<properties editable="false" rank="190"/>
					</groupField>
					<!-- coded for Vertex -->
					<groupField name="TaxUse">
                        <visibility>
                            <condition implementation="ariba.common.core.condition.UserHasPermission">
                                <parameter name="PermissionName" value="CatTax"/>
                            </condition>
                        </visibility>
                        <properties rank="38"/>
                    </groupField>
					<!-- code ended for Vertex -->
				</inGroupClassVariant>
			</inGroupClass>

			<inGroupClass name="ariba.purchasing.core.POLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="DerivedAccountDistribution">
						<properties rank="90"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>

			<inGroupClass name="ariba.purchasing.core.ReqLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="SupplierLocation">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="IsAdHoc">
									<parameter name="TargetValue" value="true"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</notCondition>
							</andCondition>
						</editability>
						<validity>
							<orCondition>
								<andCondition>
									<condition
										implementation="ariba.common.core.condition.ActiveClusterRoot"/>
									<condition
										implementation="config.java.condition.sap.CatSAPSupplierLocationValidity">
										<parameter inputField="this"
											name="LineItem"/>
									</condition>
								</andCondition>
								<notCondition>
									<condition
										implementation="ariba.common.core.condition.UserHasPermission">
										<parameter name="PermissionName"
											value="CatPurchasing"/>
									</condition>
								</notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="LineItemCollection.ISeRFQ">
									<parameter name="Message"
										value="@cat.java.sap/InvalidSupplierLocation"/>
								</condition>
							</orCondition>
						</validity>
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="LineItemCollection.ISeRFQ"/>
							</notCondition>
						</visibility>
						<properties hidden="false"
							label="@aml.CatSAPRequisitionExt/SupplierLocationLabel"
							rank="50"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>


		<!-- ================================================================== -->


		<!-- inGroup: RequisitionUnorderedNonCatalogDetails                     -->


		<!-- ================================================================== -->
		<inGroup name="RequisitionUnorderedNonCatalogDetails">
			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="CommodityCode">
						<properties hidden="true"/>
					</groupField>

					<groupField name="Description.ManPartNumber">
						<properties hidden="true" rank="47" zone="left"/>
					</groupField>
					<groupField name="Description.SupplierPartAuxiliaryID">
						<properties hidden="true"/>
					</groupField>
					<groupField name="Description.ReasonCode">
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.common.core.condition.NonZeroMoney"
									testField="Description.Price"/>
							</notCondition>
						</visibility>


						<!-- added validity here to ensure enforced on non-catalog screen -->
						<validity>
							<orCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.CatStringFieldEqualTo"
										testField="this">
										<parameter name="TestField"
											value="Description.ReasonCode"/>
										<parameter name="TestValue"
											value="(no value)"/>
									</condition>
								</notCondition>
								<condition
									implementation="config.java.condition.CatNonZeroMoney"
									testField="Description.Price">
									<parameter name="Message"
										value="@aml.cat.sap/MessageReasonCodeInvalid"/>
								</condition>
								<condition
									implementation="config.java.condition.CatBooleanFieldEqualTo"
									nullHandling="passThrough" testField="this">
									<parameter name="TestField" value="ISeRFQ"/>
									<parameter name="TestValue" value="true"/>
								</condition>
							</orCondition>
						</validity>
						<properties forceRefresh="true" rank="81" zone="Right"/>
					</groupField>
					<groupField name="Description.NotToExceedPrice">
						<visibility>
							<andCondition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="Description.ReasonCode"/>
								<condition
									implementation="config.java.condition.CatStringFieldEqualTo"
									testField="this">
									<parameter name="TestField"
										value="Description.ReasonCode"/>
									<parameter name="TestValue"
										value="@cat.aml.SAPpicklistvalues/ReasonCode2"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.common.core.condition.NonZeroMoney"
										testField="Description.Price"/>
								</notCondition>
							</andCondition>
						</visibility>


						<!-- added validity here to ensure enforced on non-catalog screen -->
						<!--
						<validity>
						<orCondition>
						<condition implementation="ariba.common.core.condition.NonZeroMoney"
						testField="Description.Price"/>
						<notCondition>
						<condition implementation="config.java.condition.CatStringFieldEqualTo"
						testField="this">
						<parameter name="TestField" value="Description.ReasonCode"/>
						<parameter name="TestValue" value="@cat.aml.SAPpicklistvalues/ReasonCode2"/>
						</condition>
						</notCondition>
						<condition implementation="config.java.condition.CatNonZeroMoney"
						testField="Description.NotToExceedPrice">
						<parameter name="Message" value="@aml.cat.ui1/MessageNotToExceedPriceInvalid"/>
						</condition>
						</orCondition>
						</validity>
						-->
						<properties rank="82" zone="Right"/>
					</groupField>
					<groupField name="Description.Price">
						<!-- To prevent Price Edit if NTE Reason Code -->
						<!-- ****** Santanu Commented for break fix ******* -->
						<!--<editability>
						<condition implementation="config.java.condition.CatStringFieldNotEqualTo" testField="this">
						<parameter name="TestField" value="Description.ReasonCode"/>
						<parameter name="TestValue" value="@cat.aml.SAPpicklistvalues/ReasonCode2"/>
						</condition>
						</editability>-->
						<!-- ****** Santanu Commented for break fix ******* -->
						<editability>
							<andCondition>
								<condition
									implementation="ariba.procure.core.condition.CatalogItemEditable">
									<parameter inputField="this" name="LineItem"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.contract.core.condition.ContractItemPrice">
										<parameter inputField="this"
											name="ProcureLineItem"/>
									</condition>
								</notCondition>
								<notCondition>
									<condition
										implementation="ariba.contract.core.condition.NonCatalogMarkDownInEffect"
										testField="this"/>
								</notCondition>


								<!-- 5.2.06 (C) override AllowChangeOrderStates condition to check if prize is zero -->
								<condition
									implementation="config.java.condition.vcsv1.CATAllowChangeOrderStates">
									<parameter inputField="this"
										name="ProcureLineItem"/>
								</condition>
								<condition
									implementation="config.java.condition.CatStringFieldNotEqualTo"
									testField="this">
									<parameter name="TestField"
										value="Description.ReasonCode"/>
									<parameter name="TestValue"
										value="@cat.aml.SAPpicklistvalues/ReasonCode2"/>
								</condition>
								<notCondition>
									<andCondition>
										<condition
											implementation="ariba.base.fields.condition.EqualTo"
											testField="LineItemType">
											<parameter name="TargetValue"
												value="@cat.aml.picklistvalues1/TaxQualifier2"/>
										</condition>
										<condition
											implementation="ariba.base.fields.condition.EqualTo"
											testField="LineItemCollection.CompanyCode.ServiceItemFunc">
											<parameter name="TargetValue"
												value="Y"/>
										</condition>
									</andCondition>
								</notCondition>
							</andCondition>
						</editability>
						<properties forceRefresh="true" required="true"/>
					</groupField>
					<groupField name="UsePreferredSupplier">
						<properties
							fieldEditorClass="ariba.htmlui.fieldsui.fields.APEBoolean"
							rank="49" zone="Left"/>
					</groupField>
					<groupField name="SupplierLocation">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="IsAdHoc">
									<parameter name="TargetValue" value="true"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</notCondition>
							</andCondition>
						</editability>
						<validity>
							<orCondition>
								<andCondition>
									<condition
										implementation="ariba.common.core.condition.ActiveClusterRoot"/>
									<condition
										implementation="config.java.condition.sap.CatSAPSupplierLocationValidity">
										<parameter inputField="this"
											name="LineItem"/>
									</condition>
								</andCondition>
								<notCondition>
									<condition
										implementation="ariba.common.core.condition.UserHasPermission">
										<parameter name="PermissionName"
											value="CatPurchasing"/>
									</condition>
								</notCondition>
							</orCondition>
						</validity>
						<properties hidden="false"
							label="@aml.CatSAPRequisitionExt/SupplierLocationLabel"
							rank="50"/>
					</groupField>
					<groupField name="Supplier">
						<properties hidden="true"/>
					</groupField>
					<groupField name="Description.CommonCommodityCode">
						<validity>
							<andCondition>
								<condition
									implementation="ariba.contract.core.condition.ValidCommonCommodityCodeForContract"
									testField="this"/>
								<orCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"/>
									<condition
										implementation="ariba.contract.core.condition.IsContractSourcingRequest">
										<parameter inputField="this" name="PLI"/>
									</condition>
								</orCondition>
								<condition
									implementation="config.java.condition.CatLowLevelCommodityCode"
									testField="this"/>
								<condition
									implementation="config.java.condition.sap.ValidSAPCommodityExportMapEntry">
									<parameter inputField="this" name="LineItem"/>
								</condition>
							</andCondition>
						</validity>
					</groupField>
					<groupField name="HazmatWeight">
						<visibility>
							<andCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
								<condition
									implementation="ariba.common.core.condition.UserHasPermission">
									<parameter name="PermissionName"
										value="CatHazmat"/>
								</condition>
							</andCondition>
						</visibility>
						<properties rank="86" zone="Left"/>
					</groupField>
					<!--<groupField name="IsHazmat">
					<visibility>
					<andCondition>
					<notCondition>
					<condition implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem" testField="this"/>
					</notCondition>
					<condition implementation="ariba.common.core.condition.UserHasPermission">
					<parameter name="PermissionName" value="CatHazmat"/>
					</condition>
					</andCondition>
					</visibility>
					<properties rank="87" zone="Left" forceRefresh="true"/>
					</groupField>-->
					<groupField name="MSDSNumber">
						<!--<visibility>
						<andCondition>
						<notCondition>
						<condition implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem" testField="this"/>
						</notCondition>
						<condition implementation="ariba.common.core.condition.UserHasPermission">
						<parameter name="PermissionName" value="CatHazmat"/>
						</condition>
						</andCondition>
						</visibility>-->
						<editability>
							<notCondition>
								<condition
									implementation="ariba.base.core.condition.NonEmptyField"
									testField="LineItemCollection.PreviousVersion">
								</condition>
							</notCondition>
						</editability>
						<properties rank="85" zone="Left"/>
					</groupField>
					<groupField name="LineItemType">
						<editability>
							<orCondition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
								<notCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</notCondition>
							</orCondition>
						</editability>
						<properties forceRefresh="true" rank="95" required="true"
							zone="Left"/>
					</groupField>
					<groupField name="BuyerCode">
						<visibility>
							<condition
								implementation="ariba.common.core.condition.UserHasPermission">
								<parameter name="PermissionName"
									value="CatPurchasing"/>
							</condition>
						</visibility>
						<editability>
							<andCondition>
								<condition
									implementation="ariba.purchasing.core.condition.RequisitionHasValidOrders">
									<parameter inputField="LineItemCollection"
										name="ProcureLineItemCollection"/>
								</condition>
								<notCondition>
									<condition
										implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
										testField="this"/>
								</notCondition>
							</andCondition>
						</editability>
						<properties forceRefresh="true" rank="11" required="true"
							zone="Right"/>
					</groupField>
					<groupField name="Description.LeadTime">
						<visibility>
							<notCondition>
								<condition
									implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
									testField="this"/>
							</notCondition>
						</visibility>
						<editability>
							<andCondition>
								<condition
									implementation="ariba.procure.core.condition.AdHocLineItem"
									testField="Description.LineItem"/>
								<condition
									implementation="ariba.purchasing.core.condition.RequisitionHasValidOrders">
									<parameter inputField="LineItemCollection"
										name="ProcureLineItemCollection"/>
								</condition>
							</andCondition>
						</editability>
						<properties forceRefresh="true" rank="54" zone="Left"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>
			<inGroupClass name="ariba.purchasing.core.ReqLineItem">
				<inGroupClassVariant name="SAP">
					<!-- Dharshan -Issue 1017 -->
					<groupField name="Description.Description">
						<validity>
							<andCondition>
								<condition
									implementation="ariba.base.core.condition.NonEmptyField"/>
								<condition
									implementation="ariba.base.fields.condition.StringLength">
									<parameter name="Max" value="599"/>
								</condition>
							</andCondition>
						</validity>
						<properties charWidth="70" forceRefresh="false"
							textLength="599"/>
					</groupField>

					<!-- Issue 1017 -->
					<groupField name="SupplierLocation">
						<editability>
							<andCondition>
								<condition
									implementation="ariba.base.fields.condition.EqualTo"
									testField="IsAdHoc">
									<parameter name="TargetValue" value="true"/>
								</condition>
								<notCondition>
									<condition
										implementation="ariba.base.core.condition.NonEmptyField"
										testField="LineItemCollection.PreviousVersion">
									</condition>
								</notCondition>
							</andCondition>
						</editability>
						<validity>
							<orCondition>
								<andCondition>
									<condition
										implementation="ariba.common.core.condition.ActiveClusterRoot"/>
									<condition
										implementation="config.java.condition.sap.CatSAPSupplierLocationValidity">
										<parameter inputField="this"
											name="LineItem"/>
									</condition>
								</andCondition>
								<notCondition>
									<condition
										implementation="ariba.common.core.condition.UserHasPermission">
										<parameter name="PermissionName"
											value="CatPurchasing"/>
									</condition>
								</notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="LineItemCollection.ISeRFQ">

									<parameter name="Message"
										value="@cat.java.sap/InvalidSupplierLocation"/>
								</condition>
							</orCondition>
						</validity>
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.TrueBoolean"
									testField="LineItemCollection.ISeRFQ"/>
							</notCondition>
						</visibility>
						<properties hidden="false"
							label="@aml.CatSAPRequisitionExt/SupplierLocationLabel"
							rank="50"/>
					</groupField>
<!-- added by Aswini for Vertex -->
					<groupField name="TaxUse">
                        <properties rank="83"
                                    required="true"
                                    zone="Right"/>
                    </groupField>
					<!-- code ended -->
				</inGroupClassVariant>
			</inGroupClass>

		</inGroup>
		<group name="CatSAPSupplierLocationChooser">
			<groupClass name="ariba.common.core.SupplierLocation">
				<groupClassVariant name="SAP">
					<groupField name="Name">
						<properties rank="3"/>
					</groupField>
					<groupField name="UniqueName">
						<properties
							label="@aml.CatSAPRequisitionExt/SupplierLocationIDLabel"
							rank="4"/>
					</groupField>
					<groupField name="PostalAddress.Lines">
						<properties
							label="@aml.CatSAPRequisitionExt/AddressLineLabel"
							rank="10"/>
					</groupField>
					<groupField name="PostalAddress.City">
						<properties label="@aml.CatSAPRequisitionExt/CityLabel"
							rank="20"/>
					</groupField>
					<groupField name="PostalAddress.State">
						<properties label="@aml.CatSAPRequisitionExt/StateLabel"
							rank="30"/>
					</groupField>
					<groupField name="PostalAddress.Country.UniqueName">
						<properties
							label="@aml.CatSAPRequisitionExt/CountryLabel"
							rank="40"/>
					</groupField>
					<!--
					<groupField name="PreferredOrderingMethod">
					<properties label="@aml.CatSAPRequisitionExt/POMLabel" rank="45"/>
					</groupField>
					-->
				</groupClassVariant>
			</groupClass>
		</group>
		<inGroup name="ObjectDuplicate">
			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="Description.ReasonCode"/>
					<groupField name="Description.NotToExceedPrice"/>
					<!-- Start Q4 2013-RSD114-FDD5.0/TDD1.0 -->
						<!-- <groupField name="PaymentTerms"/> -->
					<!-- End Q4 2013-RSD114-FDD5.0/TDD1.0) -->
					<groupField name="LineItemType"/>
					<groupField name="BuyerCode"/>
					<!-- CR212: To add trading partner field to mass copy and mass edit.
					Here below adding field to object duplicate group,
					to copy into new line items when mass copying-->
					<groupField name="TradingPartner"/>


					<!--CR212: trading partner addition to object duplicate complete-->
					<groupField name="Outline">
						<properties hidden="true"/>
					</groupField>
					<groupField name="IsHazmat"/>
					<groupField name="MSDSNumber"/>
					<groupField name="HazmatWeight"/>
					<!-- Removed by Soumya from Copy Group for Vertex-->
					<remove>
					<!-- Start Q4 2013-RSD114-FDD5.0/TDD1.0 -->

						<groupField name="PaymentTerms"/>

					<!-- End Q4 2013-RSD114-FDD5.0/TDD1.0 -->
					<groupField name="Carrier"/>
					<groupField name="TaxAmount"/>
					</remove>
					<!-- code ended -->
				</inGroupClassVariant>
			</inGroupClass>
			<inGroupClass name="ariba.purchasing.core.ReqLineItem">
				<inGroupClassVariant name="SAP">

					<groupField name="DerivedAccountDistribution"/>
					<groupField name="DeliverTo">
						<properties hidden="false"/>
					</groupField>
					<groupField name="DeliverToPhone"/>
					<groupField name="IncoTerms1"/>
					<groupField name="IncoTerms2"/>
					<groupField name="MailDrop"/>
					<!-- added for vertex -->
					<groupField name="TaxUse"/>
					<!-- code ended -->
				</inGroupClassVariant>
			</inGroupClass>
			<inGroupClass
				name="ariba.receiving.core.ReceivableLineItemCollection">
				<inGroupClassVariant name="SAP">
					<groupField name="WBSElementText">
						<properties hidden="false"/>
					</groupField>
					<groupField name="InternalOrderText">
						<properties hidden="false"/>
					</groupField>
					<groupField name="AccountCategory">
						<properties hidden="false"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>

			<inGroupClass name="ariba.purchasing.core.Requisition">
				<inGroupClassVariant name="SAP">
					<groupField name="WBSElementText">
						<properties hidden="false"/>
					</groupField>
<!-- Start Q4 2013-RSD119-FDD5.0/TDD1.0 -->
					<groupField name="OIOAgreement"/>
<!-- End Q4 2013-RSD119-FDD5.0/TDD1.0 -->
					<groupField name="InternalOrderText">
						<properties hidden="false"/>
					</groupField>
					<groupField name="AccountCategory">
						<properties hidden="false"/>
					</groupField>
					<!-- groupField name="DeliverTo"/ -->
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>
		<inGroup name="ObjectDefaulting">
			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<inGroupClassVariant name="SAP">
					<!--<groupField name="PaymentTerms"/>
					<groupField name="TaxCode"/>
					<groupField name="AccountCategory"/>-->
					<groupField name="Description.ReasonCode"/>
					<groupField name="Description.NotToExceedPrice"/>
				</inGroupClassVariant>
			</inGroupClass>
			<inGroupClass name="ariba.purchasing.core.ReqLineItem">
					<inGroupClassVariant name="SAP">
			       	<!-- added for vertex -->
					<groupField name="TaxUse"/>
					<!-- code ended -->
			</inGroupClassVariant>
			</inGroupClass>
		</inGroup>
		<inGroup name="ObjectDetails">
			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="PaymentTerms"/>
					<groupField name="Description.ReasonCode"/>
					<groupField name="Description.NotToExceedPrice"/>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>
		<inGroup name="IRLineItemGeneralFields">
			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="Description.CommonCommodityCode">
						<properties label="CommonCommodityCode" rank="57"/>
					</groupField>
					<groupField name="Outline">
						<properties hidden="true"/>
					</groupField>
					<groupField name="Form">
						<properties hidden="true"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>
			<inGroupClass name="ariba.purchasing.core.Requisition">
				<inGroupClassVariant name="SAP">
					<groupField name="CompanyCode">
						<properties rank="90"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>

		<inGroup name="AvailableSearchFields">
			<!-- Added by Divya for CR 229 START -->
			<inGroupClass name="ariba.purchasing.core.Requisition">
				<inGroupClassVariant name="SAP">
					<groupField name="CompanyCode.UniqueName">
						<properties convertCase="upper" hidden="false"
							label="CompanyCode" showByDefaultForSearch="false"
							stringSearchType="equality"/>
					</groupField>
			<!-- Start: SpringRelease_RSD 140 (FDD_140_4.2 / TDD_140_2.0) -->
					<remove>
						<groupField name="LineItems.Description.CommonSupplier"/>
				       </remove>
			<!-- End: SpringRelease_RSD 140 (FDD_140_4.2 / TDD_140_2.0) -->
				</inGroupClassVariant>
			</inGroupClass>
			<!-- Added By Divya R Nair for CR 229 END -->
			<inGroupClass
				name="ariba.receiving.core.ReceivableLineItemCollection">
				<inGroupClassVariant name="SAP">
					<groupField name="InternalOrderText">
						<properties convertCase="upper" hidden="false"
							label="@aml.SAPCoreExt/AccountingCompanyCodeNametableInternalOrderLabel"
							showByDefaultForSearch="false"
							stringSearchType="equality"/>
					</groupField>


					<!--CR 211 To enable requisition searching based on MSDS number and trading partner -->
					<groupField name="LineItems.MSDSNumber">
						<properties convertCase="upper" hidden="false"
							label="@aml.CatSAPCoreExt/MSDSNumberLabel"
							showByDefaultForSearch="false"
							stringSearchType="substring"/>
					</groupField>
					<groupField name="LineItems.TradingPartner.UniqueName">
						<properties convertCase="upper" hidden="false"
							label="@aml.CatSAPCoreExt/TradingPartnerLabel"
							showByDefaultForSearch="false"
							stringSearchType="equality"/>
					</groupField>
					<!--End CR 211-->


					<!-- Adding By Divya for Buyer Code to the Search Filters START -->

					<groupField name="LineItems.BuyerCode.BuyerCode">
						<properties convertCase="upper" hidden="false"
							label="@aml.CatSAPCoreExt/BuyerCodeLabel1"
							showByDefaultForSearch="false"
							stringSearchType="equality"/>
					</groupField>


					<!-- Adding By Divya for Buyer Code to the Search Filters END -->

					<groupField name="LineItems.Supplier">
						<properties chooserField="Name"
							chooserGroup="CatChooserTable"
							showByDefaultForSearch="false"/>
					</groupField>

					<groupField name="WBSElementText">
						<properties convertCase="upper" hidden="false"
							label="@aml.SAPCoreExt/AccountingCompanyCodeNametableWBSElementLabel"
							showByDefaultForSearch="false"
							stringSearchType="equality"/>
					</groupField>
					<groupField
						name="LineItems.Accountings.SplitAccountings.CostCenterText">
						<properties convertCase="upper" hidden="false"
							label="@aml.SAPCoreExt/AccountingCompanyCodeNametableCostCenterLabel"
							showByDefaultForSearch="false"
							stringSearchType="equality"/>
					</groupField>
					<!-- Issue 967 -adding GL as search filter-->
					<groupField
						name="LineItems.Accountings.SplitAccountings.GeneralLedgerText">
						<properties convertCase="upper" hidden="false"
							label="@aml.CatSAPRequisitionExt/GeneralLegenderTextLabel"
							showByDefaultForSearch="false"
							stringSearchType="beginsWith"/>
					</groupField>

					<groupField name="LineItems.ShipTo">
						<properties showByDefaultForSearch="false"
							titleFormat="%s  %s, %s"
							titleGroup="CatAddressSelection"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>

		<group name="DirectOrderPrintHTML">
			<groupClass name="ariba.purchasing.core.PurchaseOrder">
				<groupClassVariant name="SAP">
					<groupField name="CompanyCode.Description">
						<visibility>
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
									<parameter inputField="this"
										name="HeaderToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayCompanyName"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="CompanyCode"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/CompanyCodePrintLabel"
							rank="10"/>
					</groupField>
                                        <!-- Start: Mach1 R5.5 (FRD2.1/TD2.1) -->
					<groupField name="CompanyCode.RegisteredAddress.DerivedAddress">
						<visibility>
							<condition implementation="ariba.base.fields.condition.NonNullObject"
									testField="CompanyCode"/>
						</visibility>
						<properties rank="12" label= "@aml.CatSAPRequisitionExt/SoldToAddressLabel"/>
					</groupField>
                                        <!-- End: Mach1 R5.5 (FRD2.1/TD2.1) -->
                                        
                                        
					<groupField name="Supplier.UniqueName">
						<visibility>
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
									<parameter inputField="this"
										name="HeaderToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplaySupplierCode"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="Supplier"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/SupplierLocationPrintLabel"
							rank="20"/>
					</groupField>
					
					<!-- RSD111
					<groupField name="LineItemCollection.CompanyCode.Description">
						<properties label = "@aml.CatSAPRequisitionExt/CompanyCodePrintLabel" rank="10"/>
					</groupField>
					End RSD111 -->

					<groupField name="PaymentTerms.Description">
						<visibility>
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
									<parameter inputField="this"
										name="HeaderToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayPaymentTerms"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="PaymentTerms"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/PaymentTermsPrintLabel"
							rank="40"/>
					</groupField>


					<!-- AUL,sdey : Make this field not visible as there is a custom code to show payment terms -->
					<groupField
						name="LineItems[0].SupplierLocation.PaymentTerms.Description">
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.AlwaysTrue"/>
							</notCondition>
						</visibility>
					</groupField>


					<!-- AUL,sdey : Make this field not visible as there is a custom code to show payment terms -->

					<!-- groupField name="LineItems[0].IncoTerms1.Description">
					< visibility>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="LineItems[0].IncoTerms1"/>
					</visibility>
					<visibility>
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
					<parameter name="HeaderToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplayIncoTerms"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="LineItems[0].IncoTerms1"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/IncoTerms1PrintLabel" rank="50"/>
					</groupField -->

					<groupField name="IncoTerms">
						<visibility>
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
									<parameter inputField="this"
										name="HeaderToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayIncoTerms"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="IncoTerms"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/IncoTerms1PrintLabel"
							rank="50"/>
					</groupField>
					<groupField name="TaxInstructions">
						<visibility>
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
									<parameter inputField="this"
										name="HeaderToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayTaxInst"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="TaxInstructions"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/TaxInfoPrintLabel"
							rank="20"/>
					</groupField>
					<groupField name="BuyerContact">
						<visibility
							clusterType="ariba.procure.core.ProcureLineItemCollection">
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
									<parameter inputField="this"
										name="HeaderToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayPurchasingInfo"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="BuyerContact"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/BuyerContactPrintLabel"
							rank="80"/>
					</groupField>
					<!-- Code added by Abhishek for CGM PO Print starts -->
					<groupField name="BuyerCode.UserID.EmailAddress">
						<visibility>
							<condition implementation="ariba.base.fields.condition.NonNullObject"
									testField="BuyerCode"/>
						</visibility>
						<properties rank="90" label= "@aml.CatSAPRequisitionExt/BuyerContactEmailAddressPrintLabel" />
					</groupField>
					<!-- Code added by Abhishek for CGM PO Print ends -->
					<!-- Start: Mach1 R5.5 (FRD8.1/TD8.1) -->
					<groupField name="SupplierLocation.RegistrationNumber">
						<visibility>
							<condition implementation="ariba.base.fields.condition.NonNullObject"
									testField="Supplier"/>
						</visibility>
						<properties rank="95" label= "@aml.CatSAPRequisitionExt/VATRegistrationNumberLabel" />
					</groupField>
					<!-- Start: Mach1 R5.5 (FRD8.1/TD8.1) -->					
					<!-- groupField name="LineItems[0].BuyerCode.BuyerName">
					<visibility clusterType="ariba.procure.core.ProcureLineItemCollection">
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
					<parameter name="HeaderToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplayPurchasingInfo"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="LineItems[0].BuyerCode"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/BuyerNamePrintLabel" rank="80"/>
					</groupField -->
					<!-- groupField name="LineItems[0].BuyerCode.UserID.Telephone">
					<visibility clusterType="ariba.procure.core.ProcureLineItemCollection">
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
					<parameter name="HeaderToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplayPurchasingInfo"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="LineItems[0].BuyerCode.UserID.Telephone"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/BuyerTelephonePrintLabel" rank="90"/>
					</groupField -->
				</groupClassVariant>
			</groupClass>
		</group>
		
		<!-- Starts SpringRelease_RSD 111(FDD4.1,4.2/TDD1.1,1.2)-->
		<!-- ================================================================== -->
		<!-- inGroup: RequisitionPrintHTML / RequisitionPrintText               -->
		<!-- ================================================================== -->
		<group name="RequisitionPrintHTML">
		    <groupClass name="ariba.purchasing.core.Requisition">
			<groupClassVariant name="SAP">
			    <groupField name="CompanyCode.Description">
				<visibility>
				<andCondition>
					<condition
						implementation="config.java.print.sap.CatSAPHeaderPrintDisplayCondition">
						<parameter inputField="this"
							name="HeaderToCheck"/>
						<parameter name="FieldToCheck"
							value="DisplayCompanyName"/>
					</condition>
					<condition
						implementation="ariba.base.fields.condition.NonNullObject"
						testField="CompanyCode"/>
				</andCondition>
			</visibility>
			<properties label="@aml.CatSAPRequisitionExt/CompanyCodeLegalEntity" rank="10"/>
			    </groupField>
			</groupClassVariant>
		    </groupClass>
        	</group>
        	
        	<!-- Ends SpringRelease_RSD 111(FDD4.1,4.2/TDD1.1,1.2)-->
		
		
		<inGroup name="LineItemPrint">
			<inGroupClass name="ariba.purchasing.core.POLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="Requisition.UniqueName">
						<properties hidden="true"/>
					</groupField>

					<groupField name="Requisition.Requester.Name">
						<properties hidden="true"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>

			<inGroupClass name="ariba.procure.core.ProcureLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="Form">
						<properties hidden="true"/>
					</groupField>

					<!-- groupField name="LineItemCollection.CompanyCode.Description">
					<visibility clusterType="ariba.procure.core.ProcureLineItemCollection">
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
					<parameter name="LineToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplayCompanyName"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="LineItemCollection.CompanyCode"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/CompanyCodePrintLabel" rank="10"/>
					</groupField-->
					<!-- groupField name="IncoTerms1.Description">
					<visibility clusterType="ariba.procure.core.ProcureLineItemCollection">
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
					<parameter name="LineToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplayIncoTerms"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="IncoTerms1"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/IncoTerms1PrintLabel" rank="50"/>
					</groupField -->
					<!--groupField name="IncoTerms2">
					<visibility clusterType="ariba.procure.core.ProcureLineItemCollection">
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
					<parameter name="LineToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplayIncoTerms"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="IncoTerms2"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/IncoTerms2PrintLabel" rank="60"/>
					</groupField -->
					<!-- groupField name="PaymentTerms.Description">
					<visibility clusterType="ariba.procure.core.ProcureLineItemCollection">
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
					<parameter name="LineToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplayPaymentTerms"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="PaymentTerms"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/PaymentTermsPrintLabel" rank="40"/>
					</groupField -->
					<groupField name="TaxCode.Description">
						<visibility
							clusterType="ariba.procure.core.ProcureLineItemCollection">
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
									<parameter inputField="this"
										name="LineToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayTaxInfo"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="TaxCode"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/TaxCodePrintLabel"
							rank="30"/>
					</groupField>
					<groupField name="Description.ReasonCode">
						<visibility
							clusterType="ariba.procure.core.ProcureLineItemCollection">
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
									<parameter inputField="this"
										name="LineToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayReasonCode"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="Description.ReasonCode"/>
								<condition
									implementation="config.java.condition.CatStringFieldNotEqualTo"
									testField="this">
									<parameter name="TestField"
										value="Description.ReasonCode"/>
									<parameter name="TestValue"
										value="(no value)"/>
								</condition>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/ReasonCodePrintLabel"
							rank="70"/>
					</groupField>
					<!-- groupField name="BuyerCode.BuyerName">
					<visibility clusterType="ariba.procure.core.ProcureLineItemCollection">
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
					<parameter name="LineToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplayPurchasingInfo"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="BuyerCode.BuyerName"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/BuyerNamePrintLabel" rank="80"/>
					</groupField -->
					<!-- groupField name="BuyerCode.UserID.Telephone">
					<visibility clusterType="ariba.procure.core.ProcureLineItemCollection">
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
					<parameter name="LineToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplayPurchasingInfo"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="BuyerCode.UserID.Telephone"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/BuyerTelephonePrintLabel" rank="90"/>
					</groupField -->
					
					<!-- Starts SpringRelease_RSD 111(FDD4.1,4.2/TDD1.1,1.2)-->
					<groupField name="SupplierLocation.UniqueName">
					<visibility clusterType="ariba.procure.core.ProcureLineItemCollection">
					<andCondition>
					<condition implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
					<parameter name="LineToCheck"
					inputField="this"/>
					<parameter name="FieldToCheck"
					value="DisplaySupplierCode"/>
					</condition>
					<condition implementation="ariba.base.fields.condition.NonNullObject" testField="SupplierLocation.UniqueName"/>
					</andCondition>
					</visibility>
					<properties label = "@aml.CatSAPRequisitionExt/SupplierLocationPrintLabel" rank="20"/>
					</groupField> 
					
					<!-- Ends SpringRelease_RSD 111(FDD4.1,4.2/TDD1.1,1.2)-->
					
					<groupField name="DeliverToPhone">
						<visibility
							clusterType="ariba.procure.core.ProcureLineItemCollection">
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
									<parameter inputField="this"
										name="LineToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayDelieverTo"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="DeliverToPhone"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/DeliverToPhonePrintLabel"
							rank="100"/>
					</groupField>
					<groupField name="MailDrop">
						<visibility
							clusterType="ariba.procure.core.ProcureLineItemCollection">
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
									<parameter inputField="this"
										name="LineToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayDelieverTo"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="MailDrop"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/MailDropPrintLabel"
							rank="110"/>
					</groupField>
					<!-- added this field for Vertex -->
					<groupField name="Carrier">
					<visibility
							clusterType="ariba.procure.core.ProcureLineItemCollection">
							<andCondition>
								<condition
									implementation="config.java.print.sap.CatSAPPrintDisplayCondition">
									<parameter inputField="this"
										name="LineToCheck"/>
									<parameter name="FieldToCheck"
										value="DisplayExemptInfo"/>
								</condition>
								<condition
									implementation="ariba.base.fields.condition.NonNullObject"
									testField="Carrier"/>
							</andCondition>
						</visibility>
						<properties
							label="@aml.CatSAPRequisitionExt/TaxExemptReasonLabel"
							rank="50"/>
					</groupField>		
					<!-- Code ended for Vertex-->				
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>
		
		<inGroup name="RequisitionUnorderedDetails">
			<inGroupClass name="ariba.purchasing.core.ReqLineItem">
				<inGroupClassVariant name="SAP">
					<groupField name="Description.SupplierPartNumber">
						<properties alignmentInTable="Left" editable="false"
							label="@aml.cat.ui1/LabelSupplierPartNumShort"
							rank="32"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>
	</inModule>

	<inModule name="ariba.procure.core.Procure">
		<inClass name="ariba.procure.core.ProcureLineItem">
			<inClassVariant name="SAP">
				<inField name="PurchaseGroup">
					<properties hidden="true" validate="false"/>
				</inField>
				<inField name="AccountCategory">
					<validity>
						<!--andCondition>
						<condition implementation="ariba.base.core.condition.NonEmptyField"/>
						<condition implementation="ariba.common.core.condition.ObjectMatchingQuery"
						nullHandling="forceTrue">
						<parameter name="AQLCondition"
						value="AccountCategory.CompanyCode = :CompanyCode"/>
						<parameter name="CompanyCode"
						inputField="LineItemCollection.CompanyCode"
						typeCast="ariba.core.CompanyCode"
						nullHandling="forceTrue"/>
						</condition>
						</andCondition -->
						<orCondition>
							<andCondition>
								<condition
									implementation="ariba.base.core.condition.NonEmptyField"/>
								<condition
									implementation="ariba.common.core.condition.ObjectMatchingQuery"
									nullHandling="forceTrue">
									<parameter name="AQLCondition"
										value="AccountCategory.CompanyCode = :CompanyCode"/>
									<parameter
										inputField="LineItemCollection.CompanyCode"
										name="CompanyCode"
										nullHandling="forceTrue"/>
								</condition>
							</andCondition>
							<!-- Added by Majid -->
							<!--
									Changed by : Arasan Rajendren
									Changes    : Removed Validation on Non-Material LineItems.
									Changed on : 07/28/2011
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="LineType.Category">
								<parameter name="TargetValue" value="2"/>
							</condition>
							-->
							<condition implementation="ariba.procure.core.condition.IsChargeCategory">
								<parameter name="ProcureLineItem" inputField="this"/>
						    </condition>
						</orCondition>
					</validity>

					<!--
					S. Sato - 21st Mar 2011.
					Copied the default validity conditions to clustertype LineItemCollection. This
					is because there is a validity condition defined in 9r for clustertype LineItemCollection
					which doesn't take TaxLine AccountCategory into account
					UAT Defect #159
					-->
					<validity
						clusterType="ariba.approvable.core.LineItemCollection">
						<orCondition>
							<andCondition>
								<condition
									implementation="ariba.base.core.condition.NonEmptyField"/>
								<condition
									implementation="ariba.common.core.condition.ObjectMatchingQuery"
									nullHandling="forceTrue">
									<parameter name="AQLCondition"
										value="AccountCategory.CompanyCode = :CompanyCode"/>
									<parameter
										inputField="LineItemCollection.CompanyCode"
										name="CompanyCode"
										nullHandling="forceTrue"/>
								</condition>
							</andCondition>
							<!-- Added by Majid -->
							<!--
									Changed by : Arasan Rajendren
									Changes    : Removed Validation on Non-Material LineItems.
									Changed on : 07/28/2011
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="LineType.Category">
								<parameter name="TargetValue" value="2"/>
							</condition>
							-->
							<condition implementation="ariba.procure.core.condition.IsChargeCategory">
								<parameter name="ProcureLineItem" inputField="this"/>
						    </condition>
						</orCondition>
					</validity>
					<validity clusterType="ariba.purchasing.core.Requisition">
						<orCondition>
							<andCondition>
								<condition
									implementation="ariba.base.core.condition.NonEmptyField"/>
								<condition
									implementation="ariba.common.core.condition.ObjectMatchingQuery"
									nullHandling="forceTrue">
									<parameter name="AQLCondition"
										value="AccountCategory.CompanyCode = :CompCode"/>
									<parameter
										inputField="LineItemCollection.CompanyCode"
										name="CompCode"
										nullHandling="forceTrue"/>
									<parameter name="Message"
										value="@aml.CatSAPRequisitionExt/AccountCategoryNotValid"/>
								</condition>
							</andCondition>
							<!--
									Changed by : Arasan Rajendren
									Changes    : Removed Validation on Non-Material LineItems.
									Changed on : 07/28/2011
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="LineType.Category">
								<parameter name="TargetValue" value="2"/>
							</condition>
							-->
							<condition implementation="ariba.procure.core.condition.IsChargeCategory">
								<parameter name="ProcureLineItem" inputField="this"/>
						    </condition>
						</orCondition>
					</validity>
					<validity clusterType="ariba.invoicing.core.Invoice">
						<!--<condition implementation="ariba.base.fields.condition.AlwaysTrue"/>-->
						<!-- condition implementation="ariba.common.core.condition.ObjectMatchingQuery"
						nullHandling="forceTrue">
						<parameter name="AQLCondition"
						value="AccountCategory.CompanyCode = :CompanyCode"/>
						<parameter name="CompanyCode"
						inputField="LineItemCollection.CompanyCode"
						typeCast="ariba.core.CompanyCode"
						nullHandling="forceTrue"/>
						</condition -->
						<orCondition>
							<condition
								implementation="ariba.common.core.condition.ObjectMatchingQuery"
								nullHandling="forceTrue">
								<parameter name="AQLCondition"
									value="AccountCategory.CompanyCode = :CompanyCode"/>
								<parameter
									inputField="LineItemCollection.CompanyCode"
									name="CompanyCode" nullHandling="forceTrue"
									typeCast="ariba.core.CompanyCode"/>
							</condition>
							<!--
									Changed by : Arasan Rajendren
									Changes    : Removed Validation on Non-Material LineItems.
									Changed on : 07/28/2011
							<condition
								implementation="ariba.base.fields.condition.EqualTo"
								testField="LineType.Category">
								<parameter name="TargetValue" value="2"/>
							</condition>
							-->
							<condition implementation="ariba.procure.core.condition.IsChargeCategory">
								<parameter name="ProcureLineItem" inputField="this"/>
						    </condition>
						</orCondition>
					</validity>
					<validity
						clusterType="ariba.contract.core.ContractCoreApprovable">
						<condition
							implementation="ariba.common.core.condition.ObjectMatchingQuery"
							nullHandling="forceTrue">
							<parameter name="AQLCondition"
								value="AccountCategory.CompanyCode = :CompCode"/>
							<parameter
								inputField="LineItemCollection.CompanyCode"
								name="CompCode" nullHandling="forceTrue"/>
							<parameter name="Message"
								value="@aml.CatSAPRequisitionExt/AccountCategoryNotValid"/>
						</condition>
					</validity>
					<validity
						clusterType="ariba.pcard.core.PCardChargeResolution">
						<condition
							implementation="ariba.common.core.condition.ObjectMatchingQuery"
							nullHandling="forceTrue">
							<parameter name="AQLCondition"
								value="AccountCategory.CompanyCode = :CompCode"/>
							<parameter
								inputField="LineItemCollection.CompanyCode"
								name="CompCode" nullHandling="forceTrue"/>
							<parameter name="Message"
								value="@aml.CatSAPRequisitionExt/AccountCategoryNotValid"/>
						</condition>
					</validity>
					<validity
						clusterType="ariba.procure.core.SourcingRequestCoreApprovable">
						<condition
							implementation="ariba.base.fields.condition.AlwaysTrue"/>
					</validity>
					<validity
						clusterType="ariba.collaboration.core.CollaborationDocument">
						<condition
							implementation="ariba.base.fields.condition.AlwaysTrue"/>
					</validity>
					<properties ignoreQueryCache="true"
						nameTableClass="ariba.common.core.nametable.ConditionBasedNameTable"/>
				</inField>
				<inField name="ItemCategory">
					<properties hidden="true" validate="false"/>
				</inField>
			</inClassVariant>
		</inClass>

		<inClass name="ariba.procure.core.LineItemProductDescription">
			<inClassVariant name="SAP">
				<inField name="HasErrors">
					<validity
						clusterType="ariba.statement.core.StatementCoreApprovable">
						<condition
							implementation="ariba.base.fields.condition.AlwaysTrue"/>
					</validity>
				</inField>
				<inField name="Price">
					<validity>
						<orCondition>
							<condition
								implementation="ariba.approvable.core.condition.BoundedMoney">
								<parameter name="Min" value="0"/>
								<parameter
									inputField="LineItem.LineItemCollection.ReportingCurrency"
									name="CompatibleCurrency"/>
								<parameter inputField="LineItem.InProgress"
									name="InProgress"/>
							</condition>
							<condition
								implementation="ariba.statement.condition.IsStatementCoreApprovableLineItem">
								<parameter inputField="LineItem"
									name="ProcureLineItem"/>
							</condition>
							<condition
								implementation="ariba.collaboration.core.condition.CollaborationPending"
								testField="LineItem"/>
						</orCondition>
					</validity>
					<validity clusterType="ariba.purchasing.core.Requisition">
						<andCondition>
							<condition
								implementation="ariba.approvable.core.condition.BoundedMoney">
								<parameter name="Min" value="0.00"/>
							</condition>
							<condition
								implementation="config.java.condition.sap.CatSAPCurrencyMatchingSupplierLoc"
								testField="this"/>
						</andCondition>
					</validity>
					<properties
						label="@aml.Requisition/LineItemProductDescriptionPrice"
						metaDataIntegration="Reference" precision="5"/>
				</inField>
				<field name="ReasonCode">
					<type class="java.lang.String" length="55"/>
					<validity clusterType="ariba.purchasing.core.Requisition">
						<orCondition>
							<notCondition>
								<condition
									implementation="config.java.condition.CatStringFieldEqualTo"
									testField="this">
									<parameter name="TestField"
										value="Description.ReasonCode"/>
									<parameter name="TestValue"
										value="(no value)"/>
								</condition>
							</notCondition>
							<condition
								implementation="config.java.condition.CatNonZeroMoney"
								testField="Price">
								<parameter name="Message"
									value="@aml.cat.sap/MessageReasonCodeInvalid"/>
							</condition>
							<condition
								implementation="config.java.condition.CatBooleanFieldEqualTo"
								nullHandling="passThrough" testField="this">
								<parameter name="TestField" value="ISeRFQ"/>
								<parameter name="TestValue" value="true"/>
							</condition>
						</orCondition>
					</validity>
					<validity
						clusterType="ariba.contract.core.ContractCoreApprovable">
						<orCondition>
							<notCondition>
								<condition
									implementation="config.java.condition.CatIntFieldEqualTo"
									testField="this">
									<parameter name="TestField"
										value="MasterAgreementCoreApprovable.TermType"/>
									<parameter name="TestValue" value="2"/>
								</condition>
							</notCondition>
							<notCondition>
								<condition
									implementation="config.java.condition.CatStringFieldEqualTo"
									testField="this">
									<parameter name="TestField"
										value="Description.ReasonCode"/>
									<parameter name="TestValue"
										value="(no value)"/>
								</condition>
							</notCondition>
							<condition
								implementation="config.java.condition.CatNonZeroMoney"
								testField="Price">
								<parameter name="Message"
									value="@aml.cat.sap/MessageReasonCodeInvalid"/>
							</condition>
							<condition
								implementation="config.java.condition.CatStringFieldEqualTo"
								testField="this">
								<parameter name="TestField"
									value="LineType.UniqueName"/>
								<parameter name="TestValue"
									value="_MiscExpenseItem"/>
							</condition>
							<condition
								implementation="config.java.condition.CatStringFieldEqualTo"
								testField="this">
								<parameter name="TestField"
									value="LineType.UniqueName"/>
								<parameter name="TestValue"
									value="_MilestoneItem"/>
							</condition>
							<!--
							<notCondition>
							<condition implementation="config.java.condition.CatMasterAgreementWithRelease"
							testField="this">
							</condition>
							</notCondition>
							-->
						</orCondition>
					</validity>
					<properties
						fieldEditorClass="ariba.htmlui.fieldsui.fields.APEPickList"
						label="@aml.cat.sap/LabelReasonCode"
						metaDataIntegration="Reference" pickListStyle="Popup">
						<property name="validChoices">
							<vector>
								<entry
									value="@cat.aml.SAPpicklistvalues/NoValue"/>
								<entry
									value="@cat.aml.SAPpicklistvalues/ReasonCode1"/>
								<entry
									value="@cat.aml.SAPpicklistvalues/ReasonCode2"/>
							</vector>
						</property>
					</properties>
				</field>
				<field name="NotToExceedPrice">
					<type class="ariba.basic.core.Money"/>
					<validity clusterType="ariba.purchasing.core.Requisition">
						<orCondition>
							<condition
								implementation="ariba.common.core.condition.NonZeroMoney"
								testField="Price"/>
							<notCondition>
								<condition
									implementation="config.java.condition.CatStringFieldEqualTo"
									testField="this">
									<parameter name="TestField"
										value="Description.ReasonCode"/>
									<parameter name="TestValue"
										value="@cat.aml.SAPpicklistvalues/ReasonCode2"/>
								</condition>
							</notCondition>
							<condition
								implementation="config.java.condition.CatNonZeroMoney"
								testField="NotToExceedPrice">
								<parameter name="Message"
									value="@aml.cat.sap/MessageNotToExceedPriceInvalid"/>
							</condition>
							<condition
								implementation="config.java.condition.CatBooleanFieldEqualTo"
								nullHandling="passThrough" testField="this">
								<parameter name="TestField" value="ISeRFQ"/>
								<parameter name="TestValue" value="true"/>
							</condition>
						</orCondition>
					</validity>
					<properties helpTip="@aml.cat.sap/HelpNotToExceedPrice"
						label="@aml.cat.sap/LabelNotToExceedPrice"/>
				</field>
				<inField name="CommonCommodityCode">
					<validity>
						<andCondition>
							<orCondition>
								<condition
									implementation="ariba.base.core.condition.NonEmptyField"/>
								<condition
									implementation="ariba.contract.core.condition.IsContractSourcingRequest">
									<parameter inputField="LineItem" name="PLI"/>
								</condition>
								<condition
									implementation="ariba.contract.core.condition.IsNotCCContract">
									<parameter inputField="LineItem" name="PLI"/>
								</condition>
								<condition
									implementation="ariba.procure.core.condition.ProcureLineTypeEquals">
									<parameter inputField="LineItem" name="PLI"/>
									<parameter name="Type"
										value="_MilestoneItem"/>
								</condition>
							</orCondition>
							<condition
								implementation="config.java.condition.CatLowLevelCommodityCode"
								testField="LineItem"/>
							<condition
								implementation="config.java.condition.sap.ValidSAPCommodityExportMapEntry">
								<parameter inputField="LineItem" name="LineItem"/>
							</condition>
						</andCondition>
					</validity>
					<properties helpTip="@aml.cat.ui/HelpCategory"/>
				</inField>

				<inField name="UnitOfMeasure">
					<editability>
						<andCondition>
							<condition
								implementation="ariba.procure.core.condition.CatalogItemEditable">
								<parameter inputField="LineItem" name="LineItem"/>
								<parameter name="FieldName"
									value="UnitOfMeasure"/>
							</condition>
							<condition
								implementation="ariba.procure.core.condition.IsLineItemQuantifiable">
								<parameter inputField="LineItem"
									name="ProcureLineItem"/>
							</condition>
							<condition
								implementation="ariba.purchasing.core.condition.AllowChangeOrderStates">
								<parameter inputField="LineItem"
									name="ProcureLineItem"/>
							</condition>
							<!-- condition implementation="ariba.base.fields.condition.NotEqualTo" testField="LineItem.LineItemType">
							<parameter name="TargetValue" value="@cat.aml.picklistvalues1/TaxQualifier2"/>
							</condition>
							<condition implementation="ariba.base.fields.condition.EqualTo" testField="LineItem.LineItemCollection.CompanyCode.ServiceItemFunc">
							<parameter name="TargetValue" value="Y"/>
							</condition-->
						</andCondition>
					</editability>
					<properties chooserField="Name"
						chooserSearchGroup="CatUOMSearch" titleField="Name"/>
				</inField>


				<!-- Trigger to reset ReasonCode to "no value" when LIPD.Price > $0 -->
				<trigger event="FieldChange" field="Price"
					name="ResetReasonCodeOnPriceChange">
					<action
						implementation="config.java.action.sap.CatSAPSetReasonCodeOnPriceChange"/>
				</trigger>


				<!-- Trigger to set NotToExceedPrice to zero on applicable ReasonCode change -->
				<trigger event="FieldChange" field="ReasonCode"
					name="ResetNTEPriceOnReasonCodeChange">
					<action
						implementation="config.java.action.sap.CatSAPSetNotToExceedPriceToZero"/>
				</trigger>


				<!-- Trigger to update Not-To-Exceed Amount on NTE Price Change -->
				<trigger event="FieldChange" field="NotToExceedPrice"
					name="UpdateNTEAmountOnNTEPriceChange">
					<action
						implementation="config.java.action.sap.CatSAPSetNotToExceedAmount"/>
				</trigger>

				<trigger event="FieldChange" field="CommonCommodityCode"
					name="SetLineItemFieldsOnCommodityChange"
					respectUserData="true">
					<action
						implementation="config.java.action.sap.SetLineItemFieldsOnCommodityChange">
						<parameter name="SourceGroup"
							value="ObjectDefaultingFromCEM"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="LineItem"
					name="SetLineItemFieldsOnLineItemChange"
					respectUserData="true">
					<action
						implementation="config.java.action.sap.SetLineItemFieldsOnCommodityChange">
						<parameter name="SourceGroup"
							value="ObjectDefaultingFromCEM"/>
					</action>
				</trigger>
				<trigger event="FieldChange" field="UnitOfMeasure"
					name="SetIsHazmatOnUOMChange">
					<notCondition>
						<condition
							implementation="config.java.condition.sap.CatSAPAdditionalChargeLineItem"
							testField="LineItem"/>
					</notCondition>
					<action
						implementation="config.java.action.sap.CatSAPSetHazmatIndicator"/>
				</trigger>

			</inClassVariant>
		</inClass>
		<group name="ObjectDefaultingFromCEM">
			<groupClass name="ariba.common.core.CommodityExportMapEntry">
				<groupClassVariant name="SAP">
					<groupField name="BuyerCode">
						<properties rank="10"/>
					</groupField>
					<groupField name="LineItemType">
						<properties rank="20"/>
					</groupField>
					<groupField name="IsHazmat">
						<properties rank="30"/>
					</groupField>
					<groupField name="IsCapitalIT">
						<properties rank="40"/>
					</groupField>
				</groupClassVariant>
			</groupClass>
		</group>
		<inGroup name="PaymentTermsDetail">
			<inGroupClass name="ariba.payment.core.PaymentTerms">
				<inGroupClassVariant name="SAP">
					<groupField name="UniqueName">
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.AlwaysTrue"/>
							</notCondition>
						</visibility>
					</groupField>
					<groupField name="Name">
						<visibility>
							<notCondition>
								<condition
									implementation="ariba.base.fields.condition.AlwaysTrue"/>
							</notCondition>
						</visibility>
					</groupField>
					<groupField name="Description">
						<visibility>
							<condition
								implementation="ariba.base.core.condition.NonEmptyField"/>
						</visibility>
						<properties hideLabel="true"/>
					</groupField>
					<groupField name="PaymentTermsSteps">
						<properties hidden="true"/>
					</groupField>
				</inGroupClassVariant>
			</inGroupClass>
		</inGroup>

	</inModule>
</extension>


