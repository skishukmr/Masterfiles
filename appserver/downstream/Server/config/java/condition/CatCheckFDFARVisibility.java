/* Created by Deepak Sharma for CR159 - Oct 24 2008
 * Modified by Kanan CR 159 - Nov 5, 2008
 * ---------------------------------------------
 * 24.10.2008 (Deepak) - Created a visible condition for a newly created field.
 * 05.11.2008 (Kannan) - Added one more condition for visibility to show in the req header.

 */

package config.java.condition;import java.util.Iterator;import ariba.base.core.BaseVector;import ariba.base.fields.Condition;import ariba.base.fields.ConditionEvaluationException;import ariba.common.core.SplitAccounting;import ariba.common.core.SplitAccountingCollection;import ariba.purchasing.core.ReqLineItem;import ariba.purchasing.core.Requisition;import ariba.util.core.PropertyTable;import ariba.util.core.ResourceService;import ariba.util.log.Log;public class CatCheckFDFARVisibility extends Condition  {    private static final String ClassName = "CatCheckFDFARVisibility";    private static final String dept1 = ResourceService.getString("cat.vcsv1", "FARDFARDepartment1");    private static final String dept2 = ResourceService.getString("cat.vcsv1", "FARDFARDepartment2");    private static final String dept3 = ResourceService.getString("cat.vcsv1", "FARDFARDepartment3");    public boolean evaluate(Object object, PropertyTable params) throws ConditionEvaluationException  {        //String deptName1 = "j0561";        boolean checkdept = false;        String dept = null;        Log.customer.debug("CatCheckFDFARVisibility FARDFARDepartment1 value from cat.vcsv1 .."+ dept1);
        Log.customer.debug("CatCheckFDFARVisibility FARDFARDepartment2 value from cat.vcsv1 .."+ dept2);
        Log.customer.debug("CatCheckFDFARVisibility FARDFARDepartment3 value from cat.vcsv1 .."+ dept3);


        //if (object instanceof BaseObject)  {           // BaseObject bo = (BaseObject)object;            //Log.customer.debug("Inside Trigger CatSetFARDFARAttachment");            //ariba.approvable.core.Comment commentObj = (Comment)object;            //Object cmtObject = commentObj.getFieldValue("Parent");            if (object instanceof Requisition)  {                //Requisition req = (Requisition)object.getFieldValue("Parent");

                Requisition req = (Requisition)object;
                if (req != null) {                    Log.customer.debug("CatCheckFDFARVisibility inside if (req != null)");                    BaseVector rliList = (BaseVector)req.getFieldValue("LineItems");                    Log.customer.debug( "CatCheckFDFARVisibility rliList %s", rliList);                    if (!rliList.isEmpty())  {                      Log.customer.debug( "CatCheckFDFARVisibility rliList is Not Empty %s", rliList);                        for (Iterator itr = rliList.iterator(); itr.hasNext(); )  {                            Log.customer.debug( "CatCheckFDFARVisibility inside Iterator");                            ReqLineItem rli = (ReqLineItem)itr.next();                            Log.customer.debug("CatCheckFDFARVisibility ReqLineItem %s", rli);                            SplitAccountingCollection sac = rli.getAccountings();                            if (sac != null) {                                Log.customer.debug("CatCheckFDFARVisibility inside splitaccountingcollection %s",  sac);                                BaseVector splits = sac.getSplitAccountings();                                Log.customer.debug( "CatCheckFDFARVisibility inside sa vector %s",splits);                                if (!splits.isEmpty()) {                                    for (Iterator itr1 = splits.iterator(); itr1.hasNext(); )                                        {                                        SplitAccounting sa = (SplitAccounting)itr1.next();                                        Log.customer.debug("CatCheckFDFARVisibility inside sa vector %s", sa);                                        dept = (String)sa.getDottedFieldValue("Department");                                        Log.customer.debug(" CatCheckFDFARVisibility Department%s", dept);                                        if (dept != null){                                            if ((dept == dept1) || (dept.equalsIgnoreCase(dept1)) || (dept == dept2) || (dept.equalsIgnoreCase(dept2))                                                 || (dept == dept3)|| (dept.equalsIgnoreCase(dept3)))    {                                                             Log.customer.debug("CatCheckFDFARVisibility Setting checkdept to true%s", dept);                                                              checkdept = true;                                                  //req.setFieldValue("FDFARAttachmentIndicator",Boolean.TRUE);
                                                  return true;
                                                }                                             else {                                             Log.customer.debug("@@CatCheckFDFARVisibility Department is not FDFAR Dept returning false and Setting FDFARAttachmentIndicator False @@");
                                             req.setFieldValue("FDFARAttachmentIndicator",Boolean.FALSE);
                                             return false;										     }                                            }                                        }                                    }                                }                            }                        }                    }                /*
                Boolean extnComment = null;                BaseVector extnCommentVector = (BaseVector)req.getDottedFieldValue("Comments");                if (!extnCommentVector.isEmpty())  {                    for (Iterator itr = extnCommentVector.iterator(); itr.hasNext(); ) {                        Log.customer.debug(" CatCheckFDFARVisibility   Inside extnCommentVector ");                        ariba.approvable.core.Comment objComment = (Comment)itr.next();                        extnComment = (Boolean)objComment.getDottedFieldValue("ExternalComment");                        Log.customer.debug(" CatCheckFDFARVisibility  get ExternalComment %s", extnComment);                        if (checkdept && extnComment.booleanValue()) {                            Log.customer.debug("CatCheckFDFARVisibility checkdept extnComment are true and Returning true");                            return true;                            }                        else {							Log.customer.debug("CatCheckFDFARVisibility checkdept && extnComment.booleanValue is flase and Returning flase");							return false;						}                        }                    } */                }           // }        Log.customer.debug("CatCheckFDFARVisibility Object is not BaseObject return false");
        return false;        }
}