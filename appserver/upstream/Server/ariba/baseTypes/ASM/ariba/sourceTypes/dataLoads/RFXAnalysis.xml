<!DOCTYPE allDataLoads SYSTEM "../../../../ariba/analytics/core/dataLoads.dtd">
<allDataLoads>
    <!--
        11/28/2007 Gopal/Robert fixed the query so that we no longer use the NOT EXISTS subquery to select the
        latest version of the template.  Instead we select the template that is either in Active State or
        InActive State as the following equation holds: E1 = No of Active Templates + No of InActive Templates <= 1.
        We do not have to the worry about the case where E1 = 0, since valid RFX means there is a valid
        associted published rfxtemplate or doucment choice that beloged to an (Active or InActive) project template.

        NOTE: To select a rfxdocument template we are checking if the ActualTemplateObject is null.  This may not work
        for adhoc doucmnets.  As of today, there are no adhoc RFXDocuments whose parent is a SourceProject.
        The only adhoc rfxdocuments we will be supporting post eagle is adhoc surveys.
    -->
    <dataLoad name="EventItemLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.collaborate.core.Workspace AS SourcingProject SUBCLASS ariba.sourcing.rfx.SourcingProject INCLUDE INACTIVE USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  JOIN ariba.basic.core.Currency AS RFXCurrency INCLUDE INACTIVE USING ThisRFX.Currency,
                                  ariba.sourcing.rfx.RFXDocument AS RFXTemplate INCLUDE INACTIVE
                                  JOIN ariba.collaborate.core.Workspace AS SourcingProjectTemplate SUBCLASS ariba.sourcing.rfx.SourcingProject  INCLUDE INACTIVE USING RFXTemplate.ParentWorkspace,
                                  ariba.sourcing.content.RFXItem AS RFXItem"
               whereClause="ThisRFX.ActualTemplateObject is not NULL
                            AND ThisRFX.EventType IN ('1','2','3','4','6')
                            AND ThisRFX.IsAvailableForAnalysis = true
                            AND ThisRFX.Status = 'Complete'
                            AND ThisRFX.NextVersion IS NULL
                            AND ThisRFX.ActualTemplateObject.ProcessId = RFXTemplate.ProcessId
                            AND ThisRFX.PartitionNumber = RFXTemplate.PartitionNumber
                            AND RFXTemplate.TemplateObject is NULL
                            AND SourcingProjectTemplate.TemplateProjectAddin is NOT NULL
                            AND SourcingProjectTemplate.TemplateObject is NULL
                            AND SourcingProject.TemplateProjectAddin is NULL
                            AND SourcingProject.TemplateObject is NOT NULL
                            AND SourcingProjectTemplate.PartitionNumber = SourcingProject.PartitionNumber
                            AND (SourcingProjectTemplate.Status = 'Active' OR SourcingProjectTemplate.Status = 'InActive')
                            AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = RFXItem.ItemId
                            AND RFXItem.IsRealItem = true
                            AND ((RFXItem.ItemType = 1
                                  AND ThisRFX.Rules.RFXFormat = 2
                                  AND ThisRFX.Content.ItemId = RFXItem.ItemId)
                                 OR
                                 (RFXItem.ItemType > 3
                                  AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)))
                            AND RFXItem.ItemSubType != 20"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXTemplate.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXTemplate.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId"/>
        <analysisStage destinationName="ariba.analytics.dimension.Event"/>
        </loadStages>
        <fieldMappings>
            <field name="ItemId">
                <aqlMapping selectField="RFXItem.ItemId"/>
            </field>
            <field name="ItemTitle">
                <aqlMapping selectField="RFXItem.Title"/>
            </field>
            <field name="ItemDescription">
                <aqlMapping selectField="RFXItem.Description"/>
            </field>
            <field name="EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="EventTitle">
                <aqlMapping selectField="ThisRFX.Title"/>
            </field>
            <field name="EventDescription">
                <aqlMapping selectField="ThisRFX.Description"/>
            </field>
            <field name="VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="ItemType">
                <aqlMapping selectField="RFXItem.ItemType"/>
            </field>
            <field name="EventType">
                <aqlMapping selectField="ThisRFX.EventType"/>
            </field>
            <field name="EventStatus">
                <aqlMapping selectField="ThisRFX.EventState"/>
            </field>
            <field name="LotStatus">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN 14
                                         ELSE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus END"/>
            </field>
            <field name="EventTemplateId">
                <aqlMapping selectField="RFXTemplate.ProcessId"/>
            </field>
            <field name="EventTemplateName">
                <aqlMapping selectField="RFXTemplate.Title"/>
            </field>
            <field name="TestEvent">
                <aqlMapping selectField="ThisRFX.IsTest"/>
            </field>
            <field name="EventCurrency">
                <aqlMapping selectField="RFXCurrency.Name"/>
            </field>
            <field name="LeadBidInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.LeadBidInfoRelease"/>
            </field>
            <field name="CompetitorBidsInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.CompetitorBidsInfoRelease"/>
            </field>
            <field name="StartGateInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.StartGateInfoRelease"/>
            </field>
            <field name="ImprovementType">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.ImprovementType"/>
            </field>
            <field name="TieBidRule">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.TieBidRule.RankPosition"/>
            </field>
            <field name="AllowScoring">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.AllowScoring"/>
            </field>
            <field name="AllowMultiCurrency">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.AllowMultiCurrency"/>
            </field>
            <field name="OwnRankingInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.OwnRankingInfoRelease"/>
            </field>
            <field name="SupplierNamesInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.SupplierNamesInfoRelease"/>
            </field>
            <field name="CompetitorRankInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.CompetitorRankInfoRelease"/>
            </field>
            <field name="ParticipantSpecificValuesInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.ParticipantSpecificValuesInfoRelease"/>
            </field>
            <field name="OwnerSeeBids">
                <aqlMapping selectField="ThisRFX.Rules.OwnerSeeBids"/>
            </field>
            <field name="AllowSeeWeight">
                <aqlMapping selectField="ThisRFX.Rules.AllowSeeWeight"/>
            </field>
            <field name="ExchangeRateInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.ExchangeRateInfoRelease"/>
            </field>
            <field name="ProjectId">
                <aqlMapping selectField="SourcingProject.InternalId"/>
            </field>
        </fieldMappings>
    </dataLoad>

     <!--
        Refer to the comments in EventItemLoad
    -->
    <dataLoad name="EventLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX INCLUDE INACTIVE
                                    JOIN ariba.collaborate.core.Workspace AS SourcingProject SUBCLASS ariba.sourcing.rfx.SourcingProject INCLUDE INACTIVE USING ThisRFX.ParentWorkspace
                                    JOIN ariba.basic.core.Currency AS RFXCurrency INCLUDE INACTIVE USING ThisRFX.Currency,
                                   ariba.sourcing.rfx.RFXDocument AS RFXTemplate INCLUDE INACTIVE
                                    JOIN ariba.collaborate.core.Workspace AS SourcingProjectTemplate SUBCLASS ariba.sourcing.rfx.SourcingProject  INCLUDE INACTIVE USING RFXTemplate.ParentWorkspace"
               whereClause="ThisRFX.ActualTemplateObject is not NULL
                            AND ThisRFX.EventType IN ('1','2','3','4','6')
                            AND (ThisRFX.IsAvailableForAnalysis = true OR ThisRFX.IsAvailableForAnalysisSummaryReport = true)
                            AND ThisRFX.Status = 'Complete'
                            AND ThisRFX.PartitionNumber = RFXTemplate.PartitionNumber
                            AND ThisRFX.ActualTemplateObject.ProcessId = RFXTemplate.ProcessId
                            AND ThisRFX.NextVersion IS NULL
                            AND RFXTemplate.TemplateObject is NULL
                            AND SourcingProjectTemplate.TemplateProjectAddin is NOT NULL
                            AND SourcingProjectTemplate.TemplateObject is NULL
                            AND SourcingProject.TemplateProjectAddin is NULL
                            AND SourcingProject.TemplateObject is NOT NULL
                            AND SourcingProjectTemplate.PartitionNumber = SourcingProject.PartitionNumber
                            AND (SourcingProjectTemplate.Status = 'Active' OR SourcingProjectTemplate.Status = 'InActive')"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXTemplate.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXTemplate.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId"/>
            <analysisStage destinationName="ariba.analytics.dimension.Event"/>
        </loadStages>
        <fieldMappings>
            <field name="ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="ItemTitle">
                <aqlMapping selectField="ThisRFX.Title"/>
            </field>
            <field name="ItemDescription">
                <aqlMapping selectField="ThisRFX.Description"/>
            </field>
            <!-- These bogus coalesce statements and empty selects in the aqlmapping are needed so we can union this load with the
                 EventItemLoad, otherwise UnionAll will fail due to different number of select fields. DO NOT
                 REMOVE THIS (see defect 1-70758J)-->
            <field name="EventId">
                <aqlMapping selectField="COALESCE(ThisRFX.InternalId, ThisRFX.InternalId)"/>
            </field>
            <field name="EventTitle">
                <aqlMapping selectField="COALESCE(ThisRFX.Title, ThisRFX.Title)"/>
            </field>
            <field name="EventDescription">
                <aqlMapping selectField="COALESCE(ThisRFX.Description, ThisRFX.Description)"/>
            </field>
            <field name="VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="ItemType">
                <!-- Again bogus selection to get the unionall to work. DO NOT REMOVE. This field gets force-reset to
                "" through the analysis mapping-->
                <aqlMapping selectField="0"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="EventType">
                <aqlMapping selectField="ThisRFX.EventType"/>
            </field>
            <field name="EventStatus">
                <aqlMapping selectField="ThisRFX.EventState"/>
            </field>
            <field name="LotStatus">
                <aqlMapping selectField="COALESCE(ThisRFX.EventState, ThisRFX.EventState)"/>
            </field>
            <field name="EventTemplateId">
                <aqlMapping selectField="RFXTemplate.ProcessId"/>
            </field>
            <field name="EventTemplateName">
                <aqlMapping selectField="RFXTemplate.Title"/>
            </field>
            <field name="TestEvent">
                <aqlMapping selectField="ThisRFX.IsTest"/>
            </field>
            <field name="EventCurrency">
                <aqlMapping selectField="RFXCurrency.Name"/>
            </field>
            <field name="LeadBidInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.LeadBidInfoRelease"/>
            </field>
            <field name="CompetitorBidsInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.CompetitorBidsInfoRelease"/>
            </field>
            <field name="StartGateInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.StartGateInfoRelease"/>
            </field>
            <field name="ImprovementType">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.ImprovementType"/>
            </field>
            <field name="TieBidRule">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.TieBidRule.RankPosition"/>
            </field>
            <field name="AllowScoring">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.AllowScoring"/>
            </field>
            <field name="AllowMultiCurrency">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.AllowMultiCurrency"/>
            </field>
            <field name="OwnRankingInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.OwnRankingInfoRelease"/>
            </field>
            <field name="SupplierNamesInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.SupplierNamesInfoRelease"/>
            </field>
            <field name="CompetitorRankInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.CompetitorRankInfoRelease"/>
            </field>
            <field name="ParticipantSpecificValuesInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.ParticipantSpecificValuesInfoRelease"/>
            </field>
            <field name="OwnerSeeBids">
                <aqlMapping selectField="ThisRFX.Rules.OwnerSeeBids"/>
            </field>
            <field name="AllowSeeWeight">
                <aqlMapping selectField="ThisRFX.Rules.AllowSeeWeight"/>
            </field>
            <field name="ExchangeRateInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.ExchangeRateInfoRelease"/>
            </field>
            <field name="ProjectId">
                <aqlMapping selectField="SourcingProject.InternalId"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxEventSummaryLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  LEFT OUTER JOIN ariba.basic.core.Money as BaselineSpend USING SourcingProject.BaselineSpend
                                  LEFT OUTER JOIN ariba.basic.core.Currency as BaselineSpendCurrency INCLUDE INACTIVE USING BaselineSpend.Currency
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  LEFT OUTER JOIN ariba.basic.core.CommodityCode AS Comm Using ThisRFX.Commodity"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = ThisRFX.Content.ItemId
                             AND ThisRFX.EventType IN ('1','2','3','4','6')
                            AND (ThisRFX.IsAvailableForAnalysis = true OR ThisRFX.IsAvailableForAnalysisSummaryReport = true)
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId"/>
            <analysisStage destinationName="ariba.analytics.fact.EventSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Commodity.CommodityId">
                <aqlMapping selectField="Comm.UniqueName"/>
            </field>
            <field name="EventStartDate">
                <aqlMapping selectField="CASE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate
                                         WHEN NULL THEN RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime
                                         ELSE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate END"/>
            </field>
            <field name="EventEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.CompletedDate"/>
            </field>
            <field name="EventCreateDate">
                <aqlMapping selectField="ThisRFX.CreateDate"/>
            </field>
            <field name="PreviewBeginDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate"/>
            </field>
            <field name="BiddingStartDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime"/>
            </field>
            <field name="BiddingEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingEndTime"/>
            </field>
            <field name="EstAwardDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.EstimatedAwardDate"/>
            </field>
            <field name="ContractEffectiveDate">
                <aqlMapping selectField="SourcingProject.ContractEffectiveDate"/>
            </field>
            <field name="ContractMonths">
                <aqlMapping selectField="CASE SourcingProject.ContractMonths WHEN NULL THEN 0 ELSE SourcingProject.ContractMonths END"/>
            </field>
            <field name="TargetSavingsPct">
                <aqlMapping selectField="CASE SourcingProject.TargetSavingPct WHEN NULL THEN 0 ELSE SourcingProject.TargetSavingPct END"/>
            </field>
            <field name="BaselineSpend.Amount">
                <aqlMapping selectField="CASE SourcingProject.BaselineSpend.Amount WHEN NULL THEN 0.0 ELSE SourcingProject.BaselineSpend.Amount END"/>
            </field>
            <field name="BaselineSpend.Currency">
                <aqlMapping selectField="BaselineSpendCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="BaselineSpend.Date">
                <aqlMapping selectField="SourcingProject.BaselineSpend.ConversionDate"/>
            </field>
            <field name="BidsSubmitted">
                <aqlMapping selectField="RFXRuntimeData.RFXReportData.RFXSummaryData.NumberOfSubmittedBids"/>
            </field>
            <field name="BidsRemoved">
                <aqlMapping selectField="RFXRuntimeData.RFXReportData.RFXSummaryData.NumberOfRemovedBids"/>
            </field>
            <field name="SurrogateBids">
                <aqlMapping selectField="RFXRuntimeData.RFXReportData.RFXSummaryData.NumberOfSurrogateBids"/>
            </field>
            <field name="NumQuestions">
                <aqlMapping selectField="RFXRuntimeData.RFXReportData.RFXSummaryData.NumberOfQuestions"/>
            </field>
            <field name="InvitedSuppliers">
                <aqlMapping selectField="RFXRuntimeData.RFXReportData.RFXSummaryData.NumberOfInvitedSuppliers"/>
            </field>
            <field name="AcceptedSuppliers">
                <aqlMapping selectField="RFXRuntimeData.RFXReportData.RFXSummaryData.NumberOfAcceptedSuppliers"/>
            </field>
            <field name="DeclinedSuppliers">
                <aqlMapping selectField="RFXRuntimeData.RFXReportData.RFXSummaryData.NumberOfDeclinedSuppliers"/>
            </field>
            <field name="ParticipSuppliers">
                <aqlMapping selectField="RFXRuntimeData.RFXReportData.RFXSummaryData.NumberOfParticipatedSuppliers"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxEventSummaryOwnerLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.user.core.User AS Owner INCLUDE INACTIVE USING ThisRFX.Owner
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND ThisRFX.EventType IN ('1','2','3','4','6')
                             AND ThisRFX.IsAvailableForAnalysis = true
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId"/>
            <analysisStage destinationName="ariba.analytics.fact.EventSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Owner.UserId">
                <aqlMapping selectField="Owner.UniqueName"/>
            </field>
            <field name="Owner.PasswordAdapter">
                <aqlMapping selectField="Owner.PasswordAdapter"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxEventDepartmentLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  LEFT OUTER JOIN ariba.collaborate.basic.Department AS Department USING SourcingProject.Client"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                            AND ThisRFX.EventType IN ('1','2','3','4','6')
                            AND (ThisRFX.IsAvailableForAnalysis = true OR ThisRFX.IsAvailableForAnalysisSummaryReport = true)
                            AND ThisRFX.Status = 'Complete'
                            AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId"/>
            <analysisStage destinationName="ariba.analytics.fact.EventSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Department.OrganizationId">
                <aqlMapping selectField="Department.DepartmentID"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxEventRegionLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  LEFT OUTER JOIN ariba.collaborate.basic.Region AS Region USING SourcingProject.Region"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                            AND ThisRFX.EventType IN ('1','2','3','4','6')
                            AND (ThisRFX.IsAvailableForAnalysis = true OR ThisRFX.IsAvailableForAnalysisSummaryReport = true)
                            AND ThisRFX.Status = 'Complete'
                            AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId"/>
            <analysisStage destinationName="ariba.analytics.fact.EventSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Region.RegionId">
                <aqlMapping selectField="Region.Region"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxEventSupplierLoad">
         <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                            AND ThisRFX.EventType IN ('1','2','3','4','6')
                            AND (ThisRFX.IsAvailableForAnalysis = true OR ThisRFX.IsAvailableForAnalysisSummaryReport = true)
                            AND ThisRFX.Status = 'Complete'
                            AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                            AND RFXSupplierData.HasBid = true
                            AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                orderByClause="ThisRFX.InternalId"/>
            <analysisStage destinationName="ariba.analytics.fact.EventSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="BiddedSuppliers.SupplierId">
                <aqlMapping selectField="RFXSupplierData.InvitedUser.Organization.SystemID"/>
            </field>
            <field name="BiddedSuppliers.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxEventParticipationLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  LEFT OUTER JOIN ariba.basic.core.Money as BaselineSpend USING SourcingProject.BaselineSpend
                                  LEFT OUTER JOIN ariba.basic.core.Currency as BaselineSpendCurrency INCLUDE INACTIVE USING BaselineSpend.Currency
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  INNER JOIN ariba.user.core.User AS RFXInvitee INCLUDE INACTIVE USING ThisRFX.Invitees
                                  LEFT OUTER JOIN ariba.basic.core.CommodityCode AS Comm USING ThisRFX.Commodity,
                                  ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = ThisRFX.Content.ItemId
                             AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                             AND RFXSupplierData.InvitedUser = RFXInvitee
                             AND ThisRFX.EventType IN ('1','2','3','4','6')
                             AND (ThisRFX.IsAvailableForAnalysis = true OR ThisRFX.IsAvailableForAnalysisSummaryReport = true)
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId,RFXInvitee.Organization.SystemID,RFXInvitee.UniqueName"/>
            <analysisStage destinationName="ariba.analytics.fact.EventParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="RFXInvitee.Organization.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="RFXInvitee.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="RFXInvitee.PasswordAdapter"/>
            </field>
            <field name="Commodity.CommodityId">
                <aqlMapping selectField="Comm.UniqueName"/>
            </field>
            <field name="EventStartDate">
                <aqlMapping selectField="CASE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate
                                         WHEN NULL THEN RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime
                                         ELSE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate END"/>
            </field>
            <field name="EventEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.CompletedDate"/>
            </field>
            <field name="EventCreateDate">
                <aqlMapping selectField="ThisRFX.CreateDate"/>
            </field>
            <field name="PreviewBeginDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate"/>
            </field>
            <field name="BiddingStartDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime"/>
            </field>
            <field name="BiddingEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingEndTime"/>
            </field>
            <field name="EstAwardDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.EstimatedAwardDate"/>
            </field>
            <field name="ContractEffectiveDate">
                <aqlMapping selectField="SourcingProject.ContractEffectiveDate"/>
            </field>
            <field name="AcceptedFlag">
                <aqlMapping selectField="CASE RFXSupplierData.AcceptedSupplierAgreement WHEN 1 THEN TRUE ELSE FALSE END"/>
            </field>
            <field name="DeclinedFlag">
                <aqlMapping selectField="CASE RFXSupplierData.AcceptedSupplierAgreement WHEN 2 THEN TRUE ELSE FALSE END"/>
            </field>
            <field name="ParticipatedFlag">
                <aqlMapping selectField="RFXSupplierData.HasBid"/>
            </field>
            <field name="AwardedFlag">
                <aqlMapping selectField="RFXSupplierData.Awarded"/>
            </field>
            <field name="ContractMonths">
                <aqlMapping selectField="CASE SourcingProject.ContractMonths WHEN NULL THEN 0 ELSE SourcingProject.ContractMonths END"/>
            </field>
            <field name="TargetSavingsPct">
                <aqlMapping selectField="CASE SourcingProject.TargetSavingPct WHEN NULL THEN 0 ELSE SourcingProject.TargetSavingPct END"/>
            </field>
            <field name="BaselineSpend.Amount">
                <aqlMapping selectField="CASE SourcingProject.BaselineSpend.Amount WHEN NULL THEN 0.0 ELSE SourcingProject.BaselineSpend.Amount END"/>
            </field>
            <field name="BaselineSpend.Currency">
                <aqlMapping selectField="BaselineSpendCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="BaselineSpend.Date">
                <aqlMapping selectField="SourcingProject.BaselineSpend.ConversionDate"/>
            </field>
            <field name="NumEventAwarded">
                <aqlMapping selectField="CASE RFXSupplierData.Awarded WHEN TRUE THEN 1 ELSE 0 END"/>
            </field>
            <field name="NumEventAccepted">
                <aqlMapping selectField="CASE RFXSupplierData.AcceptedSupplierAgreement WHEN 1 THEN 1 ELSE 0 END"/>
            </field>
            <field name="NumEventDeclined">
                <aqlMapping selectField="CASE RFXSupplierData.AcceptedSupplierAgreement WHEN 2 THEN 1 ELSE 0 END"/>
            </field>
            <field name="NumEventBidOn">
                <aqlMapping selectField="CASE RFXSupplierData.HasBid WHEN TRUE THEN 1 ELSE 0 END"/>
            </field>
            <field name="BidsSubmitted">
                <aqlMapping selectField="RFXSupplierData.NumberOfSubmittedBids"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxEventParticipationOwnerLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.user.core.User AS Owner INCLUDE INACTIVE USING ThisRFX.Owner
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  INNER JOIN ariba.user.core.User AS RFXInvitee INCLUDE INACTIVE USING ThisRFX.Invitees"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND ThisRFX.EventType IN ('1','2','3','4','6')
                             AND ThisRFX.IsAvailableForAnalysis = true
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId,RFXInvitee.Organization.SystemID,RFXInvitee.UniqueName"/>
            <analysisStage destinationName="ariba.analytics.fact.EventParticipation"/>
        </loadStages>
        <fieldMappings>
           <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="RFXInvitee.Organization.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="RFXInvitee.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="RFXInvitee.PasswordAdapter"/>
            </field>
            <field name="Owner.UserId">
                <aqlMapping selectField="Owner.UniqueName"/>
            </field>
            <field name="Owner.PasswordAdapter">
                <aqlMapping selectField="Owner.PasswordAdapter"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="EventParticipationDepartmentLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  INNER JOIN ariba.user.core.User AS RFXInvitee INCLUDE INACTIVE USING ThisRFX.Invitees
                                  LEFT OUTER JOIN ariba.collaborate.basic.Department AS Department USING SourcingProject.Client"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND ThisRFX.EventType IN ('1','2','3','4','6')
                             AND ThisRFX.IsAvailableForAnalysis = true
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId,RFXInvitee.Organization.SystemID,RFXInvitee.UniqueName"/>
            <analysisStage destinationName="ariba.analytics.fact.EventParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="RFXInvitee.Organization.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="RFXInvitee.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="RFXInvitee.PasswordAdapter"/>
            </field>
            <field name="Department.OrganizationId">
                <aqlMapping selectField="Department.DepartmentID"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="EventParticipationRegionLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  INNER JOIN ariba.user.core.User AS RFXInvitee INCLUDE INACTIVE USING ThisRFX.Invitees
                                  LEFT OUTER JOIN ariba.collaborate.basic.Region AS Region USING SourcingProject.Region"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND ThisRFX.EventType IN ('1','2','3','4','6')
                             AND ThisRFX.IsAvailableForAnalysis = true
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId,RFXInvitee.Organization.SystemID,RFXInvitee.UniqueName"/>
            <analysisStage destinationName="ariba.analytics.fact.EventParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="RFXInvitee.Organization.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="RFXInvitee.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="RFXInvitee.PasswordAdapter"/>
            </field>
            <field name="Region.RegionId">
                <aqlMapping selectField="Region.Region"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxItemSummaryLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  LEFT OUTER JOIN ariba.basic.core.CommodityCode AS Comm USING ThisRFX.Commodity
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  LEFT OUTER JOIN ariba.basic.core.Money as BaselineSpend USING SourcingProject.BaselineSpend
                                  LEFT OUTER JOIN ariba.basic.core.Currency as BaselineSpendCurrency INCLUDE INACTIVE USING BaselineSpend.Currency
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.content.RFXItem AS RFXItem,
                                  ariba.sourcing.rfx.RFXItemSummaryData AS RFXItemSummaryData"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND ThisRFX.EventType IN ('2','3','4','6')
                             AND RFXItemSummaryData.ReportData = RFXRuntimeData.RFXReportData
                             AND RFXItemSummaryData.ItemId = RFXItem.ItemId
                             AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = RFXItem.ItemId
                             AND ThisRFX.Content.ItemId = RFXItem.RootItemId
                             AND RFXItem.IsRealItem = true
                             AND RFXItem.ItemType > 3
                             AND RFXItem.ItemSubType != 20
                             AND ThisRFX.IsAvailableForAnalysis = true
                             AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="RFXItem.ItemId"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="RFXItem.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="EventStartDate">
                <aqlMapping selectField="CASE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate
                                         WHEN NULL THEN RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime
                                         ELSE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate END"/>
            </field>
            <field name="ItemCommodity.CommodityId">
                <aqlMapping selectField="Comm.UniqueName"/>
            </field>
            <field name="EventEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.CompletedDate"/>
            </field>
            <field name="EventCreateDate">
                <aqlMapping selectField="ThisRFX.CreateDate"/>
            </field>
            <field name="PreviewBeginDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate"/>
            </field>
            <field name="BiddingStartDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime"/>
            </field>
            <field name="BiddingEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingEndTime"/>
            </field>
            <field name="EstAwardDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.EstimatedAwardDate"/>
            </field>
            <field name="ContractEffectiveDate">
                <aqlMapping selectField="SourcingProject.ContractEffectiveDate"/>
            </field>
            <field name="SubmitBidsForItem">
                <aqlMapping selectField="RFXItemSummaryData.NumberOfSubmittedBids"/>
            </field>
            <field name="SurrogtBidsForItem">
                <aqlMapping selectField="RFXItemSummaryData.NumberOfSurrogateBids"/>
            </field>
            <field name="RemvdBidsForItem">
                <aqlMapping selectField="RFXItemSummaryData.NumberOfRemovedBids"/>
            </field>
            <field name="NumItemAwarded">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 13 THEN 1 ELSE 0 END"/>
            </field>
            <field name="NumItemPending">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 6 THEN 1 ELSE 0 END"/>
            </field>
            <field name="NumItemClosed">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN 1 ELSE 0 END"/>
            </field>
            <field name="TargetSavings">
                <aqlMapping selectField="SourcingProject.TargetSavingPct"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.Arithmetic">
                        <parameter name="Operator" value="percent"/>
                        <parameter name="Fields">
                            <vector>
                                <entry value="TargetSavings"/>
                            </vector>
                        </parameter>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="ContractMonths">
                <aqlMapping selectField="CASE SourcingProject.ContractMonths WHEN NULL THEN 0 ELSE SourcingProject.ContractMonths END"/>
            </field>
            <field name="BaselineSpend.Amount">
                <aqlMapping selectField="CASE SourcingProject.BaselineSpend.Amount WHEN NULL THEN 0.0 ELSE SourcingProject.BaselineSpend.Amount END"/>
            </field>
            <field name="BaselineSpend.Currency">
                <aqlMapping selectField="BaselineSpendCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="BaselineSpend.Date">
                <aqlMapping selectField="SourcingProject.BaselineSpend.ConversionDate"/>
            </field>
        </fieldMappings>
    </dataLoad>
    
    <dataLoad name="RfxItemSummaryOwnerLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.user.core.User AS Owner INCLUDE INACTIVE USING ThisRFX.Owner
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace,
                                  ariba.sourcing.content.RFXItem AS RFXItem"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND ThisRFX.EventType IN ('2','3','4','6')
                             AND ThisRFX.Content.ItemId = RFXItem.RootItemId
                             AND RFXItem.IsRealItem = true
                             AND RFXItem.ItemType > 3
                             AND RFXItem.ItemSubType != 20
                             AND ThisRFX.IsAvailableForAnalysis = true
                             AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="RFXItem.ItemId"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="RFXItem.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Owner.UserId">
                <aqlMapping selectField="Owner.UniqueName"/>
            </field>
            <field name="Owner.PasswordAdapter">
                <aqlMapping selectField="Owner.PasswordAdapter"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <!--
        RfxItemSummaryLoadLarge - This pull is the same as RfxItemSummaryLoad except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all item information, and store them to fact.RfxItemSummary.
        Since this load will only pull the root item,  the following information won't be captured in the pull
             <field name="SubmitBidsForItem">
         <field name="SurrogtBidsForItem">
         <field name="RemvdBidsForItem">
    -->
    <dataLoad name="RfxItemSummaryLoadLarge">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  LEFT OUTER JOIN ariba.basic.core.CommodityCode AS Comm USING ThisRFX.Commodity
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  LEFT OUTER JOIN ariba.basic.core.Money as BaselineSpend USING SourcingProject.BaselineSpend
                                  LEFT OUTER JOIN ariba.basic.core.Currency as BaselineSpendCurrency INCLUDE INACTIVE USING BaselineSpend.Currency
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND ThisRFX.EventType IN ('2','3','4','6')
                             AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemIndex = 0
                             AND ThisRFX.IsAvailableForAnalysis = true
                             AND ThisRFX.Rules.RFXFormat = 2
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.Content.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="EventStartDate">
                <aqlMapping selectField="CASE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate
                                         WHEN NULL THEN RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime
                                         ELSE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate END"/>
            </field>
            <field name="ItemCommodity.CommodityId">
                <aqlMapping selectField="Comm.UniqueName"/>
            </field>
            <field name="EventEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.CompletedDate"/>
            </field>
            <field name="EventCreateDate">
                <aqlMapping selectField="ThisRFX.CreateDate"/>
            </field>
            <field name="PreviewBeginDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate"/>
            </field>
            <field name="BiddingStartDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime"/>
            </field>
            <field name="BiddingEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingEndTime"/>
            </field>
            <field name="EstAwardDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.EstimatedAwardDate"/>
            </field>
            <field name="ContractEffectiveDate">
                <aqlMapping selectField="SourcingProject.ContractEffectiveDate"/>
            </field>
            <field name="NumItemAwarded">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN 1 ELSE 0 END"/>
            </field>
            <field name="NumItemPending">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 6 THEN 1 ELSE 0 END"/>
            </field>
            <field name="NumItemClosed">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN 1 ELSE 0 END"/>
            </field>
            <field name="TargetSavings">
                <aqlMapping selectField="SourcingProject.TargetSavingPct"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.Arithmetic">
                        <parameter name="Operator" value="percent"/>
                        <parameter name="Fields">
                            <vector>
                                <entry value="TargetSavings"/>
                            </vector>
                        </parameter>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="ContractMonths">
                <aqlMapping selectField="CASE SourcingProject.ContractMonths WHEN NULL THEN 0 ELSE SourcingProject.ContractMonths END"/>
            </field>
            <field name="BaselineSpend.Amount">
                <aqlMapping selectField="CASE SourcingProject.BaselineSpend.Amount WHEN NULL THEN 0.0 ELSE SourcingProject.BaselineSpend.Amount END"/>
            </field>
            <field name="BaselineSpend.Currency">
                <aqlMapping selectField="BaselineSpendCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="BaselineSpend.Date">
                <aqlMapping selectField="SourcingProject.BaselineSpend.ConversionDate"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxItemSummaryOwnerLoadLarge">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.user.core.User AS Owner INCLUDE INACTIVE USING ThisRFX.Owner
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND ThisRFX.EventType IN ('2','3','4','6')
                             AND ThisRFX.IsAvailableForAnalysis = true
                             AND ThisRFX.Rules.RFXFormat = 2
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                   SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) "/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.Content.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Owner.UserId">
                <aqlMapping selectField="Owner.UniqueName"/>
            </field>
            <field name="Owner.PasswordAdapter">
                <aqlMapping selectField="Owner.PasswordAdapter"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <!-- a bit of a hack to get invited suppliers info updated-->
    <dataLoad name="RfxItemSummarySupplierLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.rfx.ItemSupplierData AS ItemLevelSupplierData
                                  JOIN ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData USING ItemLevelSupplierData.SupplierData"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                            AND ThisRFX.EventType IN ('2','3','4','6')
                            AND ThisRFX.IsAvailableForAnalysis = true
                            AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                            AND ThisRFX.Status = 'Complete'
                            AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                            AND ItemLevelSupplierData.HasBid = true
                            AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                orderByClause="ItemLevelSupplierData.ItemId"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="ItemLevelSupplierData.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="InvitedSuppliers.SupplierId">
                <aqlMapping selectField="RFXSupplierData.InvitedUser.Organization.SystemID"/>
            </field>
            <field name="InvitedSuppliers.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
        </fieldMappings>
    </dataLoad>

    <!--
        RfxItemSummarySupplierLoadLarge - This pull is the same as RfxItemSummarySupplierLoad except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all item supplier inforation, and store them to fact.RfxItemSummary.
    -->
    <dataLoad name="RfxItemSummarySupplierLoadLarge">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData
                                  JOIN ariba.user.core.User AS InvitedUser INCLUDE INACTIVE USING RFXSupplierData.InvitedUser
                                  JOIN ariba.user.core.Organization AS InvitedOrg INCLUDE INACTIVE USING InvitedUser.Organization"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                            AND ThisRFX.EventType IN ('2','3','4','6')
                            AND ThisRFX.IsAvailableForAnalysis = true
                            AND ThisRFX.Rules.RFXFormat = 2
                            AND ThisRFX.Status = 'Complete'
                            AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                            AND RFXSupplierData.HasBid = true
                            AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                orderByClause="ThisRFX.Content.ItemId"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.Content.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="InvitedSuppliers.SupplierId">
                <aqlMapping selectField="RFXSupplierData.InvitedUser.Organization.SystemID"/>
            </field>
            <field name="InvitedSuppliers.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
        </fieldMappings>
    </dataLoad>



    <dataLoad name="RfxItemSummaryDepartmentLoad">
        <loadStages>
            <aqlStage fromClause="ariba.analytics.fact.EventSummary AS EventSummary
                                  JOIN ariba.analytics.fact.DepartmentEventSummary AS Dep1 USING EventSummary.Department
                                  JOIN ariba.analytics.dimension.Organization AS Department USING Dep1.Department,
                                  ariba.analytics.dimension.Event AS EventInfo"
                whereClause="EventInfo.EventId = EventSummary.Event.EventId
                             AND EventInfo.ItemId != EventSummary.Event.EventId
                             AND EventInfo.PartitionNumber = EventSummary.PartitionNumber"
                incrementalClause="EventSummary.TimeUpdated &gt;= :StarIncrementalStartDate"
                orderByClause="EventInfo.ItemId"
                distinctFlag="true"
                queryStarSchemaFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="EventInfo.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="EventInfo.EventId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="EventInfo.VersionNumber"/>
            </field>
            <field name="Department.OrganizationId">
                <aqlMapping selectField="Department.OrganizationId"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxItemSummaryRegionLoad">
        <loadStages>
            <aqlStage fromClause="ariba.analytics.fact.EventSummary AS EventSummary
                                  JOIN ariba.analytics.fact.RegionEventSummary AS Region1 USING EventSummary.Region
                                  JOIN ariba.analytics.dimension.Region AS Region USING Region1.Region,
                                  ariba.analytics.dimension.Event AS EventInfo"
                whereClause="EventInfo.EventId = EventSummary.Event.EventId
                             AND EventInfo.ItemId != EventSummary.Event.EventId
                             AND EventInfo.PartitionNumber = EventSummary.PartitionNumber"
                incrementalClause="EventSummary.TimeUpdated &gt;= :StarIncrementalStartDate"
                orderByClause="EventInfo.ItemId"
                distinctFlag="true"
                queryStarSchemaFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="EventInfo.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="EventInfo.EventId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="EventInfo.VersionNumber"/>
            </field>
            <field name="Region.RegionId">
                <aqlMapping selectField="Region.RegionId"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxItemSummaryCommodityLoad">
        <!--
            1-AWMZIQ - A line item only has one commodity, but the fact supports a vector
            of commodity.  Originally, the pull was querying all versions of line items to
            get the commodity on a line item, so we encountered a bug where if the commodity
            is changed from X to Y, then the pull would pick up both.  The fix for 1-AWMZIQ
            added the NextVersion is null check so that only the commodity on the latest
            version is pulled.  This fix isn't perfect, since if somebody edits an event
            and changes the commodity and doesn't update the event, the commodity for the
            published event will be different than the one pulled into analysis.  Since the
            probability of this is an order of magnitude lower than simply changing the
            commodity, it was an acceptable work around until we can provide a simple join
            to determine which version of an item is associated with which version of the
            Document.  Right now this doesn't exist since the item only knows about it's
            parent incarnation/extinction version and not that of it's document.
         -->
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.content.RFXItem AS RFXItem
                                  JOIN ariba.basic.core.CommodityCode AS Comm USING RFXItem.Commodity,
                                  ariba.sourcing.rfx.RFXItemSummaryData AS RFXItemSummaryData"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                                  AND RFXItemSummaryData.ReportData = RFXRuntimeData.RFXReportData
                                  AND RFXItemSummaryData.ItemId = RFXItem.ItemId
                                  AND ThisRFX.EventType IN ('2','3','4','6')
                                  AND ThisRFX.Content.ItemId = RFXItem.RootItemId
                                  AND RFXItem.NextVersion IS NULL
                                  AND RFXItem.ItemType > 3
                                  AND RFXItem.ItemSubType != 20
                                  AND ThisRFX.IsAvailableForAnalysis = true
                                  AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                                  AND ThisRFX.Status = 'Complete'
                                  AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                orderByClause="RFXItem.ItemId"
                distinctFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="RFXItem.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="ItemCommodity.CommodityId">
                <aqlMapping selectField="Comm.UniqueName"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <!--
        RfxItemSummaryCommodityLoadLarge - This pull is the same as RfxItemSummaryCommodityLoad except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all item commodity inforation, and store them to fact.RfxItemSummary.
    -->

    <dataLoad name="RfxItemSummaryCommodityLoadLarge">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  LEFT OUTER JOIN ariba.basic.core.CommodityCode AS Comm USING ThisRFX.Commodity
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                                  AND ThisRFX.EventType IN ('2','3','4','6')
                                  AND ThisRFX.IsAvailableForAnalysis = true
                                  AND ThisRFX.Rules.RFXFormat = 2
                                  AND ThisRFX.Status = 'Complete'
                                  AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                distinctFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.Content.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="ItemCommodity.CommodityId">
                <aqlMapping selectField="Comm.UniqueName"/>
            </field>
        </fieldMappings>
    </dataLoad>


    <dataLoad name="RfxItemDataLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.content.RFXItemValue AS RFXItemValue
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemExtMoney USING RFXItemValue.EXTENDEDPRICE
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemExtCurrency USING RFXItemExtMoney.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.MoneyDifference AS RFXItemSavingsMoney USING RFXItemValue.SAVINGS
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney1 USING RFXItemSavingsMoney.Amount1
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney2 USING RFXItemSavingsMoney.Amount2
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemSavingsCurrency USING RFXItemSavingsMoney1.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.UOMQuantity AS RFXItemQuantity USING RFXItemValue.QUANTITY
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXTotalMoney USING RFXItemValue.TOTALCOST
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXTotalCurrency USING RFXTotalMoney.Currency,
                                  ariba.sourcing.content.Alternative AS RFXItemSlice SUBCLASS NONE,
                                  ariba.sourcing.rfx.RFXItemSummaryData AS RFXItemSummaryData"
                       whereClause="SourcingProject.WorkspaceType != 'Template'
                                    AND RFXItemSummaryData.ReportData = RFXRuntimeData.RFXReportData
                                    AND RFXItemSummaryData.ItemId = RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId
                                    AND ThisRFX.EventType IN ('2','3','4','6')
                                    AND RFXItemValue.ItemId = RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId
                                    AND RFXItemSlice.ContentDocumentReference.DocumentId = ThisRFX.DocumentId
                                    AND RFXItemSlice.ContentDocumentReference.DocumentVersion = ThisRFX.DocumentVersion
                                    AND RFXItemSlice.ContentDocumentReference.DocumentMinorVersion = ThisRFX.DocumentMinorVersion
                                    AND RFXItemValue.SliceId = RFXItemSlice.SliceId
                                    AND RFXItemValue.SliceIncarnationVersion &lt;= RFXItemSlice.VersionId
                                    AND RFXItemValue.SliceExtinctionVersion &gt;= RFXItemSlice.VersionId
                                    AND RFXItemValue.Alternative is NULL
                                    AND RFXItemSlice.SliceType IN (3,4,5,7,8)
                                    AND ((RFXItemSlice.SliceType = 3 AND RFXItemSlice.AlternativeStatus = 3)
                                          OR (RFXItemSlice.SliceType != 3 AND RFXItemSlice.AlternativeStatus = 0)
                                          OR (RFXItemSlice.SliceType = 8 AND RFXItemSlice.AlternativeStatus = 3)
                                          OR (RFXItemSlice.SliceType = 7 AND RFXItemSlice.AlternativeStatus = 3))
                                    AND ThisRFX.IsAvailableForAnalysis = true
                                    AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                                    AND ThisRFX.Status = 'Complete'
                                    AND RFXItemValue.NextVersion IS NULL
                                    AND ThisRFX.NextVersion IS NULL"
                       incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                          ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                          RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                          RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                       orderByClause="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId"
                       distinctFlag="true"
                       dynamicFieldName="RFXItemSlice.SliceType"
                       dynamicFieldValue="RFXItemExtCurrency.UniqueName;RFXItemExtMoney.ConversionDate;
                                          RFXItemQuantity.Amount;COALESCE(RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount, 0.0);
                                          RFXItemSavingsCurrency.UniqueName;RFXItemSavingsMoney1.ConversionDate;RFXItemSavingsMoney2.ConversionDate;
                                          CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 6 THEN COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount) ELSE 0.0 END;
                                          COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount);
                                          CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END;
                                          CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END;
                                          CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 6 THEN RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount ELSE 0.0 END;
                                          CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 6 THEN RFXItemSavingsCurrency.UniqueName END"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="ItemQuantity">
                <aqlMapping selectField="3" isDynamicField="true" dynamicValueSelect="RFXItemQuantity.Amount"/>
            </field>
            <field name="HistTotalCost.Amount">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="HistTotalCost.Currency">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="HistTotalCost.Date">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>

            <field name="PendingHistSpend.Amount">
                 <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 6 THEN COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount) ELSE 0.0 END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingHistSpend.Currency">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingHistSpend.Date">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="PendingSpend.Amount">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 6 THEN COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount) ELSE 0.0 END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingSpend.Currency">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingSpend.Date">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="ResvTotalCost.Amount">
                <aqlMapping selectField="5" isDynamicField="true"
                    dynamicValueSelect="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="ResvTotalCost.Currency">
                <aqlMapping selectField="5" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="ResvTotalCost.Date">
                <aqlMapping selectField="5" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="IncumbentQuantity">
                <aqlMapping selectField="8" isDynamicField="true" dynamicValueSelect="RFXItemQuantity.Amount"/>
            </field>
            <field name="IncumbentTotalCost.Amount">
                <aqlMapping selectField="8" isDynamicField="true"
                    dynamicValueSelect="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="IncumbentTotalCost.Currency">
                <aqlMapping selectField="8" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="IncumbentTotalCost.Date">
                <aqlMapping selectField="8" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="MktLeadQuantity">
                <aqlMapping selectField="3" isDynamicField="true" dynamicValueSelect="RFXItemQuantity.Amount"/>
            </field>
            <field name="MktLeadTotalCost.Amount">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="MktLeadTotalCost.Currency">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="MktLeadTotalCost.Date">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="LeadingSavings.Amount">
                <aqlMapping selectField="3" isDynamicField="true" dynamicValueSelect="COALESCE(RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount, 0.0)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="LeadingSavings.Currency">
                <aqlMapping selectField="3" isDynamicField="true" dynamicValueSelect="RFXItemSavingsCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="LeadingSavings.Date">
                <aqlMapping selectField="3" isDynamicField="true" dynamicValueSelect="RFXItemSavingsMoney2.ConversionDate"/>
            </field>

            <field name="PendingSavings.Amount">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 6 THEN RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount ELSE 0.0 END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingSavings.Currency">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="RFXItemSavingsCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingSavings.Date">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="RFXItemSavingsMoney2.ConversionDate"/>
            </field>
        </fieldMappings>
    </dataLoad>


    <!--
        RfxItemDataLoadLarge - This pull is the same as RfxItemDataLoad except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all item specific inforation, and store them to fact.RfxItemSummary.
    -->

    <dataLoad name="RfxItemDataLoadLarge">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.content.RFXItemValue AS RFXItemValue
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemExtMoney USING RFXItemValue.EXTENDEDPRICE
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemExtCurrency USING RFXItemExtMoney.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.MoneyDifference AS RFXItemSavingsMoney USING RFXItemValue.SAVINGS
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney1 USING RFXItemSavingsMoney.Amount1
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney2 USING RFXItemSavingsMoney.Amount2
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemSavingsCurrency USING RFXItemSavingsMoney1.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXTotalMoney USING RFXItemValue.TOTALCOST
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXTotalCurrency USING RFXTotalMoney.Currency,
                                  ariba.sourcing.content.Alternative AS RFXItemSlice SUBCLASS NONE"
                       whereClause="SourcingProject.WorkspaceType != 'Template'
                                    AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemIndex = 0
                                    AND ThisRFX.EventType IN ('2','3','4','6')
                                    AND RFXItemValue.ItemId = ThisRFX.Content.ItemId
                                    AND RFXItemSlice.ContentDocumentReference.DocumentId = ThisRFX.DocumentId
                                    AND RFXItemSlice.ContentDocumentReference.DocumentVersion = ThisRFX.DocumentVersion
                                    AND RFXItemSlice.ContentDocumentReference.DocumentMinorVersion = ThisRFX.DocumentMinorVersion
                                    AND RFXItemValue.SliceId = RFXItemSlice.SliceId
                                    AND RFXItemValue.SliceIncarnationVersion &lt;= RFXItemSlice.VersionId
                                    AND RFXItemValue.SliceExtinctionVersion &gt;= RFXItemSlice.VersionId
                                    AND RFXItemValue.Alternative is NULL
                                    AND RFXItemSlice.SliceType IN (3,4,5,7,8)
                                    AND ((RFXItemSlice.SliceType = 3 AND RFXItemSlice.AlternativeStatus = 3)
                                          OR (RFXItemSlice.SliceType != 3 AND RFXItemSlice.AlternativeStatus = 0)
                                          OR (RFXItemSlice.SliceType = 8 AND RFXItemSlice.AlternativeStatus = 3)
                                          OR (RFXItemSlice.SliceType = 7 AND RFXItemSlice.AlternativeStatus = 3))
                                    AND ThisRFX.IsAvailableForAnalysis = true
                                    AND ThisRFX.Rules.RFXFormat = 2
                                    AND ThisRFX.Status = 'Complete'
                                    AND RFXItemValue.NextVersion IS NULL
                                    AND ThisRFX.NextVersion IS NULL"
                       incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                          ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                          RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                          RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                       orderByClause="ThisRFX.Content.ItemId"
                       joinPriorityClause="ariba.sourcing.content.RFXItemValue:1000"
                       distinctFlag="true"
                       dynamicFieldName="RFXItemSlice.SliceType"
                       dynamicFieldValue="RFXItemExtCurrency.UniqueName;RFXItemExtMoney.ConversionDate;
                                          COALESCE(RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount, 0.0);
                                          RFXItemSavingsCurrency.UniqueName;RFXItemSavingsMoney1.ConversionDate;RFXItemSavingsMoney2.ConversionDate;
                                          CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount) ELSE 0.0 END;
                                          COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount);
                                          CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END;
                                          CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END;
                                          CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount ELSE 0.0 END;
                                          CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN RFXItemSavingsCurrency.UniqueName END"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.Content.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="ItemQuantity">
                <analysisMapping>
                     <mapValue implementation="ariba.analytics.mapValue.Constant">
                         <parameter name="Constant" value="1"/>
                     </mapValue>
                </analysisMapping>
            </field>
            <field name="HistTotalCost.Amount">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="HistTotalCost.Currency">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="HistTotalCost.Date">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>

            <field name="PendingHistSpend.Amount">
                 <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount) ELSE 0.0 END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingHistSpend.Currency">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingHistSpend.Date">
                <aqlMapping selectField="4" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="PendingSpend.Amount">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount) ELSE 0.0 END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingSpend.Currency">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingSpend.Date">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="ResvTotalCost.Amount">
                <aqlMapping selectField="5" isDynamicField="true"
                    dynamicValueSelect="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="ResvTotalCost.Currency">
                <aqlMapping selectField="5" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="ResvTotalCost.Date">
                <aqlMapping selectField="5" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="IncumbentQuantity">
                <analysisMapping>
                     <mapValue implementation="ariba.analytics.mapValue.Constant">
                         <parameter name="Constant" value="0"/>
                     </mapValue>
                </analysisMapping>
            </field>
            <field name="IncumbentTotalCost.Amount">
                <aqlMapping selectField="8" isDynamicField="true"
                    dynamicValueSelect="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="IncumbentTotalCost.Currency">
                <aqlMapping selectField="8" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="IncumbentTotalCost.Date">
                <aqlMapping selectField="8" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="MktLeadQuantity">
                <analysisMapping>
                     <mapValue implementation="ariba.analytics.mapValue.Constant">
                         <parameter name="Constant" value="1"/>
                     </mapValue>
                </analysisMapping>
            </field>
            <field name="MktLeadTotalCost.Amount">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="MktLeadTotalCost.Currency">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="MktLeadTotalCost.Date">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="LeadingSavings.Amount">
                <aqlMapping selectField="3" isDynamicField="true" dynamicValueSelect="COALESCE(RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount, 0.0)"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="LeadingSavings.Currency">
                <aqlMapping selectField="3" isDynamicField="true" dynamicValueSelect="RFXItemSavingsCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="LeadingSavings.Date">
                <aqlMapping selectField="3" isDynamicField="true" dynamicValueSelect="RFXItemSavingsMoney2.ConversionDate"/>
            </field>

            <field name="PendingSavings.Amount">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount ELSE 0.0 END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingSavings.Currency">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="RFXItemSavingsCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PendingSavings.Date">
                <aqlMapping selectField="3" isDynamicField="true"
                    dynamicValueSelect="RFXItemSavingsMoney2.ConversionDate"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxItemAwardLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.content.RFXAwardingItemValue AS ItemValue
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemExtMoney USING ItemValue.EXTENDEDPRICE
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemExtCurrency USING RFXItemExtMoney.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXTotalMoney USING ItemValue.TOTALCOST
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXTotalCurrency USING RFXTotalMoney.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.MoneyDifference AS RFXItemSavingsMoney USING ItemValue.SAVINGS
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney1 USING RFXItemSavingsMoney.Amount1
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemSavingsCurrency USING RFXItemSavingsMoney1.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.UOMQuantity AS RFXItemQuantity USING ItemValue.QUANTITY,
                                  ariba.sourcing.content.Alternative AS AwardSlice SUBCLASS NONE,
                                  ariba.sourcing.rfx.RFXItemSummaryData AS RFXItemSummaryData"
                       whereClause="SourcingProject.WorkspaceType != 'Template'
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                                   AND ThisRFX.Status = 'Complete'
                                   AND RFXItemSummaryData.ReportData = RFXRuntimeData.RFXReportData
                                   AND RFXItemSummaryData.ItemId = RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId
                                   AND ItemValue.ItemId = RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND ItemValue.SliceId = AwardSlice.SliceId
                                   AND ItemValue.SliceIncarnationVersion &lt;= AwardSlice.VersionId
                                   AND ItemValue.SliceExtinctionVersion &gt;= AwardSlice.VersionId
                                   AND AwardSlice.ContentDocumentReference.DocumentId = ThisRFX.DocumentId
                                   AND AwardSlice.ContentDocumentReference.DocumentVersion = ThisRFX.DocumentVersion
                                   AND AwardSlice.ContentDocumentReference.DocumentMinorVersion = ThisRFX.DocumentMinorVersion
                                   AND AwardSlice.SliceType = 7
                                   AND AwardSlice.AlternativeStatus = 3
                                   AND ItemValue.NextVersion IS NULL
                                   AND ThisRFX.NextVersion IS NULL"
                      incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                          ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                          RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                          RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                      orderByClause="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId"
                      groupByFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="AwardedTotalCost.Amount">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 13 THEN CASE sum(RFXTotalMoney.Amount) WHEN NULL THEN sum(RFXItemExtMoney.Amount) ELSE sum(RFXTotalMoney.Amount) END ELSE 0.0 END"
                    groupBy="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId,RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="AwardedTotalCost.Date">
                <aqlMapping selectField="CASE max(RFXTotalMoney.ConversionDate) WHEN NULL THEN max(RFXItemExtMoney.ConversionDate) ELSE max(RFXTotalMoney.ConversionDate) END"
                    groupBy="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId"/>
            </field>
            <field name="AwardedTotalCost.Currency">
                <aqlMapping selectField="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="AwardedHistSpend.Amount">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 13 THEN sum(RFXItemSavingsMoney1.Amount) ELSE 0.0 END"
                    groupBy="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId,RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="AwardedHistSpend.Currency">
                <aqlMapping selectField="RFXItemSavingsCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="AwardedHistSpend.Date">
                <aqlMapping selectField="max(RFXItemSavingsMoney1.ConversionDate)"
                    groupBy="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId"/>
            </field>
            <field name="AwardedQuantity">
                <aqlMapping selectField="sum(RFXItemQuantity.Amount)"
                    groupBy="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <!--
        RfxItemAwardLoadLarge - This pull is the same as RfxItemAwardLoad except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all item award inforation, and store them to fact.RfxItemSummary.
    -->
    <dataLoad name="RfxItemAwardLoadLarge">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.content.RFXAwardingItemValue AS ItemValue
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemExtMoney USING ItemValue.EXTENDEDPRICE
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemExtCurrency USING RFXItemExtMoney.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXTotalMoney USING ItemValue.TOTALCOST
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXTotalCurrency USING RFXTotalMoney.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.MoneyDifference AS RFXItemSavingsMoney USING ItemValue.SAVINGS
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney1 USING RFXItemSavingsMoney.Amount1
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemSavingsCurrency USING RFXItemSavingsMoney1.Currency,
                                  ariba.sourcing.content.Alternative AS AwardSlice SUBCLASS NONE"
                       whereClause="SourcingProject.WorkspaceType != 'Template'
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND ThisRFX.Rules.RFXFormat = 2
                                   AND ThisRFX.Status = 'Complete'
                                   AND ItemValue.ItemId = ThisRFX.Content.ItemId
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND ItemValue.SliceId = AwardSlice.SliceId
                                   AND ItemValue.SliceIncarnationVersion &lt;= AwardSlice.VersionId
                                   AND ItemValue.SliceExtinctionVersion &gt;= AwardSlice.VersionId
                                   AND AwardSlice.ContentDocumentReference.DocumentId = ThisRFX.DocumentId
                                   AND AwardSlice.ContentDocumentReference.DocumentVersion = ThisRFX.DocumentVersion
                                   AND AwardSlice.ContentDocumentReference.DocumentMinorVersion = ThisRFX.DocumentMinorVersion
                                   AND AwardSlice.SliceType = 7
                                   AND AwardSlice.AlternativeStatus = 3
                                   AND ItemValue.NextVersion IS NULL
                                   AND ThisRFX.NextVersion IS NULL"
                      incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                          ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                          RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                          RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                      groupByFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.Content.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="AwardedTotalCost.Amount">
                <aqlMapping selectField="CASE sum(RFXTotalMoney.Amount) WHEN NULL THEN sum(RFXItemExtMoney.Amount) ELSE sum(RFXTotalMoney.Amount) END"
                    groupBy="ThisRFX.Content.ItemId"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="AwardedTotalCost.Date">
                <aqlMapping selectField="CASE max(RFXTotalMoney.ConversionDate) WHEN NULL THEN max(RFXItemExtMoney.ConversionDate) ELSE max(RFXTotalMoney.ConversionDate) END"
                    groupBy="ThisRFX.Content.ItemId"/>
            </field>
            <field name="AwardedTotalCost.Currency">
                <aqlMapping selectField="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="AwardedHistSpend.Amount">
                <aqlMapping selectField="sum(RFXItemSavingsMoney1.Amount)"
                    groupBy="ThisRFX.Content.ItemId"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="0.0"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="AwardedHistSpend.Currency">
                <aqlMapping selectField="RFXItemSavingsCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="AwardedHistSpend.Date">
                <aqlMapping selectField="max(RFXItemSavingsMoney1.ConversionDate)"
                    groupBy="ThisRFX.Content.ItemId"/>
            </field>
            <field name="AwardedQuantity">
                <analysisMapping>
                     <mapValue implementation="ariba.analytics.mapValue.Constant">
                         <parameter name="Constant" value="1"/>
                     </mapValue>
                </analysisMapping>
            </field>
        </fieldMappings>
    </dataLoad>


    <dataLoad name="SupplierParticipationStatusLoad">
        <loadStages>
             <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  LEFT OUTER JOIN ariba.basic.core.CommodityCode AS Comm USING ThisRFX.Commodity
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  LEFT OUTER JOIN ariba.basic.core.Money as BaselineSpend USING SourcingProject.BaselineSpend
                                  LEFT OUTER JOIN ariba.basic.core.Currency as BaselineSpendCurrency INCLUDE INACTIVE USING BaselineSpend.Currency
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.rfx.ItemSupplierData AS ItemLevelSupplierData
                                  JOIN ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData USING ItemLevelSupplierData.SupplierData
                                  JOIN ariba.user.core.User AS InvitedUser INCLUDE INACTIVE USING RFXSupplierData.InvitedUser
                                  JOIN ariba.user.core.Organization AS InvitedOrg INCLUDE INACTIVE USING InvitedUser.Organization,
                                  ariba.sourcing.content.RFXItem AS RFXItem"
                      whereClause="SourcingProject.WorkspaceType != 'Template'
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                                   AND ItemLevelSupplierData.ItemId = RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId
                                   AND ItemLevelSupplierData.ItemId = RFXItem.ItemId
                                   AND RFXItem.ItemSubType != 20
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                                   AND ThisRFX.Status = 'Complete'
                                   AND ThisRFX.NextVersion IS NULL"
                      incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                         ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                         (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                         SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                         (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                         RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                      orderByClause="InvitedOrg.SystemID,InvitedUser.UniqueName"
                      distinctFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="InvitedOrg.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="InvitedUser.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="InvitedUser.PasswordAdapter"/>
            </field>
            <field name="EventStartDate">
                <aqlMapping selectField="CASE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate
                                         WHEN NULL THEN RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime
                                         ELSE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate END"/>
            </field>
            <field name="EventEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.CompletedDate"/>
            </field>
            <field name="EventCreateDate">
                <aqlMapping selectField="ThisRFX.CreateDate"/>
            </field>
            <field name="PreviewBeginDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate"/>
            </field>
            <field name="BiddingStartDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime"/>
            </field>
            <field name="BiddingEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingEndTime"/>
            </field>
            <field name="EstAwardDate">
                <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.EstimatedAwardDate"/>
            </field>
            <field name="ContractEffectiveDate">
                <aqlMapping selectField="SourcingProject.ContractEffectiveDate"/>
            </field>
            <field name="ContractMonths">
                <aqlMapping selectField="CASE SourcingProject.ContractMonths WHEN NULL THEN 0 ELSE SourcingProject.ContractMonths END"/>
            </field>
            <field name="TargetSavingsPct">
                <aqlMapping selectField="CASE SourcingProject.TargetSavingPct WHEN NULL THEN 0 ELSE SourcingProject.TargetSavingPct END"/>
            </field>
            <field name="BaselineSpend.Amount">
                <aqlMapping selectField="CASE SourcingProject.BaselineSpend.Amount WHEN NULL THEN 0.0 ELSE SourcingProject.BaselineSpend.Amount END"/>
            </field>
            <field name="BaselineSpend.Currency">
                <aqlMapping selectField="BaselineSpendCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="BaselineSpend.Date">
                <aqlMapping selectField="SourcingProject.BaselineSpend.ConversionDate"/>
            </field>
            <field name="ItemCommodity.CommodityId">
                <aqlMapping selectField="Comm.UniqueName"/>
            </field>
            <field name="IncumbentFlag">
                <aqlMapping selectField="CASE ItemLevelSupplierData.InviteeIncumbentFlag WHEN 2 THEN TRUE ELSE CASE ItemLevelSupplierData.InviteeIncumbentFlag WHEN 3 THEN TRUE ELSE FALSE END END"/>
            </field>
            <field name="DeclinedFlag">
                <aqlMapping selectField="CASE ItemLevelSupplierData.IntendToBid WHEN FALSE THEN TRUE ELSE FALSE END"/>
            </field>
            <field name="NumItemDeclined">
                <aqlMapping selectField="CASE ItemLevelSupplierData.IntendToBid WHEN FALSE THEN 1 ELSE 0 END"/>
            </field>
            <field name="AcceptedFlag">
                <aqlMapping selectField="ItemLevelSupplierData.IntendToBid"/>
            </field>
            <field name="NumItemAccepted">
                <aqlMapping selectField="CASE ItemLevelSupplierData.IntendToBid WHEN TRUE THEN 1 ELSE 0 END"/>
            </field>
        </fieldMappings>
     </dataLoad>

    <dataLoad name="SupplierParticipationStatusOwnerLoad">
        <loadStages>
             <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.user.core.User AS Owner INCLUDE INACTIVE USING ThisRFX.Owner
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.rfx.ItemSupplierData AS ItemLevelSupplierData
                                  JOIN ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData USING ItemLevelSupplierData.SupplierData
                                  JOIN ariba.user.core.User AS InvitedUser INCLUDE INACTIVE USING RFXSupplierData.InvitedUser
                                  JOIN ariba.user.core.Organization AS InvitedOrg INCLUDE INACTIVE USING InvitedUser.Organization,
                                  ariba.sourcing.content.RFXItem AS RFXItem"
                      whereClause="SourcingProject.WorkspaceType != 'Template'
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                                   AND ItemLevelSupplierData.ItemId = RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId
                                   AND ItemLevelSupplierData.ItemId = RFXItem.ItemId
                                   AND RFXItem.ItemSubType != 20
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                                   AND ThisRFX.Status = 'Complete'
                                   AND ThisRFX.NextVersion IS NULL"
                      incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                         ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                         (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                         SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                         (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                         RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                      orderByClause="InvitedOrg.SystemID,InvitedUser.UniqueName"
                      distinctFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="InvitedOrg.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="InvitedUser.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="InvitedUser.PasswordAdapter"/>
            </field>
            <field name="Owner.UserId">
                <aqlMapping selectField="Owner.UniqueName"/>
            </field>
            <field name="Owner.PasswordAdapter">
                <aqlMapping selectField="Owner.PasswordAdapter"/>
            </field>
        </fieldMappings>
     </dataLoad>

    <!--
        SupplierParticipationStatusLoadLarge - This pull is the same as SupplierParticipationStatusLoad except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all isuppliers specific inforation, and store them to fact.SupplierParticipation.
        Since there is no ItemSupplierData object pulled for this row, the following item will be defaulted to False
                        <field name="IncumbentFlag">
                        <aqlMapping selectField="CASE ThisRFX.Rules.RFXFormat WHEN 2 THEN FALSE END"/>
                    </field>

    -->
     <dataLoad name="SupplierParticipationStatusLoadLarge">
            <loadStages>
                 <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                      LEFT OUTER JOIN ariba.basic.core.CommodityCode AS Comm USING ThisRFX.Commodity
                                      JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                      LEFT OUTER JOIN ariba.basic.core.Money as BaselineSpend USING SourcingProject.BaselineSpend
                                      LEFT OUTER JOIN ariba.basic.core.Currency as BaselineSpendCurrency INCLUDE INACTIVE USING BaselineSpend.Currency
                                      JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                      ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData
                                      JOIN ariba.user.core.User AS InvitedUser INCLUDE INACTIVE USING RFXSupplierData.InvitedUser
                                      JOIN ariba.user.core.Organization AS InvitedOrg INCLUDE INACTIVE USING InvitedUser.Organization"
                          whereClause="SourcingProject.WorkspaceType != 'Template'
                                       AND ThisRFX.EventType IN ('2','3','4','6')
                                       AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemIndex = 0
                                       AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                                       AND ThisRFX.IsAvailableForAnalysis = true
                                       AND ThisRFX.Rules.RFXFormat = 2
                                       AND ThisRFX.Status = 'Complete'
                                       AND ThisRFX.NextVersion IS NULL"
                          incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                             ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                             (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                             SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                             (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                             RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                          orderByClause="InvitedOrg.SystemID,InvitedUser.UniqueName"
                          distinctFlag="true"/>
                <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
            </loadStages>
            <fieldMappings>
                <field name="Event.EventId">
                    <aqlMapping selectField="ThisRFX.InternalId"
                        sourceLookupField="InternalId"/>
                </field>
                <field name="Event.ItemId">
                    <aqlMapping selectField="ThisRFX.Content.ItemId"/>
                </field>
                <field name="Event.VersionNumber">
                    <aqlMapping selectField="ThisRFX.DocumentVersion"/>
                </field>
                <field name="Supplier.SupplierId">
                    <aqlMapping selectField="InvitedOrg.SystemID"/>
                </field>
                <field name="Supplier.SupplierLocationId">
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.Constant">
                            <parameter name="Constant" value=""/>
                        </mapValue>
                    </analysisMapping>
                </field>
                <field name="Bidder.UserId">
                    <aqlMapping selectField="InvitedUser.UniqueName"/>
                </field>
                <field name="Bidder.PasswordAdapter">
                    <aqlMapping selectField="InvitedUser.PasswordAdapter"/>
                </field>
                <field name="EventStartDate">
                    <aqlMapping selectField="CASE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate
                                             WHEN NULL THEN RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime
                                             ELSE ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate END"/>
                </field>
                <field name="EventEndDate">
                    <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.CompletedDate"/>
                </field>
                <field name="EventCreateDate">
                    <aqlMapping selectField="ThisRFX.CreateDate"/>
                </field>
                <field name="PreviewBeginDate">
                    <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.PlannedPreviewBeginDate"/>
                </field>
                <field name="BiddingStartDate">
                    <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingStartTime"/>
                </field>
                <field name="BiddingEndDate">
                    <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.BiddingEndTime"/>
                </field>
                <field name="EstAwardDate">
                    <aqlMapping selectField="ThisRFX.TimingRule.RFXInputTimingRule.EstimatedAwardDate"/>
                </field>
                <field name="ContractEffectiveDate">
                    <aqlMapping selectField="SourcingProject.ContractEffectiveDate"/>
                </field>
                <field name="ContractMonths">
                    <aqlMapping selectField="CASE SourcingProject.ContractMonths WHEN NULL THEN 0 ELSE SourcingProject.ContractMonths END"/>
                </field>
                <field name="TargetSavingsPct">
                    <aqlMapping selectField="CASE SourcingProject.TargetSavingPct WHEN NULL THEN 0 ELSE SourcingProject.TargetSavingPct END"/>
                </field>
                <field name="BaselineSpend.Amount">
                    <aqlMapping selectField="CASE SourcingProject.BaselineSpend.Amount WHEN NULL THEN 0.0 ELSE SourcingProject.BaselineSpend.Amount END"/>
                </field>
                <field name="BaselineSpend.Currency">
                    <aqlMapping selectField="BaselineSpendCurrency.UniqueName"/>
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                            <parameter name="MapType" value="SourceSystemCurrency"/>
                        </mapValue>
                    </analysisMapping>
                </field>
                <field name="BaselineSpend.Date">
                    <aqlMapping selectField="SourcingProject.BaselineSpend.ConversionDate"/>
                </field>
                <field name="ItemCommodity.CommodityId">
                    <aqlMapping selectField="Comm.UniqueName"/>
                </field>
                <field name="IncumbentFlag">
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.Constant">
                            <parameter name="Constant" value="false"/>
                         </mapValue>
                    </analysisMapping>
                </field>
                <field name="DeclinedFlag">
                    <aqlMapping selectField="CASE RFXSupplierData.IntendToBid WHEN FALSE THEN TRUE ELSE FALSE END"/>
                </field>
                <field name="NumItemDeclined">
                    <aqlMapping selectField="CASE RFXSupplierData.IntendToBid WHEN TRUE THEN 0 ELSE 1 END"/>
                </field>
                <field name="AcceptedFlag">
                    <aqlMapping selectField="RFXSupplierData.IntendToBid"/>
                </field>
                <field name="NumItemAccepted">
                    <aqlMapping selectField="CASE RFXSupplierData.IntendToBid WHEN TRUE THEN 1 ELSE 0 END"/>
                </field>
            </fieldMappings>
    </dataLoad>
    <dataLoad name="SupplierParticipationStatusOwnerLoadLarge">
            <loadStages>
                 <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                      JOIN ariba.user.core.User AS Owner INCLUDE INACTIVE USING ThisRFX.Owner
                                      JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                      JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                      ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData
                                      JOIN ariba.user.core.User AS InvitedUser INCLUDE INACTIVE USING RFXSupplierData.InvitedUser
                                      JOIN ariba.user.core.Organization AS InvitedOrg INCLUDE INACTIVE USING InvitedUser.Organization"
                          whereClause="SourcingProject.WorkspaceType != 'Template'
                                       AND ThisRFX.EventType IN ('2','3','4','6')
                                       AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemIndex = 0
                                       AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                                       AND ThisRFX.IsAvailableForAnalysis = true
                                       AND ThisRFX.Rules.RFXFormat = 2
                                       AND ThisRFX.Status = 'Complete'
                                       AND ThisRFX.NextVersion IS NULL"
                          incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                             ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                             (SourcingProject.TimeUpdated &gt;= :IncrementalStartDate AND
                                             SourcingProject.TimeUpdated &lt;= :IncrementalEndDate) OR
                                             (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                             RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate)"
                          orderByClause="InvitedOrg.SystemID,InvitedUser.UniqueName"
                          distinctFlag="true"/>
                <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
            </loadStages>
            <fieldMappings>
                 <field name="Event.EventId">
                    <aqlMapping selectField="ThisRFX.InternalId"
                        sourceLookupField="InternalId"/>
                </field>
                <field name="Event.ItemId">
                    <aqlMapping selectField="ThisRFX.Content.ItemId"/>
                </field>
                <field name="Event.VersionNumber">
                    <aqlMapping selectField="ThisRFX.DocumentVersion"/>
                </field>
                <field name="Supplier.SupplierId">
                    <aqlMapping selectField="InvitedOrg.SystemID"/>
                </field>
                <field name="Supplier.SupplierLocationId">
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.Constant">
                            <parameter name="Constant" value=""/>
                        </mapValue>
                    </analysisMapping>
                </field>
                <field name="Bidder.UserId">
                    <aqlMapping selectField="InvitedUser.UniqueName"/>
                </field>
                <field name="Bidder.PasswordAdapter">
                    <aqlMapping selectField="InvitedUser.PasswordAdapter"/>
                </field>
                <field name="Owner.UserId">
                    <aqlMapping selectField="Owner.UniqueName"/>
                </field>
                <field name="Owner.PasswordAdapter">
                    <aqlMapping selectField="Owner.PasswordAdapter"/>
                </field>
            </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxItemParticipationDepartmentLoad">
        <loadStages>
            <aqlStage fromClause="ariba.analytics.fact.EventParticipation AS EventParticipation
                                  JOIN ariba.analytics.dimension.Supplier AS Supplier USING EventParticipation.Supplier
                                  JOIN ariba.analytics.dimension.UserData AS Bidder USING EventParticipation.Bidder
                                  JOIN ariba.analytics.fact.DepartmentEventParticipation AS Dep1 USING EventParticipation.Department
                                  JOIN ariba.analytics.dimension.Organization AS Department USING Dep1.Department,
                                  ariba.analytics.dimension.Event AS EventInfo"
                whereClause="EventInfo.EventId = EventParticipation.Event.EventId
                             AND EventInfo.ItemId != EventParticipation.Event.EventId
                             AND EventInfo.PartitionNumber = EventParticipation.PartitionNumber"
                incrementalClause="EventParticipation.TimeUpdated &gt;= :StarIncrementalStartDate"
                orderByClause="EventInfo.ItemId,Supplier.SupplierId,Bidder.UserId"
                distinctFlag="true"
                queryStarSchemaFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="EventInfo.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="EventInfo.EventId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="EventInfo.VersionNumber"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="Supplier.SupplierId"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="Bidder.UserId"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="Department.OrganizationId">
                <aqlMapping selectField="Department.OrganizationId"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxItemParticipationRegionLoad">
        <loadStages>
            <aqlStage fromClause="ariba.analytics.fact.EventParticipation AS EventParticipation
                                  JOIN ariba.analytics.dimension.Supplier AS Supplier USING EventParticipation.Supplier
                                  JOIN ariba.analytics.dimension.UserData AS Bidder USING EventParticipation.Bidder
                                  JOIN ariba.analytics.fact.RegionEventParticipation AS Region1 USING EventParticipation.Region
                                  JOIN ariba.analytics.dimension.Region AS Region USING Region1.Region,
                                  ariba.analytics.dimension.Event AS EventInfo"
                whereClause="EventInfo.EventId = EventParticipation.Event.EventId
                             AND EventInfo.ItemId != EventParticipation.Event.EventId
                             AND EventInfo.PartitionNumber = EventParticipation.PartitionNumber"
                incrementalClause="EventParticipation.TimeUpdated &gt;= :StarIncrementalStartDate"
                orderByClause="EventInfo.ItemId,Supplier.SupplierId,Bidder.UserId"
                distinctFlag="true"
                queryStarSchemaFlag="true"/>
            <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="EventInfo.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="EventInfo.EventId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="EventInfo.VersionNumber"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="Supplier.SupplierId"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="Bidder.UserId"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="Region.RegionId">
                <aqlMapping selectField="Region.RegionId"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxItemParticipationCommodityLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,

                                  ariba.sourcing.rfx.ItemSupplierData AS ItemSupplierData
                                  JOIN ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData USING ItemSupplierData.SupplierData,

                                  ariba.sourcing.content.RFXItem AS RFXItem
                                  JOIN ariba.basic.core.CommodityCode AS Comm USING RFXItem.Commodity,

                                  ariba.user.core.User AS Bidder INCLUDE INACTIVE
                                  JOIN ariba.user.core.Organization AS BidderOrg INCLUDE INACTIVE USING Bidder.Organization"

                whereClause="ThisRFX.ActualTemplateObject is NOT NULL
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                                   AND ThisRFX.Status = 'Complete'
                                   AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                                   AND RFXSupplierData.InvitedUser = Bidder
                                   AND ItemSupplierData.ItemId = RFXItem.ItemId
                                   AND ItemSupplierData.HasBid = true
                                   AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                orderByClause="RFXItem.ItemId, Bidder.UniqueName"
                joinPriorityClause="ariba.sourcing.rfx.RFXDocument:1000"/>
            <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="RFXItem.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="BidderOrg.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="Bidder.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="ItemCommodity.CommodityId">
                <aqlMapping selectField="Comm.UniqueName"/>
            </field>
        </fieldMappings>
    </dataLoad>


    <!--
        RfxItemParticipationCommodityLoadLarge - This pull is the same as RfxItemParticipationCommodityLoad except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all suppliers specific inforation, and store them to fact.SupplierParticipation.
    -->
    <dataLoad name="RfxItemParticipationCommodityLoadLarge">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  LEFT OUTER JOIN ariba.basic.core.CommodityCode AS Comm Using ThisRFX.Commodity,
                                  ariba.user.core.User AS Bidder INCLUDE INACTIVE
                                  JOIN ariba.user.core.Organization AS BidderOrg INCLUDE INACTIVE USING Bidder.Organization,
                                  ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData"

                whereClause="ThisRFX.ActualTemplateObject is NOT NULL
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND ThisRFX.Rules.RFXFormat = 2
                                   AND ThisRFX.Status = 'Complete'
                                   AND RFXSupplierData.InvitedUser = Bidder
                                   AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemIndex = 0
                                   AND RFXSupplierData.HasBid = true
                                   AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                                   AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                orderByClause="ThisRFX.Content.ItemId, Bidder.UniqueName"
                joinPriorityClause="ariba.sourcing.rfx.RFXDocument:1000"/>
            <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.Content.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="BidderOrg.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="Bidder.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="ItemCommodity.CommodityId">
                <aqlMapping selectField="Comm.UniqueName"/>
            </field>
        </fieldMappings>
    </dataLoad>


    <dataLoad name="SupplierParticipationDataLoad1">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.content.RFXItemValue AS MyItemValue SUBCLASS NONE
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemExtMoney USING MyItemValue.EXTENDEDPRICE
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemExtCurrency USING RFXItemExtMoney.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.MoneyDifference AS RFXItemSavingsMoney USING MyItemValue.SAVINGS
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney1 USING RFXItemSavingsMoney.Amount1
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney2 USING RFXItemSavingsMoney.Amount2
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemSavingsCurrency USING RFXItemSavingsMoney1.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.UOMQuantity AS RFXItemQuantity USING MyItemValue.QUANTITY
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXTotalMoney USING MyItemValue.TOTALCOST
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXTotalCurrency USING RFXTotalMoney.Currency,
                                  ariba.sourcing.rfx.RFXBid AS MyBid SUBCLASS NONE
                                  JOIN ariba.user.core.User AS Bidder INCLUDE INACTIVE USING MyBid.SubmitFor
                                  JOIN ariba.user.core.Organization AS BidderOrg INCLUDE INACTIVE USING Bidder.Organization"
                      whereClause="SourcingProject.WorkspaceType != 'Template'
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND MyItemValue.ItemId = RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId
                                   AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemIndex != 0
                                   AND MyItemValue.SliceId = MyBid.SliceId
                                   AND MyItemValue.SliceIncarnationVersion &lt;= MyBid.VersionId
                                   AND MyItemValue.SliceExtinctionVersion &gt;= MyBid.VersionId
                                   AND MyItemValue.Alternative IS NULL
                                   AND MyBid.AlternativeStatus = 3
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                                   AND ThisRFX.Status = 'Complete'
                                   AND MyBid.ContentDocumentReference.DocumentId = ThisRFX.DocumentId
                                   AND MyBid.ContentDocumentReference.DocumentVersion = ThisRFX.DocumentVersion
                                   AND MyBid.ContentDocumentReference.DocumentMinorVersion = ThisRFX.DocumentMinorVersion
                                   AND ThisRFX.NextVersion IS NULL
                                   AND MyItemValue.NextVersion IS NULL"
                      incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                          ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                          RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                          RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                      orderByClause="MyItemValue.ItemId"
                      distinctFlag="true"/>
             <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="MyItemValue.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="BidderOrg.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="Bidder.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="SurrogateFlag">
                <aqlMapping selectField="MyBid.IsSurrogateBid"/>
            </field>
            <field name="Surrogate.UserId">
                <aqlMapping selectField="Bidder.UniqueName"/>
            </field>
            <field name="Surrogate.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="BidQuantity">
                <aqlMapping selectField="RFXItemQuantity.Amount"/>
            </field>
            <field name="BidTotalCost.Amount">
                <aqlMapping selectField="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
            </field>
            <field name="BidTotalCost.Currency">
                <aqlMapping selectField="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="BidTotalCost.Date">
                <aqlMapping selectField="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="PotentialSavings.Amount">
                <aqlMapping selectField="COALESCE(RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount, 0.0)"/>
            </field>
            <field name="PotentialSavings.Currency">
                <aqlMapping selectField="RFXItemSavingsCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PotentialSavings.Date">
                <aqlMapping selectField="RFXItemSavingsMoney2.ConversionDate"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <!--
        SupplierParticipationDataLoad1Large - This pull is the same as SupplierParticipationDataLoad1 except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all supplier specific inforation, and store them to fact.SupplierParticipation.
    -->

    <dataLoad name="SupplierParticipationDataLoad1Large">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.content.RFXItemValue AS MyItemValue SUBCLASS NONE
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemExtMoney USING MyItemValue.EXTENDEDPRICE
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemExtCurrency USING RFXItemExtMoney.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.MoneyDifference AS RFXItemSavingsMoney USING MyItemValue.SAVINGS
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney1 USING RFXItemSavingsMoney.Amount1
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXItemSavingsMoney2 USING RFXItemSavingsMoney.Amount2
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXItemSavingsCurrency USING RFXItemSavingsMoney1.Currency
                                  LEFT OUTER JOIN ariba.sourcing.basic.UOMQuantity AS RFXItemQuantity USING MyItemValue.QUANTITY
                                  LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS RFXTotalMoney USING MyItemValue.TOTALCOST
                                  LEFT OUTER JOIN ariba.basic.core.Currency AS RFXTotalCurrency USING RFXTotalMoney.Currency,
                                  ariba.sourcing.rfx.RFXBid AS MyBid SUBCLASS NONE
                                  JOIN ariba.user.core.User AS Bidder INCLUDE INACTIVE USING MyBid.SubmitFor
                                  JOIN ariba.user.core.Organization AS BidderOrg INCLUDE INACTIVE USING Bidder.Organization"
                      whereClause="SourcingProject.WorkspaceType != 'Template'
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND MyItemValue.SliceId = MyBid.SliceId
                                   AND MyItemValue.SliceIncarnationVersion &lt;= MyBid.VersionId
                                   AND MyItemValue.SliceExtinctionVersion &gt;= MyBid.VersionId
                                   AND MyItemValue.Alternative IS NULL
                                   AND MyBid.AlternativeStatus = 3
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND ThisRFX.Rules.RFXFormat = 2
                                   AND ThisRFX.Content.ItemId = MyItemValue.Item.ItemId
                                   AND ThisRFX.Status = 'Complete'
                                   AND MyBid.ContentDocumentReference.DocumentId = ThisRFX.DocumentId
                                   AND MyBid.ContentDocumentReference.DocumentVersion = ThisRFX.DocumentVersion
                                   AND MyBid.ContentDocumentReference.DocumentMinorVersion = ThisRFX.DocumentMinorVersion
                                   AND ThisRFX.NextVersion IS NULL
                                   AND MyItemValue.NextVersion IS NULL"
                      incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                          ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                          RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                          RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                      orderByClause="MyItemValue.ItemId"
                      distinctFlag="true"/>
             <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="MyItemValue.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="BidderOrg.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="Bidder.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="SurrogateFlag">
                <aqlMapping selectField="MyBid.IsSurrogateBid"/>
            </field>
            <field name="Surrogate.UserId">
                <aqlMapping selectField="Bidder.UniqueName"/>
            </field>
            <field name="Surrogate.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="BidQuantity">
                <aqlMapping selectField="RFXItemQuantity.Amount"/>
            </field>
            <field name="BidTotalCost.Amount">
                <aqlMapping selectField="COALESCE(RFXTotalMoney.Amount, RFXItemExtMoney.Amount)"/>
            </field>
            <field name="BidTotalCost.Currency">
                <aqlMapping selectField="CASE RFXTotalCurrency.UniqueName WHEN NULL THEN RFXItemExtCurrency.UniqueName ELSE RFXTotalCurrency.UniqueName END"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="BidTotalCost.Date">
                <aqlMapping selectField="CASE RFXTotalMoney.ConversionDate WHEN NULL THEN RFXItemExtMoney.ConversionDate ELSE RFXTotalMoney.ConversionDate END"/>
            </field>
            <field name="PotentialSavings.Amount">
                <aqlMapping selectField="COALESCE(RFXItemSavingsMoney1.Amount-RFXItemSavingsMoney2.Amount, 0.0)"/>
            </field>
            <field name="PotentialSavings.Currency">
                <aqlMapping selectField="RFXItemSavingsCurrency.UniqueName"/>
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                        <parameter name="DefaultValue" value="USD"/>
                    </mapValue>
                    <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                        <parameter name="MapType" value="SourceSystemCurrency"/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="PotentialSavings.Date">
                <aqlMapping selectField="RFXItemSavingsMoney2.ConversionDate"/>
            </field>
        </fieldMappings>
    </dataLoad>


    <dataLoad name="SupplierParticipationDataLoad2">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.rfx.ItemSupplierData AS ItemSupplierData
                                  JOIN ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData USING ItemSupplierData.SupplierData
                                  JOIN ariba.user.core.User AS Bidder INCLUDE INACTIVE USING RFXSupplierData.InvitedUser
                                  JOIN ariba.user.core.Organization AS BidderOrg INCLUDE INACTIVE USING Bidder.Organization"
                      whereClause="SourcingProject.WorkspaceType != 'Template'
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                                   AND ThisRFX.Status = 'Complete'
                                   AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = ItemSupplierData.ItemId
                                   AND ItemSupplierData.HasBid = true
                                   AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                                   AND ThisRFX.NextVersion IS NULL"
                      incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                          ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                          RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                          RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                      orderByClause="ItemSupplierData.ItemId"
                      distinctFlag="true"/>
             <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="ItemSupplierData.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="BidderOrg.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="Bidder.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="AwardedFlag">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 13 THEN ItemSupplierData.Awarded ELSE FALSE END"/>
            </field>
            <field name="NumItemAwarded">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 13 THEN CASE ItemSupplierData.Awarded WHEN TRUE THEN 1 ELSE 0 END END"/>
            </field>
            <field name="ParticipatedFlag">
                <aqlMapping selectField="ItemSupplierData.HasBid"/>
            </field>
            <field name="NumItemBidOn">
                <aqlMapping selectField="CASE ItemSupplierData.HasBid WHEN TRUE THEN 1 ELSE 0 END"/>
            </field>
            <field name="BidsSubmitted">
                <aqlMapping selectField="ItemSupplierData.NumberOfSubmittedBids"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <!--
        SupplierParticipationDataLoad2Large - This pull is the same as SupplierParticipationDataLoad2 except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all supplier specific inforation, and store them to fact.SupplierParticipation.
    -->
    <dataLoad name="SupplierParticipationDataLoad2Large">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.rfx.RFXSupplierData AS RFXSupplierData
                                  JOIN ariba.user.core.User AS Bidder INCLUDE INACTIVE USING RFXSupplierData.InvitedUser
                                  JOIN ariba.user.core.Organization AS BidderOrg INCLUDE INACTIVE USING Bidder.Organization"
                      whereClause="SourcingProject.WorkspaceType != 'Template'
                                   AND ThisRFX.EventType IN ('2','3','4','6')
                                   AND ThisRFX.IsAvailableForAnalysis = true
                                   AND ThisRFX.Rules.RFXFormat = 2
                                   AND ThisRFX.Status = 'Complete'
                                   AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemIndex = 0
                                   AND RFXSupplierData.HasBid = true
                                   AND RFXSupplierData.ReportData = RFXRuntimeData.RFXReportData
                                   AND ThisRFX.NextVersion IS NULL"
                      incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                          ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                          RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                          RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                      distinctFlag="true"/>
             <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.Content.ItemId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="BidderOrg.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="Bidder.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="Bidder.PasswordAdapter"/>
            </field>
            <field name="AwardedFlag">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN RFXSupplierData.Awarded ELSE FALSE END"/>
            </field>
            <field name="NumItemAwarded">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN CASE RFXSupplierData.Awarded WHEN TRUE THEN 1 ELSE 0 END END"/>
            </field>
            <field name="ParticipatedFlag">
                <aqlMapping selectField="RFXSupplierData.HasBid"/>
            </field>
            <field name="NumItemBidOn">
                <aqlMapping selectField="CASE RFXSupplierData.HasBid WHEN TRUE THEN 1 ELSE 0 END"/>
            </field>
            <field name="BidsSubmitted">
                <aqlMapping selectField="RFXSupplierData.NumberOfSubmittedBids"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="SupplierParticipationAwardLoad">
            <loadStages>
                <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                      JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                      JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                      ariba.sourcing.content.RFXAwardingItemValue AS AwardingItemValue
                                      JOIN ariba.user.core.User AS AwardedSupplier INCLUDE INACTIVE USING AwardingItemValue.Supplier
                                      JOIN ariba.user.core.Organization AS AwardedOrg INCLUDE INACTIVE USING AwardedSupplier.Organization
                                      LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS AwardedExtPrice USING AwardingItemValue.EXTENDEDPRICE
                                      LEFT OUTER JOIN ariba.basic.core.Currency AS AwardedExtCurrency USING AwardedExtPrice.Currency
                                      LEFT OUTER JOIN ariba.sourcing.basic.MoneyDifference AS RFXItemSavingsMoney USING AwardingItemValue.SAVINGS
                                      LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS AwardedSavingsMoney1 USING RFXItemSavingsMoney.Amount1
                                      LEFT OUTER JOIN ariba.basic.core.Currency AS AwardedSavingsCurrency USING AwardedSavingsMoney1.Currency
                                      LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS AwardedTotalMoney USING AwardingItemValue.TOTALCOST
                                      LEFT OUTER JOIN ariba.basic.core.Currency AS AwardedTotalCurrency USING AwardedTotalMoney.Currency,
                                      ariba.sourcing.content.Alternative AS AwardItemSlice SUBCLASS NONE"
                          whereClause="SourcingProject.WorkspaceType != 'Template'
                                       AND ThisRFX.EventType IN ('2','3','4','6')
                                       AND AwardItemSlice.SliceId = AwardingItemValue.SliceId
                                       AND AwardingItemValue.SliceIncarnationVersion &lt;= AwardItemSlice.VersionId
                                       AND AwardingItemValue.SliceExtinctionVersion &gt;= AwardItemSlice.VersionId
                                       AND AwardItemSlice.AlternativeStatus = 3
                                       AND AwardItemSlice.SliceType = 7
                                       AND AwardingItemValue.ItemId = RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId
                                       AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemIndex != 0
                                       AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus = 13
                                       AND ThisRFX.NextVersion IS NULL
                                       AND ThisRFX.IsAvailableForAnalysis = true
                                       AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                                       AND ThisRFX.Status = 'Complete'
                                       AND AwardingItemValue.NextVersion IS NULL"
                          incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                             ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                             RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                             RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                          orderByClause="AwardingItemValue.ItemId"
                          distinctFlag="true"/>
                 <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
            </loadStages>
            <fieldMappings>
                <field name="Event.EventId">
                    <aqlMapping selectField="ThisRFX.InternalId"
                        sourceLookupField="InternalId"/>
                </field>
                <field name="Event.ItemId">
                    <aqlMapping selectField="AwardingItemValue.ItemId"/>
                </field>
                <field name="Event.VersionNumber">
                    <aqlMapping selectField="ThisRFX.DocumentVersion"/>
                </field>
                <field name="Supplier.SupplierId">
                    <aqlMapping selectField="AwardedOrg.SystemID"/>
                </field>
                <field name="Supplier.SupplierLocationId">
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.Constant">
                            <parameter name="Constant" value=""/>
                        </mapValue>
                    </analysisMapping>
                </field>
                <field name="Bidder.UserId">
                    <aqlMapping selectField="AwardedSupplier.UniqueName"/>
                </field>
                <field name="Bidder.PasswordAdapter">
                    <aqlMapping selectField="AwardedSupplier.PasswordAdapter"/>
                </field>
                <field name="AwardedAmount.Amount">
                    <aqlMapping selectField="CASE AwardedTotalMoney.Amount WHEN NULL THEN AwardedExtPrice.Amount ELSE AwardedTotalMoney.Amount END"/>
                </field>
                <field name="AwardedAmount.Currency">
                    <aqlMapping selectField="CASE AwardedTotalCurrency.UniqueName WHEN NULL THEN AwardedExtCurrency.UniqueName ELSE AwardedTotalCurrency.UniqueName END"/>
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                            <parameter name="DefaultValue" value="USD"/>
                        </mapValue>
                        <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                            <parameter name="MapType" value="SourceSystemCurrency"/>
                        </mapValue>
                    </analysisMapping>
                </field>
                <field name="AwardedAmount.Date">
                    <aqlMapping selectField="CASE AwardedTotalMoney.ConversionDate WHEN NULL THEN AwardedExtPrice.ConversionDate ELSE AwardedTotalMoney.ConversionDate END"/>
                </field>
                <field name="SupplierAwardedHist.Amount">
                    <aqlMapping selectField="AwardedSavingsMoney1.Amount"/>
                </field>
                <field name="SupplierAwardedHist.Currency">
                    <aqlMapping selectField="AwardedSavingsCurrency.UniqueName"/>
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                            <parameter name="DefaultValue" value="USD"/>
                        </mapValue>
                        <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                            <parameter name="MapType" value="SourceSystemCurrency"/>
                        </mapValue>
                    </analysisMapping>
                </field>
                <field name="SupplierAwardedHist.Date">
                    <aqlMapping selectField="AwardedSavingsMoney1.ConversionDate"/>
                </field>
            </fieldMappings>
    </dataLoad>

    <!--
        SupplierParticipationAwardLoadLarge - This pull is the same as SupplierParticipationAwardLoad except that it will only pull for format event,
        and it only returns 1 row, the root item, to summarize all supplier specific inforation, and store them to fact.SupplierParticipation.
    -->
    <dataLoad name="SupplierParticipationAwardLoadLarge">
            <loadStages>
                <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                      JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                      JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                      ariba.sourcing.content.RFXAwardingItemValue AS AwardingItemValue
                                      JOIN ariba.user.core.User AS AwardedSupplier INCLUDE INACTIVE USING AwardingItemValue.Supplier
                                      JOIN ariba.user.core.Organization AS AwardedOrg INCLUDE INACTIVE USING AwardedSupplier.Organization
                                      LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS AwardedExtPrice USING AwardingItemValue.EXTENDEDPRICE
                                      LEFT OUTER JOIN ariba.basic.core.Currency AS AwardedExtCurrency USING AwardedExtPrice.Currency
                                      LEFT OUTER JOIN ariba.sourcing.basic.MoneyDifference AS RFXItemSavingsMoney USING AwardingItemValue.SAVINGS
                                      LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS AwardedSavingsMoney1 USING RFXItemSavingsMoney.Amount1
                                      LEFT OUTER JOIN ariba.basic.core.Currency AS AwardedSavingsCurrency USING AwardedSavingsMoney1.Currency
                                      LEFT OUTER JOIN ariba.sourcing.basic.UCMoney AS AwardedTotalMoney USING AwardingItemValue.TOTALCOST
                                      LEFT OUTER JOIN ariba.basic.core.Currency AS AwardedTotalCurrency USING AwardedTotalMoney.Currency,
                                      ariba.sourcing.content.Alternative AS AwardItemSlice SUBCLASS NONE"
                          whereClause="SourcingProject.WorkspaceType != 'Template'
                                       AND ThisRFX.EventType IN ('2','3','4','6')
                                       AND AwardItemSlice.AlternativeStatus = 3
                                       AND AwardItemSlice.SliceType = 7
                                       AND AwardingItemValue.ItemId = ThisRFX.Content.ItemId
                                       AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemIndex = 0
                                       AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus = 7
                                       AND ThisRFX.NextVersion IS NULL
                                       AND ThisRFX.IsAvailableForAnalysis = true
                                       AND ThisRFX.Rules.RFXFormat = 2
                                       AND ThisRFX.Status = 'Complete'
                                       AND AwardingItemValue.NextVersion IS NULL"
                          incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                             ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                             RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                             RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"
                          orderByClause="AwardingItemValue.ItemId"
                          distinctFlag="true"/>
                 <analysisStage destinationName="ariba.analytics.fact.SupplierParticipation"/>
            </loadStages>
            <fieldMappings>
                <field name="Event.EventId">
                    <aqlMapping selectField="ThisRFX.InternalId"
                        sourceLookupField="InternalId"/>
                </field>
                <field name="Event.ItemId">
                    <aqlMapping selectField="AwardingItemValue.ItemId"/>
                </field>
                <field name="Event.VersionNumber">
                    <aqlMapping selectField="ThisRFX.DocumentVersion"/>
                </field>
                <field name="Supplier.SupplierId">
                    <aqlMapping selectField="AwardedOrg.SystemID"/>
                </field>
                <field name="Supplier.SupplierLocationId">
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.Constant">
                            <parameter name="Constant" value=""/>
                        </mapValue>
                    </analysisMapping>
                </field>
                <field name="Bidder.UserId">
                    <aqlMapping selectField="AwardedSupplier.UniqueName"/>
                </field>
                <field name="Bidder.PasswordAdapter">
                    <aqlMapping selectField="AwardedSupplier.PasswordAdapter"/>
                </field>
                <field name="AwardedAmount.Amount">
                    <aqlMapping selectField="CASE AwardedTotalMoney.Amount WHEN NULL THEN AwardedExtPrice.Amount ELSE AwardedTotalMoney.Amount END"/>
                </field>
                <field name="AwardedAmount.Currency">
                    <aqlMapping selectField="CASE AwardedTotalCurrency.UniqueName WHEN NULL THEN AwardedExtCurrency.UniqueName ELSE AwardedTotalCurrency.UniqueName END"/>
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                            <parameter name="DefaultValue" value="USD"/>
                        </mapValue>
                        <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                            <parameter name="MapType" value="SourceSystemCurrency"/>
                        </mapValue>
                    </analysisMapping>
                </field>
                <field name="AwardedAmount.Date">
                    <aqlMapping selectField="CASE AwardedTotalMoney.ConversionDate WHEN NULL THEN AwardedExtPrice.ConversionDate ELSE AwardedTotalMoney.ConversionDate END"/>
                </field>
                <field name="SupplierAwardedHist.Amount">
                    <aqlMapping selectField="AwardedSavingsMoney1.Amount"/>
                </field>
                <field name="SupplierAwardedHist.Currency">
                    <aqlMapping selectField="AwardedSavingsCurrency.UniqueName"/>
                    <analysisMapping>
                        <mapValue implementation="ariba.analytics.mapValue.ReplaceNull">
                            <parameter name="DefaultValue" value="USD"/>
                        </mapValue>
                        <mapValue implementation="ariba.analytics.mapValue.ValueForMapType">
                            <parameter name="MapType" value="SourceSystemCurrency"/>
                        </mapValue>
                    </analysisMapping>
                </field>
                <field name="SupplierAwardedHist.Date">
                    <aqlMapping selectField="AwardedSavingsMoney1.ConversionDate"/>
                </field>
            </fieldMappings>
    </dataLoad>

    <dataLoad name="EventItemVersionUpdate">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS OldRFX INCLUDE INACTIVE
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING OldRFX.RuntimeData,
                                  ariba.sourcing.rfx.RFXDocument AS CurrentRFX INCLUDE INACTIVE
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject INCLUDE INACTIVE USING CurrentRFX.ParentWorkspace,
                                  ariba.sourcing.content.RFXItem AS RFXItem"
                      whereClause="SourcingProject.WorkspaceType != 'Template'
                            AND CurrentRFX.EventType IN ('1','2','3','4','6')
                            AND OldRFX.Content.ItemId = RFXItem.RootItemId
                            AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = RFXItem.ItemId
                            AND RFXItem.IsRealItem = true
                            AND ((RFXItem.ItemType = 1
                                  AND CurrentRFX.Rules.RFXFormat = 2
                                  AND CurrentRFX.Content.ItemId = RFXItem.ItemId)
                                 OR
                                 (RFXItem.ItemType > 3
                                  AND (CurrentRFX.Rules.RFXFormat IS NULL OR CurrentRFX.Rules.RFXFormat != 2)))
                            AND RFXItem.ItemSubType != 20
                            AND CurrentRFX.IsAvailableForAnalysis = true
                            AND CurrentRFX.Status = 'Complete'
                            AND CurrentRFX.NextVersion IS NULL
                            AND CurrentRFX.DocumentId = OldRFX.DocumentId"
                      incrementalClause="CurrentRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                         CurrentRFX.TimeUpdated &lt;= :IncrementalEndDate"
                      orderByClause="CurrentRFX.InternalId"/>
            <analysisStage destinationName="ariba.analytics.dimension.Event"/>
        </loadStages>
        <fieldMappings>
            <field name="ItemId">
                <aqlMapping selectField="RFXItem.ItemId"/>
            </field>
            <field name="EventId">
                <aqlMapping selectField="CurrentRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="VersionNumber">
                <aqlMapping selectField="OldRFX.DocumentVersion"/>
            </field>
            <field name="IsLastVersion">
                <aqlMapping selectField="CASE OldRFX.NextVersion WHEN NULL THEN CurrentRFX.Active ELSE FALSE END"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="EventVersionUpdate">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS OldRFX INCLUDE INACTIVE,
                                  ariba.sourcing.rfx.RFXDocument AS CurrentRFX INCLUDE INACTIVE
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject INCLUDE INACTIVE USING CurrentRFX.ParentWorkspace"
                      whereClause="SourcingProject.WorkspaceType != 'Template'
                            AND CurrentRFX.EventType IN ('1','2','3','4','6')
                            AND (CurrentRFX.IsAvailableForAnalysis = true OR CurrentRFX.IsAvailableForAnalysisSummaryReport = true)
                            AND CurrentRFX.Status = 'Complete'
                            AND CurrentRFX.NextVersion IS NULL
                            AND CurrentRFX.DocumentId = OldRFX.DocumentId"
                      incrementalClause="CurrentRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                         CurrentRFX.TimeUpdated &lt;= :IncrementalEndDate"
                      orderByClause="CurrentRFX.InternalId"/>
             <analysisStage destinationName="ariba.analytics.dimension.Event"/>
        </loadStages>
        <fieldMappings>
            <field name="ItemId">
                <aqlMapping selectField="CurrentRFX.InternalId"/>
            </field>
            <field name="EventId">
                <aqlMapping selectField="CurrentRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="VersionNumber">
                <aqlMapping selectField="OldRFX.DocumentVersion"/>
            </field>
            <field name="IsLastVersion">
                <aqlMapping selectField="CASE OldRFX.NextVersion WHEN NULL THEN CurrentRFX.Active ELSE FALSE END"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxEventSummaryEventEndDateLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = ThisRFX.Content.ItemId
                             AND ThisRFX.EventType IN ('1','2','3','4','6')
                             AND (ThisRFX.IsAvailableForAnalysis = true OR ThisRFX.IsAvailableForAnalysisSummaryReport = true)
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"/>
            <analysisStage destinationName="ariba.analytics.fact.EventSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="EventEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.CompletedDate"/>
            </field>
        </fieldMappings>
    </dataLoad>
    <dataLoad name="RfxEventParticipationEventEndDateLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  INNER JOIN ariba.user.core.User AS RFXInvitee INCLUDE INACTIVE USING ThisRFX.Invitees"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = ThisRFX.Content.ItemId
                             AND RFXRuntimeData.RFXReportData.RFXSupplierData.InvitedUser = RFXInvitee
                             AND ThisRFX.EventType IN ('1','2','3','4','6')
                             AND (ThisRFX.IsAvailableForAnalysis = true OR ThisRFX.IsAvailableForAnalysisSummaryReport = true)
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"/>
            <analysisStage destinationName="ariba.analytics.fact.EventParticipation"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="Supplier.SupplierId">
                <aqlMapping selectField="RFXInvitee.Organization.SystemID"/>
            </field>
            <field name="Supplier.SupplierLocationId">
                <analysisMapping>
                    <mapValue implementation="ariba.analytics.mapValue.Constant">
                        <parameter name="Constant" value=""/>
                    </mapValue>
                </analysisMapping>
            </field>
            <field name="Bidder.UserId">
                <aqlMapping selectField="RFXInvitee.UniqueName"/>
            </field>
            <field name="Bidder.PasswordAdapter">
                <aqlMapping selectField="RFXInvitee.PasswordAdapter"/>
            </field>
            <field name="EventEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.CompletedDate"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="RfxItemSummaryEventEndDateLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.sourcing.rfx.SourcingProject AS SourcingProject USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.content.RFXItem AS RFXItem"
                whereClause="SourcingProject.WorkspaceType != 'Template'
                             AND ThisRFX.EventType IN ('2','3','4','6')
                             AND RFXRuntimeData.RFXReportData.RFXItemSummaryData.ItemId = RFXItem.ItemId
                             AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = RFXItem.ItemId
                             AND ThisRFX.Content.ItemId = RFXItem.RootItemId
                             AND RFXItem.IsRealItem = true
                             AND RFXItem.ItemType > 3
                             AND RFXItem.ItemSubType != 20
                             AND ThisRFX.IsAvailableForAnalysis = true
                             AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)
                             AND ThisRFX.Status = 'Complete'
                             AND ThisRFX.NextVersion IS NULL"
                incrementalClause="ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate OR
                                   RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate"/>
            <analysisStage destinationName="ariba.analytics.fact.RfxItemSummary"/>
        </loadStages>
        <fieldMappings>
            <field name="Event.ItemId">
                <aqlMapping selectField="RFXItem.ItemId"/>
            </field>
            <field name="Event.EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="Event.VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="EventEndDate">
                <aqlMapping selectField="RFXRuntimeData.RFXDerivedTimingRule.CompletedDate"/>
            </field>
        </fieldMappings>
    </dataLoad>


    <dataLoad name="MigrateLargeEventItemLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.collaborate.core.Workspace AS SourcingProject SUBCLASS ariba.sourcing.rfx.SourcingProject INCLUDE INACTIVE USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData
                                  JOIN ariba.basic.core.Currency AS RFXCurrency INCLUDE INACTIVE USING ThisRFX.Currency,
                                  ariba.sourcing.rfx.RFXDocument AS RFXTemplate INCLUDE INACTIVE
                                  JOIN ariba.collaborate.core.Workspace AS SourcingProjectTemplate SUBCLASS ariba.sourcing.rfx.SourcingProject  INCLUDE INACTIVE USING RFXTemplate.ParentWorkspace"
               whereClause="ThisRFX.ActualTemplateObject is not NULL
                            AND ThisRFX.EventType IN ('1','2','3','4','6')
                            AND ThisRFX.IsAvailableForAnalysis = true
                            AND ThisRFX.Status = 'Complete'
                            AND ThisRFX.NextVersion IS NULL
                            AND ThisRFX.ActualTemplateObject.ProcessId = RFXTemplate.ProcessId
                            AND ThisRFX.PartitionNumber = RFXTemplate.PartitionNumber
                            AND RFXTemplate.TemplateObject is NULL
                            AND SourcingProjectTemplate.TemplateProjectAddin is NOT NULL
                            AND SourcingProjectTemplate.TemplateObject is NULL
                            AND SourcingProject.TemplateProjectAddin is NULL
                            AND SourcingProject.TemplateObject is NOT NULL
                            AND SourcingProjectTemplate.PartitionNumber = SourcingProject.PartitionNumber
                            AND (SourcingProjectTemplate.Status = 'Active' OR SourcingProjectTemplate.Status = 'InActive')
                            AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemStatus = 0
                            AND RFXItem.IsRealItem = true
                            AND RFXItem.ItemType = 1
                            AND ThisRFX.Rules.RFXFormat = 2"
                incrementalClause="(ThisRFX.TimeUpdated &gt;= :IncrementalStartDate AND
                                   ThisRFX.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXRuntimeData.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXRuntimeData.TimeUpdated &lt;= :IncrementalEndDate) OR
                                   (RFXTemplate.TimeUpdated &gt;= :IncrementalStartDate AND
                                   RFXTemplate.TimeUpdated &lt;= :IncrementalEndDate)"
                orderByClause="ThisRFX.InternalId"/>
        <analysisStage destinationName="ariba.analytics.dimension.Event"/>
        </loadStages>
        <fieldMappings>
            <field name="ItemId">
                <aqlMapping selectField="ThisRFX.Content.ItemId"/>
            </field>
            <field name="EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="EventTitle">
                <aqlMapping selectField="ThisRFX.Title"/>
            </field>
            <field name="EventDescription">
                <aqlMapping selectField="ThisRFX.Description"/>
            </field>
            <field name="VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="ItemType">
                <analysisMapping>
                     <mapValue implementation="ariba.analytics.mapValue.Constant">
                         <parameter name="Constant" value="1"/>
                     </mapValue>
                </analysisMapping>
            </field>
            <field name="EventType">
                <aqlMapping selectField="ThisRFX.EventType"/>
            </field>
            <field name="EventStatus">
                <aqlMapping selectField="ThisRFX.EventState"/>
            </field>
            <field name="LotStatus">
                <aqlMapping selectField="CASE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus WHEN 7 THEN 14
                                         ELSE RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.CurrentStatus END"/>
            </field>
            <field name="EventTemplateId">
                <aqlMapping selectField="RFXTemplate.ProcessId"/>
            </field>
            <field name="EventTemplateName">
                <aqlMapping selectField="RFXTemplate.Title"/>
            </field>
            <field name="TestEvent">
                <aqlMapping selectField="ThisRFX.IsTest"/>
            </field>
            <field name="EventCurrency">
                <aqlMapping selectField="RFXCurrency.Name"/>
            </field>
            <field name="LeadBidInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.LeadBidInfoRelease"/>
            </field>
            <field name="CompetitorBidsInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.CompetitorBidsInfoRelease"/>
            </field>
            <field name="StartGateInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.StartGateInfoRelease"/>
            </field>
            <field name="ImprovementType">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.ImprovementType"/>
            </field>
            <field name="TieBidRule">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.TieBidRule.RankPosition"/>
            </field>
            <field name="AllowScoring">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.AllowScoring"/>
            </field>
            <field name="AllowMultiCurrency">
                <aqlMapping selectField="ThisRFX.GlobalBiddingRules.AllowMultiCurrency"/>
            </field>
            <field name="OwnRankingInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.OwnRankingInfoRelease"/>
            </field>
            <field name="SupplierNamesInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.SupplierNamesInfoRelease"/>
            </field>
            <field name="CompetitorRankInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.CompetitorRankInfoRelease"/>
            </field>
            <field name="ParticipantSpecificValuesInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.ParticipantSpecificValuesInfoRelease"/>
            </field>
            <field name="OwnerSeeBids">
                <aqlMapping selectField="ThisRFX.Rules.OwnerSeeBids"/>
            </field>
            <field name="AllowSeeWeight">
                <aqlMapping selectField="ThisRFX.Rules.AllowSeeWeight"/>
            </field>
            <field name="ExchangeRateInfoRelease">
                <aqlMapping selectField="ThisRFX.Rules.ExchangeRateInfoRelease"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="MigrateEventItemProjectIdLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX
                                  JOIN ariba.collaborate.core.Workspace AS SourcingProject SUBCLASS ariba.sourcing.rfx.SourcingProject INCLUDE INACTIVE USING ThisRFX.ParentWorkspace
                                  JOIN ariba.sourcing.rfx.RFXRuntimeData AS RFXRuntimeData USING ThisRFX.RuntimeData,
                                  ariba.sourcing.rfx.RFXDocument AS RFXTemplate INCLUDE INACTIVE
                                  JOIN ariba.collaborate.core.Workspace AS SourcingProjectTemplate SUBCLASS ariba.sourcing.rfx.SourcingProject  INCLUDE INACTIVE USING RFXTemplate.ParentWorkspace,
                                  ariba.sourcing.content.RFXItem AS RFXItem"
               whereClause="ThisRFX.ActualTemplateObject is not NULL
                            AND ThisRFX.EventType IN ('1','2','3','4','6')
                            AND ThisRFX.IsAvailableForAnalysis = true
                            AND ThisRFX.Status = 'Complete'
                            AND ThisRFX.NextVersion IS NULL
                            AND ThisRFX.ActualTemplateObject.ProcessId = RFXTemplate.ProcessId
                            AND ThisRFX.PartitionNumber = RFXTemplate.PartitionNumber
                            AND RFXTemplate.TemplateObject is NULL
                            AND SourcingProjectTemplate.TemplateProjectAddin is NOT NULL
                            AND SourcingProjectTemplate.TemplateObject is NULL
                            AND SourcingProject.TemplateProjectAddin is NULL
                            AND SourcingProject.TemplateObject is NOT NULL
                            AND SourcingProjectTemplate.PartitionNumber = SourcingProject.PartitionNumber
                            AND (SourcingProjectTemplate.Status = 'Active' OR SourcingProjectTemplate.Status = 'InActive')
                            AND RFXRuntimeData.RFXDerivedTimingRule.RFXLineTimingRules.ItemId = RFXItem.ItemId
                            AND RFXItem.IsRealItem = true
                            AND ((RFXItem.ItemType = 1
                                  AND ThisRFX.Rules.RFXFormat = 2
                                  AND ThisRFX.Content.ItemId = RFXItem.ItemId)
                                 OR
                                 (RFXItem.ItemType > 3
                                  AND (ThisRFX.Rules.RFXFormat IS NULL OR ThisRFX.Rules.RFXFormat != 2)))
                            AND RFXItem.ItemSubType != 20"
               orderByClause="ThisRFX.InternalId"/>
        <analysisStage destinationName="ariba.analytics.dimension.Event"/>
        </loadStages>
        <fieldMappings>
            <field name="ItemId">
                <aqlMapping selectField="RFXItem.ItemId"/>
            </field>
             <field name="EventId">
                <aqlMapping selectField="ThisRFX.InternalId"
                    sourceLookupField="InternalId"/>
            </field>
            <field name="VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="ProjectId">
                 <aqlMapping selectField="SourcingProject.InternalId"/>
            </field>
        </fieldMappings>
    </dataLoad>

    <dataLoad name="MigrateEventProjectIdLoad">
        <loadStages>
            <aqlStage fromClause="ariba.sourcing.rfx.RFXDocument AS ThisRFX INCLUDE INACTIVE
                                    JOIN ariba.collaborate.core.Workspace AS SourcingProject SUBCLASS ariba.sourcing.rfx.SourcingProject INCLUDE INACTIVE USING ThisRFX.ParentWorkspace,
                                   ariba.sourcing.rfx.RFXDocument AS RFXTemplate INCLUDE INACTIVE
                                    JOIN ariba.collaborate.core.Workspace AS SourcingProjectTemplate SUBCLASS ariba.sourcing.rfx.SourcingProject  INCLUDE INACTIVE USING RFXTemplate.ParentWorkspace"
               whereClause="ThisRFX.ActualTemplateObject is not NULL
                            AND ThisRFX.EventType IN ('1','2','3','4','6')
                            AND ThisRFX.IsAvailableForAnalysis = true
                            AND ThisRFX.Status = 'Complete'
                            AND ThisRFX.PartitionNumber = RFXTemplate.PartitionNumber
                            AND ThisRFX.ActualTemplateObject.ProcessId = RFXTemplate.ProcessId
                            AND ThisRFX.NextVersion IS NULL
                            AND RFXTemplate.TemplateObject is NULL
                            AND SourcingProjectTemplate.TemplateProjectAddin is NOT NULL
                            AND SourcingProjectTemplate.TemplateObject is NULL
                            AND SourcingProject.TemplateProjectAddin is NULL
                            AND SourcingProject.TemplateObject is NOT NULL
                            AND SourcingProjectTemplate.PartitionNumber = SourcingProject.PartitionNumber
                            AND (SourcingProjectTemplate.Status = 'Active' OR SourcingProjectTemplate.Status = 'InActive')"
                orderByClause="ThisRFX.InternalId"/>
            <analysisStage destinationName="ariba.analytics.dimension.Event"/>
        </loadStages>
        <fieldMappings>
            <field name="ItemId">
                <aqlMapping selectField="ThisRFX.InternalId" sourceLookupField="InternalId"/>
            </field>
            <field name="EventId">
                <aqlMapping selectField="COALESCE(ThisRFX.InternalId, ThisRFX.InternalId)"/>
            </field>
            <field name="VersionNumber">
                <aqlMapping selectField="ThisRFX.DocumentVersion"/>
            </field>
            <field name="ProjectId">
                <aqlMapping selectField="SourcingProject.InternalId"/>
            </field>
        </fieldMappings>
    </dataLoad>
</allDataLoads>