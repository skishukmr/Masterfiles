<w:BasicPageWrapper hasForm="$true">

    Operation: <a:Popup list="$operations" item="$op" selection="$selectedOperation" action="$null">$op</a:Popup>
    <hr/>

<m:Context operation="$selectedOperation">
    <m:Rules>
        class=example.ui.busobj.Person {
            field=email { label:"E-mail" }
            field=(firstName, lastName, email) { traits:required }
            operation=create {
                visible:null;
                field=(firstName, lastName, phoneNumber) {visible:true}
            }
            operation=view {
                field=email { after:lastName }
                field=birthDay { after:email }
            }
        }

        layout="*" { visible:true }
        
        class=example.ui.busobj.User {
            field=rating {
                editable=false {component:AWXRatingBar;}
                editable { bindings:{isRefresh:true} }
                after:zTop;
            }
            field=(email, phoneNumber) { after:zRight }
            field=bio {
                traits:required; after:zBottom;
                editing { editable:${object.rating > 50} }
            }
            field=password { traits:required; after:email; valid:${value.length > 5 ? true : "Bad password, dude" }}
            operation=create { field=password {visible:true} }

            operation=view {
                @field=dynamicField {traits:derived, truncated; type:java.lang.String; value:${"dynomite dynamic: " + object.firstName} }
                @field=extra { traits:derived; type:java.lang.String; value:${"EXTRA: " + object.firstName} }
                field=password { visible:${value && value!=""}; label:"PSS" }
            }

            layoutProperties { component:MetaTabs }   /* or traits: TabSet */
            @layout=Overview {
                layoutProperties {
                    component:MetaForm;   /* or traits: Form,  or *default* */
                }
                field="*" {visible:null}
                field=(firstName, lastName, phoneNumber) {visible:true}

            }
            @layout=Details {
                layoutProperties {
                    label:"Details, Details, Details!";
                    component:MetaSections;   /* or traits: Sections */
                }
                field=(firstName, lastName, phoneNumber) {visible:false}
                @layout=First {
                    layoutProperties {
                        component:MetaForm;   /* or traits: Sections */
                    }
                }
                @layout=Second {
                    layoutProperties {
                        component:MetaForm;   /* or traits: Sections */
                    }
                }
            }
        }
    </m:Rules>
    <!---

                @layout=Lead {
                    label:"Deal Lead";
                    component:MetaForm;   /* or traits: Form,  or *default* */
                }
                @layout=Contacts {
                    label:"Contacts";
                    component:MetaForm;   /* or traits: Form,  or *default* */
                }


                    @layout=Lead {
                        label:"Deal Lead";
                        component:MetaForm;   /* or traits: Form,  or *default* */
                        object:${object.lead}  /* propagate item into the context */
                    }
                    @layout=Contacts {
                        label:"Contacts";
                        component:DataTable;   /* or traits: Table  */
                        object:${object.contacts}  /* propagate list into the context */
                    }
    -->
    <m:Context object="$user">
        <!--- MetaContext: $metaContext, resolvedProps = $metaContext.properties -->
        <m:Tabs/>
        <!---
        <a:Include name="Nested.htm"/>
        -->
    </m:Context>

    <a:If ifTrue="$metaContext.properties.editing">
        <br/><hr/><br/>
        <w:TextButton action="$save">Save</w:TextButton>
    </a:If>
</m:Context>
</w:BasicPageWrapper>\

<groovy>
    import example.ui.busobj.*;

    def op, selectedOperation = "view", operations = ["create", "edit", "view"];
    def user = new User(firstName : "Joe", lastName : "Blow", rating:30);

    def save () {
        if (errorManager().checkErrorsAndEnableDisplay()) return null;
        // Do save...
        return null;
    }
</groovy>
