<w:ModalPageWrapper title="Edit User List (ClientWrapper)" okAction="$okAction">
    <t:DataTable list="$users" item="$user" enableScrolling="$true">
        <t:Column label="Name" nowrap>
            <a:HighLightedErrorScope>\
                <w:ErrorIndicator/>\
                <a:TextField value="$user.Name" formatter="$formatters.requiredString"/>
            </a:HighLightedErrorScope>
        </t:Column>
        <t:Column label="Title">
            <a:TextField value="$user.Title"/>
        </t:Column>
        <t:Column label="Company">
            <w:Chooser selectionSource="$companySource" state="$companyChooserState"/>
        </t:Column>
        <t:ButtonArea>
            <w:TextButton action="$add">Add</w:TextButton>
            <w:TextButton action="$massAdd">Mass Add</w:TextButton>
            <w:TextButton action='$modalPage'>Modal Page...</w:TextButton>
            Details: <a href="TETestPanel.htm">Page</a> <a href="TETestPanel.htm#panel">Panel</a>
        </t:ButtonArea>
    </t:DataTable>
    <br/>
    Date:  <w:DateField value="$testDate"/><br/>
    Some popup: <w:PopupMenuLink menuId="myMenu">Menu Here...</w:PopupMenuLink>
    <w:PopupMenu menuId="myMenu">
        <w:PopupMenuItem>Item 1</w:PopupMenuItem>
        <w:PopupMenuItem>Item 2</w:PopupMenuItem>
        <w:PopupMenuItem>Item 3</w:PopupMenuItem>
    </w:PopupMenu>
</w:ModalPageWrapper>
\
<groovy>
    def users, user;
    def testDate = new ariba.util.core.Date();
    ChooserState companyChooserState;
    ChooserSelectionSource companySource = new ChooserSelectionSource.ListSource(
        ('a'..'z').inject([]) { l, k -> (1..9).each { l += "${k}${it}".toString() }; l }, null);

    def okAction ()
    {
        // show some page -- just returning current page in this example
        return (errorManager().checkErrorsAndEnableDisplay()) ? null : pageComponent();
    }

    def add () {
        users.add([:]);
        return null;
    }

    def massAdd () {
        (1..40).each { users.add([Name: "Joe${it}", Title: "Employee", Company: "Ariba"]) }
        return null;
    }

    def modalPage () {
        return pageWithName("ExpressionTest.htm");
    }
</groovy>
