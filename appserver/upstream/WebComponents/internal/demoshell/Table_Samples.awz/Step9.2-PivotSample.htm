<t:DataTable list="$list" displayGroup="$displayGroup" multiSelect="$showSelection"
        enableScrolling="$true" showOptionsMenu="$true" title="Bid Data!"
        pivotLayout="$layout.c" forceColumnUpdate="$layoutChangeLatch"
        columnFields="$layout.c" rowFields="$layout.r" columnAttributes="$layout.a"
        overrideAttribute="$answerColumnName" showRowAttributes="$showDetails">

    <t:HeadingArea>
        <div style="float:left">
            Layout: <a:Popup list="$layouts" item="$iter" selection="$layout" action="$optionsChanged">$iter.name</a:Popup>
        </div>
        <div style="float:left">
            <w:TextButton action="$showFilterPanel">Filter</w:TextButton>
        </div>
        <div style="float:right;padding-right:4px">
            <a:Checkbox value="$showSelection" action="$optionsChanged"/>Show Selection
        </div>
    </t:HeadingArea>

    <t:Column key="Item" nowrap wantsSpan="$true">$displayGroup.currentItem.Item $displayGroup.currentItem.ItemDesc</t:Column>
    <t:Column key="Region" wantsSpan="$true" isBlank='$!displayGroup.currentItem.Region'/>
    <t:Column key="Year" wantsSpan="$true"/>
    <t:Column key="Quarter" wantsSpan="$true"/>
    <t:Column key="Supplier" wantsSpan="$true" isBlank='$!displayGroup.currentItem.Supplier'/>
    <t:Column key="Price" nowrap>
        <a:TextField value="$displayGroup.currentItem.Price" formatter="$formatters.money" size=9 style="text-align:right"/>
        <a:If ifTrue="$showFlag">
            <a:Hyperlink action="$inspect"><span style="color:red">*</span></a:Hyperlink>
        </a:If>
    </t:Column>

    <!--- crazy / unnecessary use of DynamicColumns for testing purposes... -->
    <t:DynamicColumns list='${["Quantity", "ExtendedPrice"]}' item="$curCol" key="$curCol" label="$curCol" isBlank="$isQuestion" wantsSpan="$true">
        <a:If ifTrue='${curCol=="Quantity"}'>
            <a:String value="$displayGroup.currentItem.Quantity" formatter="$formatters.integer"/>
        <a:Else ifTrue='${curCol=="ExtendedPrice"}'/>
            EP:<a:String value="$displayGroup.currentItem.ExtendedPrice" formatter="$formatters.money"/> ***
        </a:If>
    </t:DynamicColumns>
    
    <t:Column key="Color" isBlank="$isQuestion"/>
    <t:Column key="Size" isBlank="$isQuestion"/>
    <t:Column key="Answer" label="GOPAL" wantsSpan="$true" initiallyVisible="$false" isOptional="$false"/>
</t:DataTable>

<a:SetValue panelId="$requestContext.nextElementId"/>\
<w:Confirmation id="$panelId">\
    <a:Content name="header">Object Inspector</a:Content>\
    <a:Content name="content">
        $inspectedObject
    </a:Content>\
</w:Confirmation>\
\
<groovy>
    def displayGroup, layoutChangeLatch, iter;
    def layouts = [
        [name:"Non-Pivot"],
        [name:"By Supplier", c:["Supplier"], r:["Item", "Year", "Quarter", "Region"], a:["Price", "Quantity"], da:["ExtendedPrice", "Color", "Size"]],
        [name:"By Date", c:["Year", "Quarter"], r:["Item", "Region", "Supplier"], a:["Price", "Quantity"], da:["ExtendedPrice", "Color", "Size"]],
        [name:"By Date and Region", c:["Year", "Quarter", "Region"], r:["Item", "Supplier"], a:["Price", "Quantity"], da:["ExtendedPrice", "Color", "Size"]],
        [name:"Qtr then Year", c:["Quarter", "Year"], r:["Item", "Region", "Supplier"], a:["Price", "Quantity", "ExtendedPrice"], da:["Color", "Size"]],
        [name:"By Region", c:["Region"], r:["Item", "Year", "Quarter", "Supplier"], a:["Price", "Quantity", "ExtendedPrice"], da:["Color", "Size"]],
        [name:"No CF, Two Attrs", c:[], r:["Item", "Region", "Year", "Quarter", "Supplier"], a:["Price", "Quantity"], da:["ExtendedPrice", "Color", "Size"]],
        [name:"No CF, No Attrs", c:[], r:["Item", "Region", "Year", "Quarter", "Supplier"], a:[], da:["Price", "Quantity", "ExtendedPrice", "Color", "Size"]],
        [name:"One CF, One Attr", c:["Supplier"], r:["Item", "Region", "Year", "Quarter"], a:["Price"], da:["ExtendedPrice", "Color", "Size"]],
        [name:"Two CF, One Attr", c:["Year", "Quarter"], r:["Item", "Region", "Supplier"], a:["Price"], da:["ExtendedPrice", "Color", "Size"]],
        [name:"One CF, No Attrs", c:["Supplier"], r:["Item", "Region", "Year", "Quarter"], a:[], da:["ExtendedPrice", "Color", "Size"]],
        [name:"Two CF, No Attrs", c:["Year", "Quarter"], r:["Item", "Region", "Supplier"], a:[], da:["ExtendedPrice", "Color", "Size"]]
    ];
    def layout = layouts[2];
    def allObjects, list;
    def showSelection = true;

    void init () {
        list = allObjects = AWTCSVDataSource.dataSourceForPath("BidData.csv", this).fetchObjects();
    }

    def showFilterPanel () {
        def panel = pageWithName("FilterPanel.htm");
        panel.init(allObjects, ["Supplier", "Region", "Year"], { list = it; return pageComponent() });
        panel.setClientPanel(true);
        return panel;
    }

    def optionsChanged () {
        layoutChangeLatch = true;
        return null;
    }

    def showFlag () {
        return displayGroup.currentItem().ExtendedPrice > 20000;
    }

    def answerColumnName () {
        return (displayGroup.currentItem().Answer) ? "Answer" : null;
    }

    def isQuestion () {
        return (displayGroup.currentItem().Answer != null);
    }

    def showDetails = false;
    def rowAttributes () {
        return (showDetails) ? layout["da"] : null;
    }

    def panelId = null;
    def inspectedObject = null;

    def inspect () {
        inspectedObject = displayGroup.currentItem();
        return Confirmation.showConfirmation(component.requestContext(), panelId);
    }
</groovy>
